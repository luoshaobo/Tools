/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -p NetCorpMyAppFrobberProxy ../net.Corp.MyApp.Frobber.xml
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef NETCORPMYAPPFROBBERPROXY_H
#define NETCORPMYAPPFROBBERPROXY_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface net.Corp.MyApp.Frobber
 */
class NetCorpMyAppFrobberInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "net.Corp.MyApp.Frobber"; }

public:
    NetCorpMyAppFrobberInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~NetCorpMyAppFrobberInterface();

    Q_PROPERTY(bool Verbose READ verbose WRITE setVerbose)
    inline bool verbose() const
    { return qvariant_cast< bool >(property("Verbose")); }
    inline void setVerbose(bool value)
    { setProperty("Verbose", QVariant::fromValue(value)); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> HelloWorld(const QString &greeting)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(greeting);
        return asyncCallWithArgumentList(QStringLiteral("HelloWorld"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void Notification(const QByteArray &icon_blob, int height, const QStringList &messages);
};

namespace net {
  namespace Corp {
    namespace MyApp {
      typedef ::NetCorpMyAppFrobberInterface Frobber;
    }
  }
}
#endif
