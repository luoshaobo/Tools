/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

asndtor.cc: C++ API destructor methods

Generated by ASNSDK TCE-C++ ASN.1 Compiler v6.0 - REF_8.55 - REF_8.41

===========================================================================
*/

/**@file
 * C++ API destructor methods
 */

#include <asn.h>
/**
 *    TypeAssignment : RequestBody
 *    Class destructor
 */
#ifndef asnCodBalloc
RequestBody::~RequestBody()
{
   delete(serviceData);
}
#endif

/**
 *    TypeAssignment : RequestHeader
 *    Class destructor
 */
#ifndef asnCodBalloc
RequestHeader::~RequestHeader()
{
   delete(timeStamp);
   delete(eventId);
}
#endif

/**
 *    TypeAssignment : TimeStamp
 *    Class destructor
 */
#ifndef asnCodBalloc
TimeStamp::~TimeStamp()
{
}
#endif

/**
 *    TypeAssignment : VDServiceRequest
 *    Class destructor
 */
#ifndef asnCodBalloc
VDServiceRequest::~VDServiceRequest()
{
   delete(header);
   delete(body);
}
#endif

/**
 *    TypeAssignment : DIDData
 *    Class destructor
 */
#ifndef asnCodBalloc
DIDData::~DIDData()
{
}
#endif

/**
 *    TypeAssignment : DTCData
 *    Class destructor
 */
#ifndef asnCodBalloc
DTCData::~DTCData()
{
}
#endif

/**
 *    TypeAssignment : ECUData
 *    Class destructor
 */
#ifndef asnCodBalloc
asncdidDatas::~asncdidDatas()
{
}
#endif

#ifndef asnCodBalloc
asncdtcDatas::~asncdtcDatas()
{
}
#endif

#ifndef asnCodBalloc
ECUData::~ECUData()
{
}
#endif

/**
 *    TypeAssignment : EcuData
 *    Class destructor
 */
#ifndef asnCodBalloc
EcuData__C::~EcuData__C()
{
}
#endif

#ifndef asnCodBalloc
asncnoDiagData::~asncnoDiagData()
{
}
#endif

#ifndef asnCodBalloc
asncdatas::~asncdatas()
{
}
#endif

#ifndef asnCodBalloc
asncEcuData__data::~asncEcuData__data()
{
}
#endif

#ifndef asnCodBalloc
EcuData::~EcuData()
{
      delete(value);
}
#endif

/**
 *    TypeAssignment : NEVCoordinatesLongLat
 *    Class destructor
 */
#ifndef asnCodBalloc
NEVCoordinatesLongLat::~NEVCoordinatesLongLat()
{
}
#endif

/**
 *    TypeAssignment : NEVDRPositionData
 *    Class destructor
 */
#ifndef asnCodBalloc
NEVDRPositionData::~NEVDRPositionData()
{
   delete(longLat);
   delete(fixTime);
}
#endif

/**
 *    TypeAssignment : NEVDRVehiclePosition
 *    Class destructor
 */
#ifndef asnCodBalloc
NEVDRVehiclePosition__C::~NEVDRVehiclePosition__C()
{
}
#endif

#ifndef asnCodBalloc
asncnoValidData::~asncnoValidData()
{
}
#endif

#ifndef asnCodBalloc
asncdrPosition::~asncdrPosition()
{
   delete(longLat);
   delete(fixTime);
}
#endif

#ifndef asnCodBalloc
NEVDRVehiclePosition::~NEVDRVehiclePosition()
{
      delete(value);
}
#endif

/**
 *    TypeAssignment : NEVDateTime
 *    Class destructor
 */
#ifndef asnCodBalloc
NEVDateTime::~NEVDateTime()
{
}
#endif

/**
 *    TypeAssignment : NEVServiceData
 *    Class destructor
 */
#ifndef asnCodBalloc
NEVServiceData::~NEVServiceData()
{
   delete(position);
   delete(ecuData);
}
#endif

/**
 *    TypeAssignment : Configuration
 *    Class destructor
 */
#ifndef asnCodBalloc
asncitemss::~asncitemss()
{
}
#endif

#ifndef asnCodBalloc
Configuration::~Configuration()
{
}
#endif

/**
 *    TypeAssignment : ConfigurationItem
 *    Class destructor
 */
#ifndef asnCodBalloc
asncConfigurationItem__parameterss::~asncConfigurationItem__parameterss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
ConfigurationItem::~ConfigurationItem()
{
}
#endif

/**
 *    TypeAssignment : ContactInfo
 *    Class destructor
 */
#ifndef asnCodBalloc
ContactInfo::~ContactInfo()
{
   delete(address);
}
#endif

/**
 *    TypeAssignment : Error
 *    Class destructor
 */
#ifndef asnCodBalloc
Error::~Error()
{
}
#endif

/**
 *    TypeAssignment : EventAction
 *    Class destructor
 */
#ifndef asnCodBalloc
EventAction::~EventAction()
{
}
#endif

/**
 *    TypeAssignment : EventRule
 *    Class destructor
 */
#ifndef asnCodBalloc
asncconditionss::~asncconditionss()
{
}
#endif

#ifndef asnCodBalloc
EventRule::~EventRule()
{
   delete(startTime);
   delete(endTime);
   delete(action);
}
#endif

/**
 *    TypeAssignment : GeneralMessage
 *    Class destructor
 */
#ifndef asnCodBalloc
GeneralMessage__C::~GeneralMessage__C()
{
}
#endif

#ifndef asnCodBalloc
asncGeneralMessage__message::~asncGeneralMessage__message()
{
}
#endif

#ifndef asnCodBalloc
asncocetMessage::~asncocetMessage()
{
}
#endif

#ifndef asnCodBalloc
GeneralMessage::~GeneralMessage()
{
      delete(value);
}
#endif

/**
 *    TypeAssignment : Notification
 *    Class destructor
 */
#ifndef asnCodBalloc
asncNotification__parameterss::~asncNotification__parameterss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
Notification::~Notification()
{
   delete(time);
}
#endif

/**
 *    TypeAssignment : OTA
 *    Class destructor
 */
#ifndef asnCodBalloc
OTA::~OTA()
{
}
#endif

/**
 *    TypeAssignment : PointOfInterest
 *    Class destructor
 */
#ifndef asnCodBalloc
asncattributess::~asncattributess()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
PointOfInterest::~PointOfInterest()
{
   delete(position);
   delete(contactInfo);
}
#endif

/**
 *    TypeAssignment : Position
 *    Class destructor
 */
#ifndef asnCodBalloc
Position::~Position()
{
}
#endif

/**
 *    TypeAssignment : PostAddress
 *    Class destructor
 */
#ifndef asnCodBalloc
PostAddress::~PostAddress()
{
}
#endif

/**
 *    TypeAssignment : RuleCondition
 *    Class destructor
 */
#ifndef asnCodBalloc
RuleCondition::~RuleCondition()
{
}
#endif

/**
 *    TypeAssignment : ServiceData
 *    Class destructor
 */
#ifndef asnCodBalloc
asncserviceParameterss::~asncserviceParameterss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
asncpoiss::~asncpoiss()
{
   delete(position);
   delete(contactInfo);
}
#endif

#ifndef asnCodBalloc
asnctripFragmentss::~asnctripFragmentss()
{
   delete(startTime);
   delete(startPosition);
   delete(endTime);
   delete(endPosition);
}
#endif

#ifndef asnCodBalloc
asnctrackPointss::~asnctrackPointss()
{
   delete(systemTime);
   delete(position);
}
#endif

#ifndef asnCodBalloc
ServiceData::~ServiceData()
{
   delete(serviceTrigger);
   delete(serviceResult);
   delete(serviceStatus);
   delete(message);
   delete(configuration);
   delete(vehicleStatus);
   delete(ota);
   delete(trip);
   delete(nevServiceData);
   delete(eventRule);
}
#endif

/**
 *    TypeAssignment : ServiceParameter
 *    Class destructor
 */
#ifndef asnCodBalloc
ServiceParameter::~ServiceParameter()
{
   delete(timestampVal);
}
#endif

/**
 *    TypeAssignment : ServiceResult
 *    Class destructor
 */
#ifndef asnCodBalloc
ServiceResult::~ServiceResult()
{
   delete(error);
}
#endif

/**
 *    TypeAssignment : ServiceStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
ServiceStatus::~ServiceStatus()
{
}
#endif

/**
 *    TypeAssignment : ServiceTrigger
 *    Class destructor
 */
#ifndef asnCodBalloc
ServiceTrigger::~ServiceTrigger()
{
   delete(scheduledTime);
   delete(endTime);
}
#endif

/**
 *    TypeAssignment : TrackPoint
 *    Class destructor
 */
#ifndef asnCodBalloc
TrackPoint::~TrackPoint()
{
   delete(systemTime);
   delete(position);
}
#endif

/**
 *    TypeAssignment : Trip
 *    Class destructor
 */
#ifndef asnCodBalloc
asnctrackpointss::~asnctrackpointss()
{
   delete(systemTime);
   delete(position);
}
#endif

#ifndef asnCodBalloc
asncwaypointss::~asncwaypointss()
{
}
#endif

#ifndef asnCodBalloc
Trip::~Trip()
{
   delete(startTime);
   delete(endTime);
}
#endif

/**
 *    TypeAssignment : TripFragment
 *    Class destructor
 */
#ifndef asnCodBalloc
TripFragment::~TripFragment()
{
   delete(startTime);
   delete(startPosition);
   delete(endTime);
   delete(endPosition);
}
#endif

/**
 *    TypeAssignment : AdditionalVehicleStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
asncAdditionalVehicleStatus__signalss::~asncAdditionalVehicleStatus__signalss()
{
   delete(collectTime);
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
AdditionalVehicleStatus::~AdditionalVehicleStatus()
{
   delete(confAndId);
   delete(drivingSafetyStatus);
   delete(maintenanceStatus);
   delete(runningStatus);
   delete(climateStatus);
   delete(drivingBehaviourStatus);
   delete(pollutionStatus);
   delete(electricVehicleStatus);
   delete(carConfig);
}
#endif

/**
 *    TypeAssignment : BasicVehicleStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
BasicVehicleStatus::~BasicVehicleStatus()
{
   delete(position);
}
#endif

/**
 *    TypeAssignment : BatteryStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
BatteryStatus::~BatteryStatus()
{
}
#endif

/**
 *    TypeAssignment : CarConfig
 *    Class destructor
 */
#ifndef asnCodBalloc
CarConfig::~CarConfig()
{
}
#endif

/**
 *    TypeAssignment : ClimateStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
ClimateStatus::~ClimateStatus()
{
}
#endif

/**
 *    TypeAssignment : ConfigurationAndIdentity
 *    Class destructor
 */
#ifndef asnCodBalloc
ConfigurationAndIdentity::~ConfigurationAndIdentity()
{
}
#endif

/**
 *    TypeAssignment : DiagnosticTroubleCode
 *    Class destructor
 */
#ifndef asnCodBalloc
DiagnosticTroubleCode::~DiagnosticTroubleCode()
{
   delete(lastFail);
   delete(firtFail);
}
#endif

/**
 *    TypeAssignment : DrivingBehaviourStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
DrivingBehaviourStatus::~DrivingBehaviourStatus()
{
}
#endif

/**
 *    TypeAssignment : DrivingSafetyStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
DrivingSafetyStatus::~DrivingSafetyStatus()
{
}
#endif

/**
 *    TypeAssignment : ECUDiagnostic
 *    Class destructor
 */
#ifndef asnCodBalloc
asncdtcss::~asncdtcss()
{
   delete(lastFail);
   delete(firtFail);
}
#endif

#ifndef asnCodBalloc
ECUDiagnostic::~ECUDiagnostic()
{
}
#endif

/**
 *    TypeAssignment : ECUDiagnostics
 *    Class destructor
 */
#ifndef asnCodBalloc
asncECUDiagnosticss::~asncECUDiagnosticss()
{
}
#endif

#ifndef asnCodBalloc
ECUDiagnostics::~ECUDiagnostics()
{
}
#endif

/**
 *    TypeAssignment : EcuWarningMessages
 *    Class destructor
 */
#ifndef asnCodBalloc
asncEcuWarningMessagess::~asncEcuWarningMessagess()
{
   delete(collectTime);
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
EcuWarningMessages::~EcuWarningMessages()
{
}
#endif

/**
 *    TypeAssignment : ElectricVehicleStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
ElectricVehicleStatus::~ElectricVehicleStatus()
{
}
#endif

/**
 *    TypeAssignment : GenericVehicleSignal
 *    Class destructor
 */
#ifndef asnCodBalloc
GenericVehicleSignal::~GenericVehicleSignal()
{
   delete(collectTime);
   delete(timestampVal);
}
#endif

/**
 *    TypeAssignment : MaintenanceStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
MaintenanceStatus::~MaintenanceStatus()
{
   delete(mainBatteryStatus);
}
#endif

/**
 *    TypeAssignment : NetworkAccessStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
NetworkAccessStatus::~NetworkAccessStatus()
{
   delete(simInfo);
}
#endif

/**
 *    TypeAssignment : OEMMSD
 *    Class destructor
 */
#ifndef asnCodBalloc
asncrecentPositionss::~asncrecentPositionss()
{
}
#endif

#ifndef asnCodBalloc
asncOEMMSD__signalss::~asncOEMMSD__signalss()
{
   delete(collectTime);
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
OEMMSD::~OEMMSD()
{
   delete(position);
}
#endif

/**
 *    TypeAssignment : PollutionStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
PollutionStatus::~PollutionStatus()
{
}
#endif

/**
 *    TypeAssignment : RunningStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
RunningStatus::~RunningStatus()
{
}
#endif

/**
 *    TypeAssignment : SIMInfo
 *    Class destructor
 */
#ifndef asnCodBalloc
SIMInfo::~SIMInfo()
{
}
#endif

/**
 *    TypeAssignment : TEMStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
TEMStatus::~TEMStatus()
{
   delete(backupBattery);
   delete(sleepCycleNextWakeupTime);
   delete(diagnostics);
   delete(networkAccessStatus);
}
#endif

/**
 *    TypeAssignment : TheftNotification
 *    Class destructor
 */
#ifndef asnCodBalloc
TheftNotification::~TheftNotification()
{
   delete(time);
}
#endif

/**
 *    TypeAssignment : VehicleStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
VehicleStatus::~VehicleStatus()
{
   delete(basicVehicleStatus);
   delete(additionalVehicleStatus);
   delete(msd);
   delete(temStatus);
   delete(theftNotification);
   delete(notification);
}
#endif


