/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

asncmp.cc: C++ API compare methods

Generated by ASNSDK TCE-C++ ASN.1 Compiler v6.0 - REF_8.55 - REF_8.41

===========================================================================
*/

/**@file
 * C++ API compare methods
 */

#include <asn.h>

namespace asn_wrapper
{

#ifdef asnCodOpCmp
/**
 *    TypeAssignment : RequestBody
 *    Operator ==
 */
asnBOOL RequestBody::operator== (const asntype& obj) const
{
  const RequestBody* object = asnDCast(const RequestBody*,&obj);
  if(object == (RequestBody*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_serviceId) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_serviceId) != asnFALSE)
    {
      if((this->serviceId == object->serviceId) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_serviceId) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_serviceData) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_serviceData) != asnFALSE)
    {
      if((this->serviceData == (ServiceData *) asnBNULL) || (object->serviceData == (ServiceData *) asnBNULL))
        return asnFALSE;
      if((*(this->serviceData) == *object->serviceData) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_serviceData) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_seq) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_seq) != asnFALSE)
    {
      if((this->seq == object->seq) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_seq) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncServiceData__serviceParameterss
 *    Operator ==
 */
asnBOOL asncServiceData__serviceParameterss::operator== (const asntype& obj) const
{
  const asncServiceData__serviceParameterss* object = asnDCast(const asncServiceData__serviceParameterss*,&obj);
  if(object == (asncServiceData__serviceParameterss*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_intVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      if((this->intVal == object->intVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncattributess
 *    Operator ==
 */
asnBOOL asncattributess::operator== (const asntype& obj) const
{
  const asncattributess* object = asnDCast(const asncattributess*,&obj);
  if(object == (asncattributess*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_intVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      if((this->intVal == object->intVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncpoiss
 *    Operator ==
 */
asnBOOL asncpoiss::operator== (const asntype& obj) const
{
  const asncpoiss* object = asnDCast(const asncpoiss*,&obj);
  if(object == (asncpoiss*)0) return asnFALSE;
  if((this->name == object->name) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_position) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_position) != asnFALSE)
    {
      if((this->position == (Position *) asnBNULL) || (object->position == (Position *) asnBNULL))
        return asnFALSE;
      if((*(this->position) == *object->position) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_position) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_type) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_type) != asnFALSE)
    {
      if((this->type == object->type) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_type) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_contactInfo) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_contactInfo) != asnFALSE)
    {
      if((this->contactInfo == (ContactInfo *) asnBNULL) || (object->contactInfo == (ContactInfo *) asnBNULL))
        return asnFALSE;
      if((*(this->contactInfo) == *object->contactInfo) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_contactInfo) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_url) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_url) != asnFALSE)
    {
      if((this->url == object->url) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_url) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_attributes) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_attributes) != asnFALSE)
    {
      if((this->attributes == object->attributes) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_attributes) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncConfigurationItem__parameterss
 *    Operator ==
 */
asnBOOL asncConfigurationItem__parameterss::operator== (const asntype& obj) const
{
  const asncConfigurationItem__parameterss* object = asnDCast(const asncConfigurationItem__parameterss*,&obj);
  if(object == (asncConfigurationItem__parameterss*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_intVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      if((this->intVal == object->intVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncConfiguration__itemss
 *    Operator ==
 */
asnBOOL asncConfiguration__itemss::operator== (const asntype& obj) const
{
  const asncConfiguration__itemss* object = asnDCast(const asncConfiguration__itemss*,&obj);
  if(object == (asncConfiguration__itemss*)0) return asnFALSE;
  if((this->name == object->name) == asnFALSE)
    return asnFALSE;
  if((this->parameters == object->parameters) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncFragStrs__itemss
 *    Operator ==
 */
asnBOOL asncFragStrs__itemss::operator== (const asntype& obj) const
{
  const asncFragStrs__itemss* object = asnDCast(const asncFragStrs__itemss*,&obj);
  if(object == (asncFragStrs__itemss*)0) return asnFALSE;
  if((this->id == object->id) == asnFALSE)
    return asnFALSE;
  if((this->activated == object->activated) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_level) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_level) != asnFALSE)
    {
      if((this->level == object->level) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_level) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FragItem__code) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FragItem__code) != asnFALSE)
    {
      if((this->code == object->code) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FragItem__code) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncdtcss
 *    Operator ==
 */
asnBOOL asncdtcss::operator== (const asntype& obj) const
{
  const asncdtcss* object = asnDCast(const asncdtcss*,&obj);
  if(object == (asncdtcss*)0) return asnFALSE;
  if((this->dtc == object->dtc) == asnFALSE)
    return asnFALSE;
  if((this->status == object->status) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_failureCount) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_failureCount) != asnFALSE)
    {
      if((this->failureCount == object->failureCount) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_failureCount) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_lastFail) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_lastFail) != asnFALSE)
    {
      if((this->lastFail == (TimeStamp *) asnBNULL) || (object->lastFail == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->lastFail) == *object->lastFail) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_lastFail) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_firtFail) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_firtFail) != asnFALSE)
    {
      if((this->firtFail == (TimeStamp *) asnBNULL) || (object->firtFail == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->firtFail) == *object->firtFail) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_firtFail) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_firstFailureOdometer) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_firstFailureOdometer) != asnFALSE)
    {
      if((this->firstFailureOdometer == object->firstFailureOdometer) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_firstFailureOdometer) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_firstFailureBatteryVoltage) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_firstFailureBatteryVoltage) != asnFALSE)
    {
      if((this->firstFailureBatteryVoltage == object->firstFailureBatteryVoltage) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_firstFailureBatteryVoltage) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_firstFailureVehicleSpeed) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_firstFailureVehicleSpeed) != asnFALSE)
    {
      if((this->firstFailureVehicleSpeed == object->firstFailureVehicleSpeed) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_firstFailureVehicleSpeed) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncconnectEstablishedLists
 *    Operator ==
 */
asnBOOL asncconnectEstablishedLists::operator== (const asntype& obj) const
{
  const asncconnectEstablishedLists* object = asnDCast(const asncconnectEstablishedLists*,&obj);
  if(object == (asncconnectEstablishedLists*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_connectTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_connectTime) != asnFALSE)
    {
      if((this->connectTime == (TimeStamp *) asnBNULL) || (object->connectTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->connectTime) == *object->connectTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_connectTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_connectPosition) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_connectPosition) != asnFALSE)
    {
      if((this->connectPosition == (Position *) asnBNULL) || (object->connectPosition == (Position *) asnBNULL))
        return asnFALSE;
      if((*(this->connectPosition) == *object->connectPosition) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_connectPosition) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_connectType) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_connectType) != asnFALSE)
    {
      if((this->connectType == object->connectType) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_connectType) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_numRetriesConnect) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_numRetriesConnect) != asnFALSE)
    {
      if((this->numRetriesConnect == object->numRetriesConnect) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_numRetriesConnect) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_retryReason) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_retryReason) != asnFALSE)
    {
      if((this->retryReason == object->retryReason) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_retryReason) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asnclostConnectionsLists
 *    Operator ==
 */
asnBOOL asnclostConnectionsLists::operator== (const asntype& obj) const
{
  const asnclostConnectionsLists* object = asnDCast(const asnclostConnectionsLists*,&obj);
  if(object == (asnclostConnectionsLists*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_connectTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_connectTime) != asnFALSE)
    {
      if((this->connectTime == (TimeStamp *) asnBNULL) || (object->connectTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->connectTime) == *object->connectTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_connectTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_connectPosition) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_connectPosition) != asnFALSE)
    {
      if((this->connectPosition == (Position *) asnBNULL) || (object->connectPosition == (Position *) asnBNULL))
        return asnFALSE;
      if((*(this->connectPosition) == *object->connectPosition) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_connectPosition) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_connectType) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_connectType) != asnFALSE)
    {
      if((this->connectType == object->connectType) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_connectType) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_numRetriesConnect) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_numRetriesConnect) != asnFALSE)
    {
      if((this->numRetriesConnect == object->numRetriesConnect) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_numRetriesConnect) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_retryReason) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_retryReason) != asnFALSE)
    {
      if((this->retryReason == object->retryReason) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_retryReason) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncCarConfig__itemss
 *    Operator ==
 */
asnBOOL asncCarConfig__itemss::operator== (const asntype& obj) const
{
  const asncCarConfig__itemss* object = asnDCast(const asncCarConfig__itemss*,&obj);
  if(object == (asncCarConfig__itemss*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_intVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      if((this->intVal == object->intVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncAdditionalStatus__signalss
 *    Operator ==
 */
asnBOOL asncAdditionalStatus__signalss::operator== (const asntype& obj) const
{
  const asncAdditionalStatus__signalss* object = asnDCast(const asncAdditionalStatus__signalss*,&obj);
  if(object == (asncAdditionalStatus__signalss*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_collectTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_collectTime) != asnFALSE)
    {
      if((this->collectTime == (TimeStamp *) asnBNULL) || (object->collectTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->collectTime) == *object->collectTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_collectTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_value) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_value) != asnFALSE)
    {
      if((this->value == object->value) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_value) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncrecentPositionss
 *    Operator ==
 */
asnBOOL asncrecentPositionss::operator== (const asntype& obj) const
{
  const asncrecentPositionss* object = asnDCast(const asncrecentPositionss*,&obj);
  if(object == (asncrecentPositionss*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_latitude) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_latitude) != asnFALSE)
    {
      if((this->latitude == object->latitude) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_latitude) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_longitude) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_longitude) != asnFALSE)
    {
      if((this->longitude == object->longitude) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_longitude) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_altitude) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_altitude) != asnFALSE)
    {
      if((this->altitude == object->altitude) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_altitude) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_posCanBeTrusted) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_posCanBeTrusted) != asnFALSE)
    {
      if(this->posCanBeTrusted == asnFALSE)
      {
        if(object->posCanBeTrusted != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->posCanBeTrusted == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_posCanBeTrusted) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_carLocatorStatUploadEn) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_carLocatorStatUploadEn) != asnFALSE)
    {
      if(this->carLocatorStatUploadEn == asnFALSE)
      {
        if(object->carLocatorStatUploadEn != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->carLocatorStatUploadEn == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_carLocatorStatUploadEn) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_marsCoordinates) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_marsCoordinates) != asnFALSE)
    {
      if(this->marsCoordinates == asnFALSE)
      {
        if(object->marsCoordinates != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->marsCoordinates == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_marsCoordinates) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncOEMMSD__signalss
 *    Operator ==
 */
asnBOOL asncOEMMSD__signalss::operator== (const asntype& obj) const
{
  const asncOEMMSD__signalss* object = asnDCast(const asncOEMMSD__signalss*,&obj);
  if(object == (asncOEMMSD__signalss*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_collectTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_collectTime) != asnFALSE)
    {
      if((this->collectTime == (TimeStamp *) asnBNULL) || (object->collectTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->collectTime) == *object->collectTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_collectTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_value) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_value) != asnFALSE)
    {
      if((this->value == object->value) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_value) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncNotification__parameterss
 *    Operator ==
 */
asnBOOL asncNotification__parameterss::operator== (const asntype& obj) const
{
  const asncNotification__parameterss* object = asnDCast(const asncNotification__parameterss*,&obj);
  if(object == (asncNotification__parameterss*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_intVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      if((this->intVal == object->intVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncpartIdentifierss
 *    Operator ==
 */
asnBOOL asncpartIdentifierss::operator== (const asntype& obj) const
{
  const asncpartIdentifierss* object = asnDCast(const asncpartIdentifierss*,&obj);
  if(object == (asncpartIdentifierss*)0) return asnFALSE;
  return (this->value == object->value);
}

/**
 *    TypeAssignment : asncvalidationKeyss
 *    Operator ==
 */
asnBOOL asncvalidationKeyss::operator== (const asntype& obj) const
{
  const asncvalidationKeyss* object = asnDCast(const asncvalidationKeyss*,&obj);
  if(object == (asncvalidationKeyss*)0) return asnFALSE;
  if((this->validationKey == object->validationKey) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_partIdentifiers) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_partIdentifiers) != asnFALSE)
    {
      if((this->partIdentifiers == object->partIdentifiers) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_partIdentifiers) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncecuInventorys
 *    Operator ==
 */
asnBOOL asncecuInventorys::operator== (const asntype& obj) const
{
  const asncecuInventorys* object = asnDCast(const asncecuInventorys*,&obj);
  if(object == (asncecuInventorys*)0) return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->validationKeys == object->validationKeys) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_exceptionMessage) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_exceptionMessage) != asnFALSE)
    {
      if((this->exceptionMessage == object->exceptionMessage) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_exceptionMessage) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncInventoryInstruction__ecuInstructionss
 *    Operator ==
 */
asnBOOL asncInventoryInstruction__ecuInstructionss::operator== (const asntype& obj) const
{
  const asncInventoryInstruction__ecuInstructionss* object = asnDCast(const asncInventoryInstruction__ecuInstructionss*,&obj);
  if(object == (asncInventoryInstruction__ecuInstructionss*)0) return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->validationKeys == object->validationKeys) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_exceptionMessage) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_exceptionMessage) != asnFALSE)
    {
      if((this->exceptionMessage == object->exceptionMessage) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_exceptionMessage) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncsoftwarePartInstallationInstructionss
 *    Operator ==
 */
asnBOOL asncsoftwarePartInstallationInstructionss::operator== (const asntype& obj) const
{
  const asncsoftwarePartInstallationInstructionss* object = asnDCast(const asncsoftwarePartInstallationInstructionss*,&obj);
  if(object == (asncsoftwarePartInstallationInstructionss*)0) return asnFALSE;
  if((this->partidentifier == object->partidentifier) == asnFALSE)
    return asnFALSE;
  if((this->estimatedInstallationtime == object->estimatedInstallationtime) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncInstruction__ecuInstructionss
 *    Operator ==
 */
asnBOOL asncInstruction__ecuInstructionss::operator== (const asntype& obj) const
{
  const asncInstruction__ecuInstructionss* object = asnDCast(const asncInstruction__ecuInstructionss*,&obj);
  if(object == (asncInstruction__ecuInstructionss*)0) return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->queuedRequest == object->queuedRequest) == asnFALSE)
    return asnFALSE;
  if((this->securityKey == object->securityKey) == asnFALSE)
    return asnFALSE;
  if((this->softwarePartInstallationInstructions == object->softwarePartInstallationInstructions) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncpartidentifierss
 *    Operator ==
 */
asnBOOL asncpartidentifierss::operator== (const asntype& obj) const
{
  const asncpartidentifierss* object = asnDCast(const asncpartidentifierss*,&obj);
  if(object == (asncpartidentifierss*)0) return asnFALSE;
  return (this->value == object->value);
}

/**
 *    TypeAssignment : asncassignmentValidationss
 *    Operator ==
 */
asnBOOL asncassignmentValidationss::operator== (const asntype& obj) const
{
  const asncassignmentValidationss* object = asnDCast(const asncassignmentValidationss*,&obj);
  if(object == (asncassignmentValidationss*)0) return asnFALSE;
  if((this->validationType == object->validationType) == asnFALSE)
    return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->validationkey == object->validationkey) == asnFALSE)
    return asnFALSE;
  if((this->partidentifiers == object->partidentifiers) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncinstructionss
 *    Operator ==
 */
asnBOOL asncinstructionss::operator== (const asntype& obj) const
{
  const asncinstructionss* object = asnDCast(const asncinstructionss*,&obj);
  if(object == (asncinstructionss*)0) return asnFALSE;
  if((this->ecuRemaining == object->ecuRemaining) == asnFALSE)
    return asnFALSE;
  if((this->installationInstructionSversion == object->installationInstructionSversion) == asnFALSE)
    return asnFALSE;
  if((this->requiredPreparationTime == object->requiredPreparationTime) == asnFALSE)
    return asnFALSE;
  if((this->expectedInstallationTime == object->expectedInstallationTime) == asnFALSE)
    return asnFALSE;
  if((this->area1112SecurityCode == object->area1112SecurityCode) == asnFALSE)
    return asnFALSE;
  if((this->ecuInstructions == object->ecuInstructions) == asnFALSE)
    return asnFALSE;
  if((this->assignmentValidations == object->assignmentValidations) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncsoftwarePartSummaryss
 *    Operator ==
 */
asnBOOL asncsoftwarePartSummaryss::operator== (const asntype& obj) const
{
  const asncsoftwarePartSummaryss* object = asnDCast(const asncsoftwarePartSummaryss*,&obj);
  if(object == (asncsoftwarePartSummaryss*)0) return asnFALSE;
  if((this->partIdentifier == object->partIdentifier) == asnFALSE)
    return asnFALSE;
  if((this->partRetries == object->partRetries) == asnFALSE)
    return asnFALSE;
  if((this->measuredInstallationTime == object->measuredInstallationTime) == asnFALSE)
    return asnFALSE;
  if((this->softwarePartStatus == object->softwarePartStatus) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncecuSummaryss
 *    Operator ==
 */
asnBOOL asncecuSummaryss::operator== (const asntype& obj) const
{
  const asncecuSummaryss* object = asnDCast(const asncecuSummaryss*,&obj);
  if(object == (asncecuSummaryss*)0) return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->ecuRetries == object->ecuRetries) == asnFALSE)
    return asnFALSE;
  if((this->ecuStatus == object->ecuStatus) == asnFALSE)
    return asnFALSE;
  if((this->softwarePartSummarys == object->softwarePartSummarys) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncexceptionReportss
 *    Operator ==
 */
asnBOOL asncexceptionReportss::operator== (const asntype& obj) const
{
  const asncexceptionReportss* object = asnDCast(const asncexceptionReportss*,&obj);
  if(object == (asncexceptionReportss*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_ExceptionReport__installationOrderId) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ExceptionReport__installationOrderId) != asnFALSE)
    {
      if((this->installationOrderId == object->installationOrderId) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ExceptionReport__installationOrderId) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->timestamp == object->timestamp) == asnFALSE)
    return asnFALSE;
  if((this->issuerId == object->issuerId) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_clientConfigurationId) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_clientConfigurationId) != asnFALSE)
    {
      if((this->clientConfigurationId == object->clientConfigurationId) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_clientConfigurationId) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_dataFileName) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_dataFileName) != asnFALSE)
    {
      if((this->dataFileName == object->dataFileName) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_dataFileName) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ecuAddress) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ecuAddress) != asnFALSE)
    {
      if((this->ecuAddress == object->ecuAddress) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ecuAddress) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_validationKey) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_validationKey) != asnFALSE)
    {
      if((this->validationKey == object->validationKey) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_validationKey) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_partIdentifier) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_partIdentifier) != asnFALSE)
    {
      if((this->partIdentifier == object->partIdentifier) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_partIdentifier) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_dataBlockNumber) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_dataBlockNumber) != asnFALSE)
    {
      if((this->dataBlockNumber == object->dataBlockNumber) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_dataBlockNumber) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->exceptionMessage == (ExceptionMessage *) asnBNULL) || (object->exceptionMessage == (ExceptionMessage *) asnBNULL))
    return asnFALSE;
  if((*(this->exceptionMessage) == *object->exceptionMessage) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncurlss
 *    Operator ==
 */
asnBOOL asncurlss::operator== (const asntype& obj) const
{
  const asncurlss* object = asnDCast(const asncurlss*,&obj);
  if(object == (asncurlss*)0) return asnFALSE;
  return (this->value == object->value);
}

/**
 *    TypeAssignment : asncserviceParamss
 *    Operator ==
 */
asnBOOL asncserviceParamss::operator== (const asntype& obj) const
{
  const asncserviceParamss* object = asnDCast(const asncserviceParamss*,&obj);
  if(object == (asncserviceParamss*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_intVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      if((this->intVal == object->intVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncassignFileInfoss
 *    Operator ==
 */
asnBOOL asncassignFileInfoss::operator== (const asntype& obj) const
{
  const asncassignFileInfoss* object = asnDCast(const asncassignFileInfoss*,&obj);
  if(object == (asncassignFileInfoss*)0) return asnFALSE;
  if((this->partidentifier == object->partidentifier) == asnFALSE)
    return asnFALSE;
  if((this->softwarePartSignature == object->softwarePartSignature) == asnFALSE)
    return asnFALSE;
  if((this->fileCheckSum == object->fileCheckSum) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncRvdcSetting__serviceParameterss
 *    Operator ==
 */
asnBOOL asncRvdcSetting__serviceParameterss::operator== (const asntype& obj) const
{
  const asncRvdcSetting__serviceParameterss* object = asnDCast(const asncRvdcSetting__serviceParameterss*,&obj);
  if(object == (asncRvdcSetting__serviceParameterss*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_intVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      if((this->intVal == object->intVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncinstalledMas
 *    Operator ==
 */
asnBOOL asncinstalledMas::operator== (const asntype& obj) const
{
  const asncinstalledMas* object = asnDCast(const asncinstalledMas*,&obj);
  if(object == (asncinstalledMas*)0) return asnFALSE;
  if((this->maId == object->maId) == asnFALSE)
    return asnFALSE;
  if((this->maVersion == object->maVersion) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncMaSynchronizationReq__serviceParameterss
 *    Operator ==
 */
asnBOOL asncMaSynchronizationReq__serviceParameterss::operator== (const asntype& obj) const
{
  const asncMaSynchronizationReq__serviceParameterss* object = asnDCast(const asncMaSynchronizationReq__serviceParameterss*,&obj);
  if(object == (asncMaSynchronizationReq__serviceParameterss*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_intVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      if((this->intVal == object->intVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncremoveMass
 *    Operator ==
 */
asnBOOL asncremoveMass::operator== (const asntype& obj) const
{
  const asncremoveMass* object = asnDCast(const asncremoveMass*,&obj);
  if(object == (asncremoveMass*)0) return asnFALSE;
  if((this->maId == object->maId) == asnFALSE)
    return asnFALSE;
  if((this->maVersion == object->maVersion) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncdiagnosticCommandss
 *    Operator ==
 */
asnBOOL asncdiagnosticCommandss::operator== (const asntype& obj) const
{
  const asncdiagnosticCommandss* object = asnDCast(const asncdiagnosticCommandss*,&obj);
  if(object == (asncdiagnosticCommandss*)0) return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->serviceId == object->serviceId) == asnFALSE)
    return asnFALSE;
  if((this->input == object->input) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_compareType) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_compareType) != asnFALSE)
    {
      if((this->compareType == object->compareType) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_compareType) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_compareValue) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_compareValue) != asnFALSE)
    {
      if((this->compareValue == object->compareValue) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_compareValue) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->delayUntilNextTriggerCommand == object->delayUntilNextTriggerCommand) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncecusAndPartNumberss
 *    Operator ==
 */
asnBOOL asncecusAndPartNumberss::operator== (const asntype& obj) const
{
  const asncecusAndPartNumberss* object = asnDCast(const asncecusAndPartNumberss*,&obj);
  if(object == (asncecusAndPartNumberss*)0) return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->diagnosticPartNumber == object->diagnosticPartNumber) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncdiagnosticCommands
 *    Operator ==
 */
asnBOOL asncdiagnosticCommands::operator== (const asntype& obj) const
{
  const asncdiagnosticCommands* object = asnDCast(const asncdiagnosticCommands*,&obj);
  if(object == (asncdiagnosticCommands*)0) return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->serviceId == object->serviceId) == asnFALSE)
    return asnFALSE;
  if((this->input == object->input) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_compareType) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_compareType) != asnFALSE)
    {
      if((this->compareType == object->compareType) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_compareType) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_compareValue) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_compareValue) != asnFALSE)
    {
      if((this->compareValue == object->compareValue) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_compareValue) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->delayUntilNextTriggerCommand == object->delayUntilNextTriggerCommand) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncMeasurementAssignment__serviceParameterss
 *    Operator ==
 */
asnBOOL asncMeasurementAssignment__serviceParameterss::operator== (const asntype& obj) const
{
  const asncMeasurementAssignment__serviceParameterss* object = asnDCast(const asncMeasurementAssignment__serviceParameterss*,&obj);
  if(object == (asncMeasurementAssignment__serviceParameterss*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_intVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      if((this->intVal == object->intVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncnewMass
 *    Operator ==
 */
asnBOOL asncnewMass::operator== (const asntype& obj) const
{
  const asncnewMass* object = asnDCast(const asncnewMass*,&obj);
  if(object == (asncnewMass*)0) return asnFALSE;
  if((this->maId == object->maId) == asnFALSE)
    return asnFALSE;
  if((this->maVersion == object->maVersion) == asnFALSE)
    return asnFALSE;
  if((this->vin == object->vin) == asnFALSE)
    return asnFALSE;
  if((this->maFormatVersion == object->maFormatVersion) == asnFALSE)
    return asnFALSE;
  if((this->maExecutionPriority == object->maExecutionPriority) == asnFALSE)
    return asnFALSE;
  if((this->telematicsParameters == (TelematicsParameters *) asnBNULL) || (object->telematicsParameters == (TelematicsParameters *) asnBNULL))
    return asnFALSE;
  if((*(this->telematicsParameters) == *object->telematicsParameters) == asnFALSE)
    return asnFALSE;
  if((this->usageModesAllowed == object->usageModesAllowed) == asnFALSE)
    return asnFALSE;
  if((this->startCondition == object->startCondition) == asnFALSE)
    return asnFALSE;
  if((this->stopCondition == (StopCondition *) asnBNULL) || (object->stopCondition == (StopCondition *) asnBNULL))
    return asnFALSE;
  if((*(this->stopCondition) == *object->stopCondition) == asnFALSE)
    return asnFALSE;
  if((this->retentiondate == object->retentiondate) == asnFALSE)
    return asnFALSE;
  if((this->authorizationStatus == (AuthorizationStatus *) asnBNULL) || (object->authorizationStatus == (AuthorizationStatus *) asnBNULL))
    return asnFALSE;
  if((*(this->authorizationStatus) == *object->authorizationStatus) == asnFALSE)
    return asnFALSE;
  if((this->executionTrigger == (ExecutionTrigger *) asnBNULL) || (object->executionTrigger == (ExecutionTrigger *) asnBNULL))
    return asnFALSE;
  if((*(this->executionTrigger) == *object->executionTrigger) == asnFALSE)
    return asnFALSE;
  if((this->ecusAndPartNumbers == object->ecusAndPartNumbers) == asnFALSE)
    return asnFALSE;
  if((this->diagnosticCommand == object->diagnosticCommand) == asnFALSE)
    return asnFALSE;
  if((this->dataIntegrityCheck == object->dataIntegrityCheck) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_MeasurementAssignment__serviceParameters) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_MeasurementAssignment__serviceParameters) != asnFALSE)
    {
      if((this->serviceParameters == object->serviceParameters) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_MeasurementAssignment__serviceParameters) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncMaSynchronization__serviceParameterss
 *    Operator ==
 */
asnBOOL asncMaSynchronization__serviceParameterss::operator== (const asntype& obj) const
{
  const asncMaSynchronization__serviceParameterss* object = asnDCast(const asncMaSynchronization__serviceParameterss*,&obj);
  if(object == (asncMaSynchronization__serviceParameterss*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_intVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      if((this->intVal == object->intVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncMeasurementDataPackage__serviceParameterss
 *    Operator ==
 */
asnBOOL asncMeasurementDataPackage__serviceParameterss::operator== (const asntype& obj) const
{
  const asncMeasurementDataPackage__serviceParameterss* object = asnDCast(const asncMeasurementDataPackage__serviceParameterss*,&obj);
  if(object == (asncMeasurementDataPackage__serviceParameterss*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_intVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      if((this->intVal == object->intVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asnctrackpointss
 *    Operator ==
 */
asnBOOL asnctrackpointss::operator== (const asntype& obj) const
{
  const asnctrackpointss* object = asnDCast(const asnctrackpointss*,&obj);
  if(object == (asnctrackpointss*)0) return asnFALSE;
  if((this->systemTime == (TimeStamp *) asnBNULL) || (object->systemTime == (TimeStamp *) asnBNULL))
    return asnFALSE;
  if((*(this->systemTime) == *object->systemTime) == asnFALSE)
    return asnFALSE;
  if((this->position == (Position *) asnBNULL) || (object->position == (Position *) asnBNULL))
    return asnFALSE;
  if((*(this->position) == *object->position) == asnFALSE)
    return asnFALSE;
  if((this->speed == object->speed) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_TrackPoint__direction) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TrackPoint__direction) != asnFALSE)
    {
      if((this->direction == object->direction) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TrackPoint__direction) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_isSVT) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_isSVT) != asnFALSE)
    {
      if(this->isSVT == asnFALSE)
      {
        if(object->isSVT != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->isSVT == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_isSVT) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TrackPoint__odometer) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TrackPoint__odometer) != asnFALSE)
    {
      if((this->odometer == object->odometer) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TrackPoint__odometer) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_travelDistanceSinceLastWaypoint) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_travelDistanceSinceLastWaypoint) != asnFALSE)
    {
      if((this->travelDistanceSinceLastWaypoint == object->travelDistanceSinceLastWaypoint) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_travelDistanceSinceLastWaypoint) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fuelConsumptionSinceLastWaypoint) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fuelConsumptionSinceLastWaypoint) != asnFALSE)
    {
      if((this->fuelConsumptionSinceLastWaypoint == object->fuelConsumptionSinceLastWaypoint) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fuelConsumptionSinceLastWaypoint) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_electricConsumptionSinceLastSample) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_electricConsumptionSinceLastSample) != asnFALSE)
    {
      if((this->electricConsumptionSinceLastSample == object->electricConsumptionSinceLastSample) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_electricConsumptionSinceLastSample) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_electricRegenerationSinceLastSample) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_electricRegenerationSinceLastSample) != asnFALSE)
    {
      if((this->electricRegenerationSinceLastSample == object->electricRegenerationSinceLastSample) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_electricRegenerationSinceLastSample) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncwaypointss
 *    Operator ==
 */
asnBOOL asncwaypointss::operator== (const asntype& obj) const
{
  const asncwaypointss* object = asnDCast(const asncwaypointss*,&obj);
  if(object == (asncwaypointss*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_latitude) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_latitude) != asnFALSE)
    {
      if((this->latitude == object->latitude) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_latitude) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_longitude) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_longitude) != asnFALSE)
    {
      if((this->longitude == object->longitude) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_longitude) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_altitude) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_altitude) != asnFALSE)
    {
      if((this->altitude == object->altitude) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_altitude) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_posCanBeTrusted) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_posCanBeTrusted) != asnFALSE)
    {
      if(this->posCanBeTrusted == asnFALSE)
      {
        if(object->posCanBeTrusted != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->posCanBeTrusted == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_posCanBeTrusted) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_carLocatorStatUploadEn) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_carLocatorStatUploadEn) != asnFALSE)
    {
      if(this->carLocatorStatUploadEn == asnFALSE)
      {
        if(object->carLocatorStatUploadEn != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->carLocatorStatUploadEn == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_carLocatorStatUploadEn) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_marsCoordinates) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_marsCoordinates) != asnFALSE)
    {
      if(this->marsCoordinates == asnFALSE)
      {
        if(object->marsCoordinates != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->marsCoordinates == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_marsCoordinates) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asnctripFragmentss
 *    Operator ==
 */
asnBOOL asnctripFragmentss::operator== (const asntype& obj) const
{
  const asnctripFragmentss* object = asnDCast(const asnctripFragmentss*,&obj);
  if(object == (asnctripFragmentss*)0) return asnFALSE;
  if((this->startTime == (TimeStamp *) asnBNULL) || (object->startTime == (TimeStamp *) asnBNULL))
    return asnFALSE;
  if((*(this->startTime) == *object->startTime) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_startPosition) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_startPosition) != asnFALSE)
    {
      if((this->startPosition == (Position *) asnBNULL) || (object->startPosition == (Position *) asnBNULL))
        return asnFALSE;
      if((*(this->startPosition) == *object->startPosition) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_startPosition) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TripFragment__startOdometer) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TripFragment__startOdometer) != asnFALSE)
    {
      if((this->startOdometer == object->startOdometer) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TripFragment__startOdometer) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_startFuelLevel) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_startFuelLevel) != asnFALSE)
    {
      if((this->startFuelLevel == object->startFuelLevel) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_startFuelLevel) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_startElectricConsumption) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_startElectricConsumption) != asnFALSE)
    {
      if((this->startElectricConsumption == object->startElectricConsumption) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_startElectricConsumption) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_startElectricRegeneration) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_startElectricRegeneration) != asnFALSE)
    {
      if((this->startElectricRegeneration == object->startElectricRegeneration) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_startElectricRegeneration) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TripFragment__endTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TripFragment__endTime) != asnFALSE)
    {
      if((this->endTime == (TimeStamp *) asnBNULL) || (object->endTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->endTime) == *object->endTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TripFragment__endTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_endPosition) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_endPosition) != asnFALSE)
    {
      if((this->endPosition == (Position *) asnBNULL) || (object->endPosition == (Position *) asnBNULL))
        return asnFALSE;
      if((*(this->endPosition) == *object->endPosition) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_endPosition) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TripFragment__endOdometer) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TripFragment__endOdometer) != asnFALSE)
    {
      if((this->endOdometer == object->endOdometer) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TripFragment__endOdometer) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_endFuelLevel) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_endFuelLevel) != asnFALSE)
    {
      if((this->endFuelLevel == object->endFuelLevel) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_endFuelLevel) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_endElectricConsumption) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_endElectricConsumption) != asnFALSE)
    {
      if((this->endElectricConsumption == object->endElectricConsumption) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_endElectricConsumption) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_endElectricRegeneration) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_endElectricRegeneration) != asnFALSE)
    {
      if((this->endElectricRegeneration == object->endElectricRegeneration) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_endElectricRegeneration) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asnctrackPointss
 *    Operator ==
 */
asnBOOL asnctrackPointss::operator== (const asntype& obj) const
{
  const asnctrackPointss* object = asnDCast(const asnctrackPointss*,&obj);
  if(object == (asnctrackPointss*)0) return asnFALSE;
  if((this->systemTime == (TimeStamp *) asnBNULL) || (object->systemTime == (TimeStamp *) asnBNULL))
    return asnFALSE;
  if((*(this->systemTime) == *object->systemTime) == asnFALSE)
    return asnFALSE;
  if((this->position == (Position *) asnBNULL) || (object->position == (Position *) asnBNULL))
    return asnFALSE;
  if((*(this->position) == *object->position) == asnFALSE)
    return asnFALSE;
  if((this->speed == object->speed) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_TrackPoint__direction) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TrackPoint__direction) != asnFALSE)
    {
      if((this->direction == object->direction) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TrackPoint__direction) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_isSVT) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_isSVT) != asnFALSE)
    {
      if(this->isSVT == asnFALSE)
      {
        if(object->isSVT != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->isSVT == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_isSVT) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TrackPoint__odometer) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TrackPoint__odometer) != asnFALSE)
    {
      if((this->odometer == object->odometer) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TrackPoint__odometer) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_travelDistanceSinceLastWaypoint) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_travelDistanceSinceLastWaypoint) != asnFALSE)
    {
      if((this->travelDistanceSinceLastWaypoint == object->travelDistanceSinceLastWaypoint) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_travelDistanceSinceLastWaypoint) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fuelConsumptionSinceLastWaypoint) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fuelConsumptionSinceLastWaypoint) != asnFALSE)
    {
      if((this->fuelConsumptionSinceLastWaypoint == object->fuelConsumptionSinceLastWaypoint) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fuelConsumptionSinceLastWaypoint) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_electricConsumptionSinceLastSample) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_electricConsumptionSinceLastSample) != asnFALSE)
    {
      if((this->electricConsumptionSinceLastSample == object->electricConsumptionSinceLastSample) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_electricConsumptionSinceLastSample) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_electricRegenerationSinceLastSample) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_electricRegenerationSinceLastSample) != asnFALSE)
    {
      if((this->electricRegenerationSinceLastSample == object->electricRegenerationSinceLastSample) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_electricRegenerationSinceLastSample) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncdidDatas
 *    Operator ==
 */
asnBOOL asncdidDatas::operator== (const asntype& obj) const
{
  const asncdidDatas* object = asnDCast(const asncdidDatas*,&obj);
  if(object == (asncdidDatas*)0) return asnFALSE;
  if((this->id == object->id) == asnFALSE)
    return asnFALSE;
  if((this->data == object->data) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncdtcDatas
 *    Operator ==
 */
asnBOOL asncdtcDatas::operator== (const asntype& obj) const
{
  const asncdtcDatas* object = asnDCast(const asncdtcDatas*,&obj);
  if(object == (asncdtcDatas*)0) return asnFALSE;
  if((this->id == object->id) == asnFALSE)
    return asnFALSE;
  if((this->data == object->data) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncdatas
 *    Operator ==
 */
asnBOOL asncdatas::operator== (const asntype& obj) const
{
  const asncdatas* object = asnDCast(const asncdatas*,&obj);
  if(object == (asncdatas*)0) return asnFALSE;
  if((this->ecu == object->ecu) == asnFALSE)
    return asnFALSE;
  if((this->diagnosticNumber == object->diagnosticNumber) == asnFALSE)
    return asnFALSE;
  if((this->didData == object->didData) == asnFALSE)
    return asnFALSE;
  if((this->dtcData == object->dtcData) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asncconditionss
 *    Operator ==
 */
asnBOOL asncconditionss::operator== (const asntype& obj) const
{
  const asncconditionss* object = asnDCast(const asncconditionss*,&obj);
  if(object == (asncconditionss*)0) return asnFALSE;
  if((this->condition == object->condition) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : asnctimerss
 *    Operator ==
 */
asnBOOL asnctimerss::operator== (const asntype& obj) const
{
  const asnctimerss* object = asnDCast(const asnctimerss*,&obj);
  if(object == (asnctimerss*)0) return asnFALSE;
  if((this->timerActivation == object->timerActivation) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_TimerInfo__duration) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TimerInfo__duration) != asnFALSE)
    {
      if((this->duration == object->duration) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TimerInfo__duration) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_dayofWeek) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_dayofWeek) != asnFALSE)
    {
      if((this->dayofWeek == object->dayofWeek) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_dayofWeek) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TimerInfo__startTimeofDay) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TimerInfo__startTimeofDay) != asnFALSE)
    {
      if((this->startTimeofDay == object->startTimeofDay) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TimerInfo__startTimeofDay) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_endtimeofDay) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_endtimeofDay) != asnFALSE)
    {
      if((this->endtimeofDay == object->endtimeofDay) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_endtimeofDay) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : RequestHeader
 *    Operator ==
 */
asnBOOL RequestHeader::operator== (const asntype& obj) const
{
  const RequestHeader* object = asnDCast(const RequestHeader*,&obj);
  if(object == (RequestHeader*)0) return asnFALSE;
  if((this->requestid == object->requestid) == asnFALSE)
    return asnFALSE;
  if((this->timeStamp == (TimeStamp *) asnBNULL) || (object->timeStamp == (TimeStamp *) asnBNULL))
    return asnFALSE;
  if((*(this->timeStamp) == *object->timeStamp) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_eventId) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_eventId) != asnFALSE)
    {
      if((this->eventId == (TimeStamp *) asnBNULL) || (object->eventId == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->eventId) == *object->eventId) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_eventId) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_creatorId) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_creatorId) != asnFALSE)
    {
      if((this->creatorId == object->creatorId) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_creatorId) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_messageTTL) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_messageTTL) != asnFALSE)
    {
      if((this->messageTTL == object->messageTTL) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_messageTTL) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_requestType) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_requestType) != asnFALSE)
    {
      if((this->requestType == object->requestType) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_requestType) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ackRequired) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ackRequired) != asnFALSE)
    {
      if((this->ackRequired == object->ackRequired) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ackRequired) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : TimeStamp
 *    Operator ==
 */
asnBOOL TimeStamp::operator== (const asntype& obj) const
{
  const TimeStamp* object = asnDCast(const TimeStamp*,&obj);
  if(object == (TimeStamp*)0) return asnFALSE;
  if((this->seconds == object->seconds) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_milliseconds) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_milliseconds) != asnFALSE)
    {
      if((this->milliseconds == object->milliseconds) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_milliseconds) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : VDServiceRequest
 *    Operator ==
 */
asnBOOL VDServiceRequest::operator== (const asntype& obj) const
{
  const VDServiceRequest* object = asnDCast(const VDServiceRequest*,&obj);
  if(object == (VDServiceRequest*)0) return asnFALSE;
  if((this->header == (RequestHeader *) asnBNULL) || (object->header == (RequestHeader *) asnBNULL))
    return asnFALSE;
  if((*(this->header) == *object->header) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_body) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_body) != asnFALSE)
    {
      if((this->body == (RequestBody *) asnBNULL) || (object->body == (RequestBody *) asnBNULL))
        return asnFALSE;
      if((*(this->body) == *object->body) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_body) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : AssignmentData
 *    Operator ==
 */
asnBOOL AssignmentData::operator== (const asntype& obj) const
{
  const AssignmentData* object = asnDCast(const AssignmentData*,&obj);
  if(object == (AssignmentData*)0) return asnFALSE;
  if((this->installationOrderId == object->installationOrderId) == asnFALSE)
    return asnFALSE;
  if((this->timestamp == object->timestamp) == asnFALSE)
    return asnFALSE;
  if((this->urls == object->urls) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : AssignmentFileInfo
 *    Operator ==
 */
asnBOOL AssignmentFileInfo::operator== (const asntype& obj) const
{
  const AssignmentFileInfo* object = asnDCast(const AssignmentFileInfo*,&obj);
  if(object == (AssignmentFileInfo*)0) return asnFALSE;
  if((this->partidentifier == object->partidentifier) == asnFALSE)
    return asnFALSE;
  if((this->softwarePartSignature == object->softwarePartSignature) == asnFALSE)
    return asnFALSE;
  if((this->fileCheckSum == object->fileCheckSum) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : AssignmentValidation
 *    Operator ==
 */
asnBOOL AssignmentValidation::operator== (const asntype& obj) const
{
  const AssignmentValidation* object = asnDCast(const AssignmentValidation*,&obj);
  if(object == (AssignmentValidation*)0) return asnFALSE;
  if((this->validationType == object->validationType) == asnFALSE)
    return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->validationkey == object->validationkey) == asnFALSE)
    return asnFALSE;
  if((this->partidentifiers == object->partidentifiers) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : AuthorizationStatus
 *    Operator ==
 */
asnBOOL AuthorizationStatus::operator== (const asntype& obj) const
{
  const AuthorizationStatus* object = asnDCast(const AuthorizationStatus*,&obj);
  if(object == (AuthorizationStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_dataCollection) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_dataCollection) != asnFALSE)
    {
      if(this->dataCollection == asnFALSE)
      {
        if(object->dataCollection != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->dataCollection == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_dataCollection) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_remoteDiagnostics) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_remoteDiagnostics) != asnFALSE)
    {
      if(this->remoteDiagnostics == asnFALSE)
      {
        if(object->remoteDiagnostics != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->remoteDiagnostics == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_remoteDiagnostics) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : AvailableAssignment
 *    Operator ==
 */
asnBOOL AvailableAssignment::operator== (const asntype& obj) const
{
  const AvailableAssignment* object = asnDCast(const AvailableAssignment*,&obj);
  if(object == (AvailableAssignment*)0) return asnFALSE;
  if((this->installationOrderId == object->installationOrderId) == asnFALSE)
    return asnFALSE;
  if((this->timestamp == object->timestamp) == asnFALSE)
    return asnFALSE;
  if(this->workshopInstallation == asnFALSE)
  {
    if(object->workshopInstallation != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->workshopInstallation == asnFALSE) return asnFALSE;
  }
  if((this->downloadsize == object->downloadsize) == asnFALSE)
    return asnFALSE;
  if((this->totalinstallationTime == object->totalinstallationTime) == asnFALSE)
    return asnFALSE;
  if((this->newstatus == object->newstatus) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_AvailableAssignment__reason) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_AvailableAssignment__reason) != asnFALSE)
    {
      if((this->reason == object->reason) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_AvailableAssignment__reason) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->name == object->name) == asnFALSE)
    return asnFALSE;
  if((this->shortDescription == object->shortDescription) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_longDescription) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_longDescription) != asnFALSE)
    {
      if((this->longDescription == object->longDescription) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_longDescription) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : AvailableAssignmentRequest
 *    Operator ==
 */
asnBOOL AvailableAssignmentRequest::operator== (const asntype& obj) const
{
  const AvailableAssignmentRequest* object = asnDCast(const AvailableAssignmentRequest*,&obj);
  if(object == (AvailableAssignmentRequest*)0) return asnFALSE;
  if((this->languageSetting == (LanguageSetting *) asnBNULL) || (object->languageSetting == (LanguageSetting *) asnBNULL))
    return asnFALSE;
  if((*(this->languageSetting) == *object->languageSetting) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : ClientConfSyncRequest
 *    Operator ==
 */
asnBOOL ClientConfSyncRequest::operator== (const asntype& obj) const
{
  const ClientConfSyncRequest* object = asnDCast(const ClientConfSyncRequest*,&obj);
  if(object == (ClientConfSyncRequest*)0) return asnFALSE;
  if((this->timestamp == object->timestamp) == asnFALSE)
    return asnFALSE;
  if((this->clientVersion == object->clientVersion) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_ecuInventory) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ecuInventory) != asnFALSE)
    {
      if((this->ecuInventory == object->ecuInventory) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ecuInventory) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : ClientHmiVehicleSettings
 *    Operator ==
 */
asnBOOL ClientHmiVehicleSettings::operator== (const asntype& obj) const
{
  const ClientHmiVehicleSettings* object = asnDCast(const ClientHmiVehicleSettings*,&obj);
  if(object == (ClientHmiVehicleSettings*)0) return asnFALSE;
  if(this->otaSetting == asnFALSE)
  {
    if(object->otaSetting != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->otaSetting == asnFALSE) return asnFALSE;
  }
  if(this->autoSync == asnFALSE)
  {
    if(object->autoSync != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->autoSync == asnFALSE) return asnFALSE;
  }
  if(this->autoDownload == asnFALSE)
  {
    if(object->autoDownload != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->autoDownload == asnFALSE) return asnFALSE;
  }
  if(this->autoInstallation == asnFALSE)
  {
    if(object->autoInstallation != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->autoInstallation == asnFALSE) return asnFALSE;
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : DiagnosticCommand
 *    Operator ==
 */
asnBOOL DiagnosticCommand::operator== (const asntype& obj) const
{
  const DiagnosticCommand* object = asnDCast(const DiagnosticCommand*,&obj);
  if(object == (DiagnosticCommand*)0) return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->serviceId == object->serviceId) == asnFALSE)
    return asnFALSE;
  if((this->input == object->input) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_compareType) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_compareType) != asnFALSE)
    {
      if((this->compareType == object->compareType) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_compareType) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_compareValue) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_compareValue) != asnFALSE)
    {
      if((this->compareValue == object->compareValue) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_compareValue) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->delayUntilNextTriggerCommand == object->delayUntilNextTriggerCommand) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : EcuExceptionReport
 *    Operator ==
 */
asnBOOL EcuExceptionReport::operator== (const asntype& obj) const
{
  const EcuExceptionReport* object = asnDCast(const EcuExceptionReport*,&obj);
  if(object == (EcuExceptionReport*)0) return asnFALSE;
  if((this->exceptionReportMsgRemaining == object->exceptionReportMsgRemaining) == asnFALSE)
    return asnFALSE;
  if((this->exceptionReports == object->exceptionReports) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : EcuInstruction
 *    Operator ==
 */
asnBOOL EcuInstruction::operator== (const asntype& obj) const
{
  const EcuInstruction* object = asnDCast(const EcuInstruction*,&obj);
  if(object == (EcuInstruction*)0) return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->queuedRequest == object->queuedRequest) == asnFALSE)
    return asnFALSE;
  if((this->securityKey == object->securityKey) == asnFALSE)
    return asnFALSE;
  if((this->softwarePartInstallationInstructions == object->softwarePartInstallationInstructions) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : EcuInventory
 *    Operator ==
 */
asnBOOL EcuInventory::operator== (const asntype& obj) const
{
  const EcuInventory* object = asnDCast(const EcuInventory*,&obj);
  if(object == (EcuInventory*)0) return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->validationKeys == object->validationKeys) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_exceptionMessage) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_exceptionMessage) != asnFALSE)
    {
      if((this->exceptionMessage == object->exceptionMessage) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_exceptionMessage) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : EcuSummary
 *    Operator ==
 */
asnBOOL EcuSummary::operator== (const asntype& obj) const
{
  const EcuSummary* object = asnDCast(const EcuSummary*,&obj);
  if(object == (EcuSummary*)0) return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->ecuRetries == object->ecuRetries) == asnFALSE)
    return asnFALSE;
  if((this->ecuStatus == object->ecuStatus) == asnFALSE)
    return asnFALSE;
  if((this->softwarePartSummarys == object->softwarePartSummarys) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : EcusAndPartNumber
 *    Operator ==
 */
asnBOOL EcusAndPartNumber::operator== (const asntype& obj) const
{
  const EcusAndPartNumber* object = asnDCast(const EcusAndPartNumber*,&obj);
  if(object == (EcusAndPartNumber*)0) return asnFALSE;
  if((this->ecuAddress == object->ecuAddress) == asnFALSE)
    return asnFALSE;
  if((this->diagnosticPartNumber == object->diagnosticPartNumber) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : ExceptionMessage
 *    Operator ==
 */
asnBOOL ExceptionMessage::operator== (const asntype& obj) const
{
  const ExceptionMessage* object = asnDCast(const ExceptionMessage*,&obj);
  if(object == (ExceptionMessage*)0) return asnFALSE;
  if((this->activity == object->activity) == asnFALSE)
    return asnFALSE;
  if((this->action == object->action) == asnFALSE)
    return asnFALSE;
  if((this->exception == object->exception) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : ExceptionReport
 *    Operator ==
 */
asnBOOL ExceptionReport::operator== (const asntype& obj) const
{
  const ExceptionReport* object = asnDCast(const ExceptionReport*,&obj);
  if(object == (ExceptionReport*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_ExceptionReport__installationOrderId) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ExceptionReport__installationOrderId) != asnFALSE)
    {
      if((this->installationOrderId == object->installationOrderId) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ExceptionReport__installationOrderId) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->timestamp == object->timestamp) == asnFALSE)
    return asnFALSE;
  if((this->issuerId == object->issuerId) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_clientConfigurationId) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_clientConfigurationId) != asnFALSE)
    {
      if((this->clientConfigurationId == object->clientConfigurationId) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_clientConfigurationId) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_dataFileName) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_dataFileName) != asnFALSE)
    {
      if((this->dataFileName == object->dataFileName) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_dataFileName) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ecuAddress) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ecuAddress) != asnFALSE)
    {
      if((this->ecuAddress == object->ecuAddress) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ecuAddress) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_validationKey) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_validationKey) != asnFALSE)
    {
      if((this->validationKey == object->validationKey) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_validationKey) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_partIdentifier) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_partIdentifier) != asnFALSE)
    {
      if((this->partIdentifier == object->partIdentifier) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_partIdentifier) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_dataBlockNumber) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_dataBlockNumber) != asnFALSE)
    {
      if((this->dataBlockNumber == object->dataBlockNumber) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_dataBlockNumber) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->exceptionMessage == (ExceptionMessage *) asnBNULL) || (object->exceptionMessage == (ExceptionMessage *) asnBNULL))
    return asnFALSE;
  if((*(this->exceptionMessage) == *object->exceptionMessage) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : ExecutionTrigger
 *    Operator ==
 */
asnBOOL ExecutionTrigger::operator== (const asntype& obj) const
{
  const ExecutionTrigger* object = asnDCast(const ExecutionTrigger*,&obj);
  if(object == (ExecutionTrigger*)0) return asnFALSE;
  if(this->push == asnFALSE)
  {
    if(object->push != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->push == asnFALSE) return asnFALSE;
  }
  if(asnGetPresence(object->optionalField,asn_uds) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_uds) != asnFALSE)
    {
      if((this->uds == (UDS *) asnBNULL) || (object->uds == (UDS *) asnBNULL))
        return asnFALSE;
      if((*(this->uds) == *object->uds) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_uds) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ExecutionTrigger__time) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ExecutionTrigger__time) != asnFALSE)
    {
      if((this->time == (Trigger *) asnBNULL) || (object->time == (Trigger *) asnBNULL))
        return asnFALSE;
      if((*(this->time) == *object->time) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ExecutionTrigger__time) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_drivingCycle) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_drivingCycle) != asnFALSE)
    {
      if((this->drivingCycle == (Trigger *) asnBNULL) || (object->drivingCycle == (Trigger *) asnBNULL))
        return asnFALSE;
      if((*(this->drivingCycle) == *object->drivingCycle) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_drivingCycle) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : FOTA
 *    Operator ==
 */
asnBOOL FOTA::operator== (const asntype& obj) const
{
  const FOTA* object = asnDCast(const FOTA*,&obj);
  if(object == (FOTA*)0) return asnFALSE;
  if((this->appId == object->appId) == asnFALSE)
    return asnFALSE;
  if((this->vin == object->vin) == asnFALSE)
    return asnFALSE;
  if((this->dataType == object->dataType) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_FOTA__clientConfSyncRequest) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FOTA__clientConfSyncRequest) != asnFALSE)
    {
      if((this->clientConfSyncRequest == (ClientConfSyncRequest *) asnBNULL) || (object->clientConfSyncRequest == (ClientConfSyncRequest *) asnBNULL))
        return asnFALSE;
      if((*(this->clientConfSyncRequest) == *object->clientConfSyncRequest) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FOTA__clientConfSyncRequest) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FOTA__inventoryInstruction) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FOTA__inventoryInstruction) != asnFALSE)
    {
      if((this->inventoryInstruction == (InventoryInstruction *) asnBNULL) || (object->inventoryInstruction == (InventoryInstruction *) asnBNULL))
        return asnFALSE;
      if((*(this->inventoryInstruction) == *object->inventoryInstruction) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FOTA__inventoryInstruction) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FOTA__availableAssignmentRequest) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FOTA__availableAssignmentRequest) != asnFALSE)
    {
      if((this->availableAssignmentRequest == (AvailableAssignmentRequest *) asnBNULL) || (object->availableAssignmentRequest == (AvailableAssignmentRequest *) asnBNULL))
        return asnFALSE;
      if((*(this->availableAssignmentRequest) == *object->availableAssignmentRequest) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FOTA__availableAssignmentRequest) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FOTA__availableAssignment) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FOTA__availableAssignment) != asnFALSE)
    {
      if((this->availableAssignment == (AvailableAssignment *) asnBNULL) || (object->availableAssignment == (AvailableAssignment *) asnBNULL))
        return asnFALSE;
      if((*(this->availableAssignment) == *object->availableAssignment) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FOTA__availableAssignment) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FOTA__installationInstruction) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FOTA__installationInstruction) != asnFALSE)
    {
      if((this->installationInstruction == (InstallationInstruction *) asnBNULL) || (object->installationInstruction == (InstallationInstruction *) asnBNULL))
        return asnFALSE;
      if((*(this->installationInstruction) == *object->installationInstruction) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FOTA__installationInstruction) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FOTA__installationSummary) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FOTA__installationSummary) != asnFALSE)
    {
      if((this->installationSummary == (InstallationSummary *) asnBNULL) || (object->installationSummary == (InstallationSummary *) asnBNULL))
        return asnFALSE;
      if((*(this->installationSummary) == *object->installationSummary) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FOTA__installationSummary) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FOTA__ecuExceptionReport) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FOTA__ecuExceptionReport) != asnFALSE)
    {
      if((this->ecuExceptionReport == (EcuExceptionReport *) asnBNULL) || (object->ecuExceptionReport == (EcuExceptionReport *) asnBNULL))
        return asnFALSE;
      if((*(this->ecuExceptionReport) == *object->ecuExceptionReport) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FOTA__ecuExceptionReport) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FOTA__clientHmiVehicleSettings) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FOTA__clientHmiVehicleSettings) != asnFALSE)
    {
      if((this->clientHmiVehicleSettings == (ClientHmiVehicleSettings *) asnBNULL) || (object->clientHmiVehicleSettings == (ClientHmiVehicleSettings *) asnBNULL))
        return asnFALSE;
      if((*(this->clientHmiVehicleSettings) == *object->clientHmiVehicleSettings) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FOTA__clientHmiVehicleSettings) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FOTA__assignmentData) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FOTA__assignmentData) != asnFALSE)
    {
      if((this->assignmentData == (AssignmentData *) asnBNULL) || (object->assignmentData == (AssignmentData *) asnBNULL))
        return asnFALSE;
      if((*(this->assignmentData) == *object->assignmentData) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FOTA__assignmentData) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FOTA__assignmentNotification) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FOTA__assignmentNotification) != asnFALSE)
    {
      if((this->assignmentNotification == (FotaAssignmentNotification *) asnBNULL) || (object->assignmentNotification == (FotaAssignmentNotification *) asnBNULL))
        return asnFALSE;
      if((*(this->assignmentNotification) == *object->assignmentNotification) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FOTA__assignmentNotification) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FOTA__otaAssignmentFileInfo) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FOTA__otaAssignmentFileInfo) != asnFALSE)
    {
      if((this->otaAssignmentFileInfo == (OtaAssignmentFileInfo *) asnBNULL) || (object->otaAssignmentFileInfo == (OtaAssignmentFileInfo *) asnBNULL))
        return asnFALSE;
      if((*(this->otaAssignmentFileInfo) == *object->otaAssignmentFileInfo) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FOTA__otaAssignmentFileInfo) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : FotaAssignmentNotification
 *    Operator ==
 */
asnBOOL FotaAssignmentNotification::operator== (const asntype& obj) const
{
  const FotaAssignmentNotification* object = asnDCast(const FotaAssignmentNotification*,&obj);
  if(object == (FotaAssignmentNotification*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_FotaAssignmentNotification__installationOrderId) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FotaAssignmentNotification__installationOrderId) != asnFALSE)
    {
      if((this->installationOrderId == object->installationOrderId) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FotaAssignmentNotification__installationOrderId) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->timestamp == object->timestamp) == asnFALSE)
    return asnFALSE;
  if((this->newStatus == object->newStatus) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_FotaAssignmentNotification__reason) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FotaAssignmentNotification__reason) != asnFALSE)
    {
      if((this->reason == object->reason) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FotaAssignmentNotification__reason) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_deltaTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_deltaTime) != asnFALSE)
    {
      if((this->deltaTime == object->deltaTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_deltaTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_serviceParams) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_serviceParams) != asnFALSE)
    {
      if((this->serviceParams == object->serviceParams) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_serviceParams) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : InstallationInstruction
 *    Operator ==
 */
asnBOOL InstallationInstruction::operator== (const asntype& obj) const
{
  const InstallationInstruction* object = asnDCast(const InstallationInstruction*,&obj);
  if(object == (InstallationInstruction*)0) return asnFALSE;
  if((this->installationOrderId == object->installationOrderId) == asnFALSE)
    return asnFALSE;
  if((this->instructions == object->instructions) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : InstallationSummary
 *    Operator ==
 */
asnBOOL InstallationSummary::operator== (const asntype& obj) const
{
  const InstallationSummary* object = asnDCast(const InstallationSummary*,&obj);
  if(object == (InstallationSummary*)0) return asnFALSE;
  if((this->installationOrderId == object->installationOrderId) == asnFALSE)
    return asnFALSE;
  if((this->timestamp == object->timestamp) == asnFALSE)
    return asnFALSE;
  if((this->repeatresets == object->repeatresets) == asnFALSE)
    return asnFALSE;
  if((this->totalInstallationTime == object->totalInstallationTime) == asnFALSE)
    return asnFALSE;
  if((this->ecuSummarys == object->ecuSummarys) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : Instruction
 *    Operator ==
 */
asnBOOL Instruction::operator== (const asntype& obj) const
{
  const Instruction* object = asnDCast(const Instruction*,&obj);
  if(object == (Instruction*)0) return asnFALSE;
  if((this->ecuRemaining == object->ecuRemaining) == asnFALSE)
    return asnFALSE;
  if((this->installationInstructionSversion == object->installationInstructionSversion) == asnFALSE)
    return asnFALSE;
  if((this->requiredPreparationTime == object->requiredPreparationTime) == asnFALSE)
    return asnFALSE;
  if((this->expectedInstallationTime == object->expectedInstallationTime) == asnFALSE)
    return asnFALSE;
  if((this->area1112SecurityCode == object->area1112SecurityCode) == asnFALSE)
    return asnFALSE;
  if((this->ecuInstructions == object->ecuInstructions) == asnFALSE)
    return asnFALSE;
  if((this->assignmentValidations == object->assignmentValidations) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : InventoryInstruction
 *    Operator ==
 */
asnBOOL InventoryInstruction::operator== (const asntype& obj) const
{
  const InventoryInstruction* object = asnDCast(const InventoryInstruction*,&obj);
  if(object == (InventoryInstruction*)0) return asnFALSE;
  if((this->inventoryInstructionVersion == object->inventoryInstructionVersion) == asnFALSE)
    return asnFALSE;
  if((this->ecuInstructions == object->ecuInstructions) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : LanguageSetting
 *    Operator ==
 */
asnBOOL LanguageSetting::operator== (const asntype& obj) const
{
  const LanguageSetting* object = asnDCast(const LanguageSetting*,&obj);
  if(object == (LanguageSetting*)0) return asnFALSE;
  if((this->language == object->language) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : Ma
 *    Operator ==
 */
asnBOOL Ma::operator== (const asntype& obj) const
{
  const Ma* object = asnDCast(const Ma*,&obj);
  if(object == (Ma*)0) return asnFALSE;
  if((this->maId == object->maId) == asnFALSE)
    return asnFALSE;
  if((this->maVersion == object->maVersion) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : MaSetting
 *    Operator ==
 */
asnBOOL MaSetting::operator== (const asntype& obj) const
{
  const MaSetting* object = asnDCast(const MaSetting*,&obj);
  if(object == (MaSetting*)0) return asnFALSE;
  if(this->collectFunction == asnFALSE)
  {
    if(object->collectFunction != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->collectFunction == asnFALSE) return asnFALSE;
  }
  if((this->authorizationStatus == (AuthorizationStatus *) asnBNULL) || (object->authorizationStatus == (AuthorizationStatus *) asnBNULL))
    return asnFALSE;
  if((*(this->authorizationStatus) == *object->authorizationStatus) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : MaSynchronization
 *    Operator ==
 */
asnBOOL MaSynchronization::operator== (const asntype& obj) const
{
  const MaSynchronization* object = asnDCast(const MaSynchronization*,&obj);
  if(object == (MaSynchronization*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_removeMas) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_removeMas) != asnFALSE)
    {
      if((this->removeMas == object->removeMas) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_removeMas) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_newMas) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_newMas) != asnFALSE)
    {
      if((this->newMas == object->newMas) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_newMas) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_MaSynchronization__serviceParameters) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_MaSynchronization__serviceParameters) != asnFALSE)
    {
      if((this->serviceParameters == object->serviceParameters) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_MaSynchronization__serviceParameters) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : MaSynchronizationReq
 *    Operator ==
 */
asnBOOL MaSynchronizationReq::operator== (const asntype& obj) const
{
  const MaSynchronizationReq* object = asnDCast(const MaSynchronizationReq*,&obj);
  if(object == (MaSynchronizationReq*)0) return asnFALSE;
  if((this->storageQuota == object->storageQuota) == asnFALSE)
    return asnFALSE;
  if((this->maFormatVersion == object->maFormatVersion) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_installedMa) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_installedMa) != asnFALSE)
    {
      if((this->installedMa == object->installedMa) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_installedMa) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_MaSynchronizationReq__serviceParameters) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_MaSynchronizationReq__serviceParameters) != asnFALSE)
    {
      if((this->serviceParameters == object->serviceParameters) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_MaSynchronizationReq__serviceParameters) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : Mdp
 *    Operator ==
 */
asnBOOL Mdp::operator== (const asntype& obj) const
{
  const Mdp* object = asnDCast(const Mdp*,&obj);
  if(object == (Mdp*)0) return asnFALSE;
  if((this->mdpFormatVersion == object->mdpFormatVersion) == asnFALSE)
    return asnFALSE;
  if((this->vin == object->vin) == asnFALSE)
    return asnFALSE;
  if((this->ma == (Ma *) asnBNULL) || (object->ma == (Ma *) asnBNULL))
    return asnFALSE;
  if((*(this->ma) == *object->ma) == asnFALSE)
    return asnFALSE;
  if((this->sequenceNumber == object->sequenceNumber) == asnFALSE)
    return asnFALSE;
  if((this->timestampReadOutStart == object->timestampReadOutStart) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_udsTriggerId) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_udsTriggerId) != asnFALSE)
    {
      if((this->udsTriggerId == object->udsTriggerId) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_udsTriggerId) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->diagnosticResponse == object->diagnosticResponse) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : MeasurementAssignment
 *    Operator ==
 */
asnBOOL MeasurementAssignment::operator== (const asntype& obj) const
{
  const MeasurementAssignment* object = asnDCast(const MeasurementAssignment*,&obj);
  if(object == (MeasurementAssignment*)0) return asnFALSE;
  if((this->maId == object->maId) == asnFALSE)
    return asnFALSE;
  if((this->maVersion == object->maVersion) == asnFALSE)
    return asnFALSE;
  if((this->vin == object->vin) == asnFALSE)
    return asnFALSE;
  if((this->maFormatVersion == object->maFormatVersion) == asnFALSE)
    return asnFALSE;
  if((this->maExecutionPriority == object->maExecutionPriority) == asnFALSE)
    return asnFALSE;
  if((this->telematicsParameters == (TelematicsParameters *) asnBNULL) || (object->telematicsParameters == (TelematicsParameters *) asnBNULL))
    return asnFALSE;
  if((*(this->telematicsParameters) == *object->telematicsParameters) == asnFALSE)
    return asnFALSE;
  if((this->usageModesAllowed == object->usageModesAllowed) == asnFALSE)
    return asnFALSE;
  if((this->startCondition == object->startCondition) == asnFALSE)
    return asnFALSE;
  if((this->stopCondition == (StopCondition *) asnBNULL) || (object->stopCondition == (StopCondition *) asnBNULL))
    return asnFALSE;
  if((*(this->stopCondition) == *object->stopCondition) == asnFALSE)
    return asnFALSE;
  if((this->retentiondate == object->retentiondate) == asnFALSE)
    return asnFALSE;
  if((this->authorizationStatus == (AuthorizationStatus *) asnBNULL) || (object->authorizationStatus == (AuthorizationStatus *) asnBNULL))
    return asnFALSE;
  if((*(this->authorizationStatus) == *object->authorizationStatus) == asnFALSE)
    return asnFALSE;
  if((this->executionTrigger == (ExecutionTrigger *) asnBNULL) || (object->executionTrigger == (ExecutionTrigger *) asnBNULL))
    return asnFALSE;
  if((*(this->executionTrigger) == *object->executionTrigger) == asnFALSE)
    return asnFALSE;
  if((this->ecusAndPartNumbers == object->ecusAndPartNumbers) == asnFALSE)
    return asnFALSE;
  if((this->diagnosticCommand == object->diagnosticCommand) == asnFALSE)
    return asnFALSE;
  if((this->dataIntegrityCheck == object->dataIntegrityCheck) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_MeasurementAssignment__serviceParameters) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_MeasurementAssignment__serviceParameters) != asnFALSE)
    {
      if((this->serviceParameters == object->serviceParameters) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_MeasurementAssignment__serviceParameters) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : MeasurementDataPackage
 *    Operator ==
 */
asnBOOL MeasurementDataPackage::operator== (const asntype& obj) const
{
  const MeasurementDataPackage* object = asnDCast(const MeasurementDataPackage*,&obj);
  if(object == (MeasurementDataPackage*)0) return asnFALSE;
  if((this->telematicsParameters == (TelematicsParameters *) asnBNULL) || (object->telematicsParameters == (TelematicsParameters *) asnBNULL))
    return asnFALSE;
  if((*(this->telematicsParameters) == *object->telematicsParameters) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_MeasurementDataPackage__serviceParameters) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_MeasurementDataPackage__serviceParameters) != asnFALSE)
    {
      if((this->serviceParameters == object->serviceParameters) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_MeasurementDataPackage__serviceParameters) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->mdp == (Mdp *) asnBNULL) || (object->mdp == (Mdp *) asnBNULL))
    return asnFALSE;
  if((*(this->mdp) == *object->mdp) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : OtaAssignmentFileInfo
 *    Operator ==
 */
asnBOOL OtaAssignmentFileInfo::operator== (const asntype& obj) const
{
  const OtaAssignmentFileInfo* object = asnDCast(const OtaAssignmentFileInfo*,&obj);
  if(object == (OtaAssignmentFileInfo*)0) return asnFALSE;
  if((this->installationOrderId == object->installationOrderId) == asnFALSE)
    return asnFALSE;
  if((this->assignFileInfos == object->assignFileInfos) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : RVDC
 *    Operator ==
 */
asnBOOL RVDC::operator== (const asntype& obj) const
{
  const RVDC* object = asnDCast(const RVDC*,&obj);
  if(object == (RVDC*)0) return asnFALSE;
  if((this->appId == object->appId) == asnFALSE)
    return asnFALSE;
  if((this->maOrderId == object->maOrderId) == asnFALSE)
    return asnFALSE;
  if((this->timestamp == object->timestamp) == asnFALSE)
    return asnFALSE;
  if((this->vin == object->vin) == asnFALSE)
    return asnFALSE;
  if((this->maBusinessType == object->maBusinessType) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_RVDC__rvdcSetting) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_RVDC__rvdcSetting) != asnFALSE)
    {
      if((this->rvdcSetting == (RvdcSetting *) asnBNULL) || (object->rvdcSetting == (RvdcSetting *) asnBNULL))
        return asnFALSE;
      if((*(this->rvdcSetting) == *object->rvdcSetting) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_RVDC__rvdcSetting) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_RVDC__assignmentNotification) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_RVDC__assignmentNotification) != asnFALSE)
    {
      if((this->assignmentNotification == (RvdcAssignmentNotification *) asnBNULL) || (object->assignmentNotification == (RvdcAssignmentNotification *) asnBNULL))
        return asnFALSE;
      if((*(this->assignmentNotification) == *object->assignmentNotification) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_RVDC__assignmentNotification) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_RVDC__maSynchronizationReq) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_RVDC__maSynchronizationReq) != asnFALSE)
    {
      if((this->maSynchronizationReq == (MaSynchronizationReq *) asnBNULL) || (object->maSynchronizationReq == (MaSynchronizationReq *) asnBNULL))
        return asnFALSE;
      if((*(this->maSynchronizationReq) == *object->maSynchronizationReq) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_RVDC__maSynchronizationReq) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_RVDC__maSynchronization) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_RVDC__maSynchronization) != asnFALSE)
    {
      if((this->maSynchronization == (MaSynchronization *) asnBNULL) || (object->maSynchronization == (MaSynchronization *) asnBNULL))
        return asnFALSE;
      if((*(this->maSynchronization) == *object->maSynchronization) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_RVDC__maSynchronization) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_RVDC__exceptionHandling) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_RVDC__exceptionHandling) != asnFALSE)
    {
      if((this->exceptionHandling == (RvdcExceptionHandling *) asnBNULL) || (object->exceptionHandling == (RvdcExceptionHandling *) asnBNULL))
        return asnFALSE;
      if((*(this->exceptionHandling) == *object->exceptionHandling) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_RVDC__exceptionHandling) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_RVDC__measurementDataPackage) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_RVDC__measurementDataPackage) != asnFALSE)
    {
      if((this->measurementDataPackage == (MeasurementDataPackage *) asnBNULL) || (object->measurementDataPackage == (MeasurementDataPackage *) asnBNULL))
        return asnFALSE;
      if((*(this->measurementDataPackage) == *object->measurementDataPackage) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_RVDC__measurementDataPackage) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : RvdcAssignmentNotification
 *    Operator ==
 */
asnBOOL RvdcAssignmentNotification::operator== (const asntype& obj) const
{
  const RvdcAssignmentNotification* object = asnDCast(const RvdcAssignmentNotification*,&obj);
  if(object == (RvdcAssignmentNotification*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_maCarId) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_maCarId) != asnFALSE)
    {
      if((this->maCarId == object->maCarId) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_maCarId) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_maVersion) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_maVersion) != asnFALSE)
    {
      if((this->maVersion == object->maVersion) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_maVersion) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->newStatus == object->newStatus) == asnFALSE)
    return asnFALSE;
  if((this->timestamp == object->timestamp) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_RvdcAssignmentNotification__reason) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_RvdcAssignmentNotification__reason) != asnFALSE)
    {
      if((this->reason == object->reason) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_RvdcAssignmentNotification__reason) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : RvdcExceptionHandling
 *    Operator ==
 */
asnBOOL RvdcExceptionHandling::operator== (const asntype& obj) const
{
  const RvdcExceptionHandling* object = asnDCast(const RvdcExceptionHandling*,&obj);
  if(object == (RvdcExceptionHandling*)0) return asnFALSE;
  if((this->exceptionName == object->exceptionName) == asnFALSE)
    return asnFALSE;
  if((this->description == object->description) == asnFALSE)
    return asnFALSE;
  if((this->publisher == object->publisher) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_severity) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_severity) != asnFALSE)
    {
      if((this->severity == object->severity) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_severity) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_impact) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_impact) != asnFALSE)
    {
      if((this->impact == object->impact) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_impact) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_RvdcExceptionHandling__action) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_RvdcExceptionHandling__action) != asnFALSE)
    {
      if((this->action == object->action) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_RvdcExceptionHandling__action) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : RvdcForcedSetting
 *    Operator ==
 */
asnBOOL RvdcForcedSetting::operator== (const asntype& obj) const
{
  const RvdcForcedSetting* object = asnDCast(const RvdcForcedSetting*,&obj);
  if(object == (RvdcForcedSetting*)0) return asnFALSE;
  if(this->visibility == asnFALSE)
  {
    if(object->visibility != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->visibility == asnFALSE) return asnFALSE;
  }
  if(this->suppress == asnFALSE)
  {
    if(object->suppress != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->suppress == asnFALSE) return asnFALSE;
  }
  if(this->lock == asnFALSE)
  {
    if(object->lock != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->lock == asnFALSE) return asnFALSE;
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : RvdcSetting
 *    Operator ==
 */
asnBOOL RvdcSetting::operator== (const asntype& obj) const
{
  const RvdcSetting* object = asnDCast(const RvdcSetting*,&obj);
  if(object == (RvdcSetting*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_maSetting) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_maSetting) != asnFALSE)
    {
      if((this->maSetting == (MaSetting *) asnBNULL) || (object->maSetting == (MaSetting *) asnBNULL))
        return asnFALSE;
      if((*(this->maSetting) == *object->maSetting) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_maSetting) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_vehicleSetting) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_vehicleSetting) != asnFALSE)
    {
      if((this->vehicleSetting == (RvdcVehicleSetting *) asnBNULL) || (object->vehicleSetting == (RvdcVehicleSetting *) asnBNULL))
        return asnFALSE;
      if((*(this->vehicleSetting) == *object->vehicleSetting) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_vehicleSetting) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_languageSetting) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_languageSetting) != asnFALSE)
    {
      if((this->languageSetting == (LanguageSetting *) asnBNULL) || (object->languageSetting == (LanguageSetting *) asnBNULL))
        return asnFALSE;
      if((*(this->languageSetting) == *object->languageSetting) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_languageSetting) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_forcedSetting) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_forcedSetting) != asnFALSE)
    {
      if((this->forcedSetting == (RvdcForcedSetting *) asnBNULL) || (object->forcedSetting == (RvdcForcedSetting *) asnBNULL))
        return asnFALSE;
      if((*(this->forcedSetting) == *object->forcedSetting) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_forcedSetting) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_RvdcSetting__serviceParameters) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_RvdcSetting__serviceParameters) != asnFALSE)
    {
      if((this->serviceParameters == object->serviceParameters) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_RvdcSetting__serviceParameters) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : RvdcVehicleSetting
 *    Operator ==
 */
asnBOOL RvdcVehicleSetting::operator== (const asntype& obj) const
{
  const RvdcVehicleSetting* object = asnDCast(const RvdcVehicleSetting*,&obj);
  if(object == (RvdcVehicleSetting*)0) return asnFALSE;
  if(this->rvdcFunction == asnFALSE)
  {
    if(object->rvdcFunction != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->rvdcFunction == asnFALSE) return asnFALSE;
  }
  if((this->collectOffSetTime == object->collectOffSetTime) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : SoftwarePartInstallationInstruction
 *    Operator ==
 */
asnBOOL SoftwarePartInstallationInstruction::operator== (const asntype& obj) const
{
  const SoftwarePartInstallationInstruction* object = asnDCast(const SoftwarePartInstallationInstruction*,&obj);
  if(object == (SoftwarePartInstallationInstruction*)0) return asnFALSE;
  if((this->partidentifier == object->partidentifier) == asnFALSE)
    return asnFALSE;
  if((this->estimatedInstallationtime == object->estimatedInstallationtime) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : SoftwarePartSummary
 *    Operator ==
 */
asnBOOL SoftwarePartSummary::operator== (const asntype& obj) const
{
  const SoftwarePartSummary* object = asnDCast(const SoftwarePartSummary*,&obj);
  if(object == (SoftwarePartSummary*)0) return asnFALSE;
  if((this->partIdentifier == object->partIdentifier) == asnFALSE)
    return asnFALSE;
  if((this->partRetries == object->partRetries) == asnFALSE)
    return asnFALSE;
  if((this->measuredInstallationTime == object->measuredInstallationTime) == asnFALSE)
    return asnFALSE;
  if((this->softwarePartStatus == object->softwarePartStatus) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : StopCondition
 *    Operator ==
 */
asnBOOL StopCondition::operator== (const asntype& obj) const
{
  const StopCondition* object = asnDCast(const StopCondition*,&obj);
  if(object == (StopCondition*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_period) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_period) != asnFALSE)
    {
      if((this->period == object->period) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_period) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_amount) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_amount) != asnFALSE)
    {
      if((this->amount == object->amount) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_amount) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_StopCondition__time) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_StopCondition__time) != asnFALSE)
    {
      if((this->time == object->time) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_StopCondition__time) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : TelematicsParameters
 *    Operator ==
 */
asnBOOL TelematicsParameters::operator== (const asntype& obj) const
{
  const TelematicsParameters* object = asnDCast(const TelematicsParameters*,&obj);
  if(object == (TelematicsParameters*)0) return asnFALSE;
  if((this->timeToLive == object->timeToLive) == asnFALSE)
    return asnFALSE;
  if((this->uploadPriority == object->uploadPriority) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : Trigger
 *    Operator ==
 */
asnBOOL Trigger::operator== (const asntype& obj) const
{
  const Trigger* object = asnDCast(const Trigger*,&obj);
  if(object == (Trigger*)0) return asnFALSE;
  if((this->trigger == object->trigger) == asnFALSE)
    return asnFALSE;
  if((this->interval == object->interval) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : UDS
 *    Operator ==
 */
asnBOOL UDS::operator== (const asntype& obj) const
{
  const UDS* object = asnDCast(const UDS*,&obj);
  if(object == (UDS*)0) return asnFALSE;
  if((this->a__operator == object->a__operator) == asnFALSE)
    return asnFALSE;
  if((this->delayForNextTriggerCheck == object->delayForNextTriggerCheck) == asnFALSE)
    return asnFALSE;
  if((this->delayAfterCollection == object->delayAfterCollection) == asnFALSE)
    return asnFALSE;
  if((this->diagnosticCommands == object->diagnosticCommands) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : ValidationKey
 *    Operator ==
 */
asnBOOL ValidationKey::operator== (const asntype& obj) const
{
  const ValidationKey* object = asnDCast(const ValidationKey*,&obj);
  if(object == (ValidationKey*)0) return asnFALSE;
  if((this->validationKey == object->validationKey) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_partIdentifiers) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_partIdentifiers) != asnFALSE)
    {
      if((this->partIdentifiers == object->partIdentifiers) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_partIdentifiers) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : DIDData
 *    Operator ==
 */
asnBOOL DIDData::operator== (const asntype& obj) const
{
  const DIDData* object = asnDCast(const DIDData*,&obj);
  if(object == (DIDData*)0) return asnFALSE;
  if((this->id == object->id) == asnFALSE)
    return asnFALSE;
  if((this->data == object->data) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : DTCData
 *    Operator ==
 */
asnBOOL DTCData::operator== (const asntype& obj) const
{
  const DTCData* object = asnDCast(const DTCData*,&obj);
  if(object == (DTCData*)0) return asnFALSE;
  if((this->id == object->id) == asnFALSE)
    return asnFALSE;
  if((this->data == object->data) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : ECUData
 *    Operator ==
 */
asnBOOL ECUData::operator== (const asntype& obj) const
{
  const ECUData* object = asnDCast(const ECUData*,&obj);
  if(object == (ECUData*)0) return asnFALSE;
  if((this->ecu == object->ecu) == asnFALSE)
    return asnFALSE;
  if((this->diagnosticNumber == object->diagnosticNumber) == asnFALSE)
    return asnFALSE;
  if((this->didData == object->didData) == asnFALSE)
    return asnFALSE;
  if((this->dtcData == object->dtcData) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : EcuData__C
 *    Operator ==
 */
asnBOOL asncnoDiagData::operator== (const asntype& obj) const
{
  if(!EcuData__C::operator==(obj))
    return asnFALSE;
  return asnTRUE;
}
/**
 *    TypeAssignment : EcuData__C
 *    Operator ==
 */
asnBOOL asncEcuData__data::operator== (const asntype& obj) const
{
  if(!EcuData__C::operator==(obj))
    return asnFALSE;
  const asncEcuData__data* object = asnDCast(const asncEcuData__data*,&obj);
  if(object == (asncEcuData__data*)0) return asnFALSE;
  return (this->data == object->data);
}
/**
 *    TypeAssignment : EcuData__C
 *    Operator ==
 */
asnBOOL EcuData__C::operator== (const asntype& obj) const
{
  const EcuData__C* object = asnDCast(const EcuData__C*,&obj);
  if(object == (EcuData__C*)0) return asnFALSE;
  if (alternative == object->alternative) return asnTRUE;
  else return asnFALSE;
}
/**
 *    TypeAssignment : EcuData
 *    Operator ==
 */
asnBOOL EcuData::operator== (const asntype& obj) const
{
  const EcuData* object = asnDCast(const EcuData*,&obj);
  if(object == (EcuData*)0) return asnFALSE;
  if((this->value == (EcuData__C*)asnBNULL) || (object->value == (EcuData__C*)asnBNULL))
    return asnFALSE;
  return (*(this->value) == *(object->value));
}

/**
 *    TypeAssignment : NEVCoordinatesLongLat
 *    Operator ==
 */
asnBOOL NEVCoordinatesLongLat::operator== (const asntype& obj) const
{
  const NEVCoordinatesLongLat* object = asnDCast(const NEVCoordinatesLongLat*,&obj);
  if(object == (NEVCoordinatesLongLat*)0) return asnFALSE;
  if((this->longitude == object->longitude) == asnFALSE)
    return asnFALSE;
  if((this->latitude == object->latitude) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : NEVDRPositionData
 *    Operator ==
 */
asnBOOL NEVDRPositionData::operator== (const asntype& obj) const
{
  const NEVDRPositionData* object = asnDCast(const NEVDRPositionData*,&obj);
  if(object == (NEVDRPositionData*)0) return asnFALSE;
  if((this->longLat == (NEVCoordinatesLongLat *) asnBNULL) || (object->longLat == (NEVCoordinatesLongLat *) asnBNULL))
    return asnFALSE;
  if((*(this->longLat) == *object->longLat) == asnFALSE)
    return asnFALSE;
  if((this->heading == object->heading) == asnFALSE)
    return asnFALSE;
  if((this->speedKmph == object->speedKmph) == asnFALSE)
    return asnFALSE;
  if((this->hdopX10 == object->hdopX10) == asnFALSE)
    return asnFALSE;
  if((this->numSat == object->numSat) == asnFALSE)
    return asnFALSE;
  if((this->fixTime == (NEVDateTime *) asnBNULL) || (object->fixTime == (NEVDateTime *) asnBNULL))
    return asnFALSE;
  if((*(this->fixTime) == *object->fixTime) == asnFALSE)
    return asnFALSE;
  if((this->fixType == object->fixType) == asnFALSE)
    return asnFALSE;
  if((this->drType == object->drType) == asnFALSE)
    return asnFALSE;
  if((this->drDistance == object->drDistance) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : NEVDRVehiclePosition__C
 *    Operator ==
 */
asnBOOL asncnoValidData::operator== (const asntype& obj) const
{
  if(!NEVDRVehiclePosition__C::operator==(obj))
    return asnFALSE;
  return asnTRUE;
}
/**
 *    TypeAssignment : NEVDRVehiclePosition__C
 *    Operator ==
 */
asnBOOL asncdrPosition::operator== (const asntype& obj) const
{
  if(!NEVDRVehiclePosition__C::operator==(obj))
    return asnFALSE;
  const asncdrPosition* object = asnDCast(const asncdrPosition*,&obj);
  if(object == (asncdrPosition*)0) return asnFALSE;
  if((this->longLat == (NEVCoordinatesLongLat *) asnBNULL) || (object->longLat == (NEVCoordinatesLongLat *) asnBNULL))
    return asnFALSE;
  if((*(this->longLat) == *object->longLat) == asnFALSE)
    return asnFALSE;
  if((this->heading == object->heading) == asnFALSE)
    return asnFALSE;
  if((this->speedKmph == object->speedKmph) == asnFALSE)
    return asnFALSE;
  if((this->hdopX10 == object->hdopX10) == asnFALSE)
    return asnFALSE;
  if((this->numSat == object->numSat) == asnFALSE)
    return asnFALSE;
  if((this->fixTime == (NEVDateTime *) asnBNULL) || (object->fixTime == (NEVDateTime *) asnBNULL))
    return asnFALSE;
  if((*(this->fixTime) == *object->fixTime) == asnFALSE)
    return asnFALSE;
  if((this->fixType == object->fixType) == asnFALSE)
    return asnFALSE;
  if((this->drType == object->drType) == asnFALSE)
    return asnFALSE;
  if((this->drDistance == object->drDistance) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}
/**
 *    TypeAssignment : NEVDRVehiclePosition__C
 *    Operator ==
 */
asnBOOL NEVDRVehiclePosition__C::operator== (const asntype& obj) const
{
  const NEVDRVehiclePosition__C* object = asnDCast(const NEVDRVehiclePosition__C*,&obj);
  if(object == (NEVDRVehiclePosition__C*)0) return asnFALSE;
  if (alternative == object->alternative) return asnTRUE;
  else return asnFALSE;
}
/**
 *    TypeAssignment : NEVDRVehiclePosition
 *    Operator ==
 */
asnBOOL NEVDRVehiclePosition::operator== (const asntype& obj) const
{
  const NEVDRVehiclePosition* object = asnDCast(const NEVDRVehiclePosition*,&obj);
  if(object == (NEVDRVehiclePosition*)0) return asnFALSE;
  if((this->value == (NEVDRVehiclePosition__C*)asnBNULL) || (object->value == (NEVDRVehiclePosition__C*)asnBNULL))
    return asnFALSE;
  return (*(this->value) == *(object->value));
}

/**
 *    TypeAssignment : NEVDateTime
 *    Operator ==
 */
asnBOOL NEVDateTime::operator== (const asntype& obj) const
{
  const NEVDateTime* object = asnDCast(const NEVDateTime*,&obj);
  if(object == (NEVDateTime*)0) return asnFALSE;
  if((this->year == object->year) == asnFALSE)
    return asnFALSE;
  if((this->month == object->month) == asnFALSE)
    return asnFALSE;
  if((this->day == object->day) == asnFALSE)
    return asnFALSE;
  if((this->hour == object->hour) == asnFALSE)
    return asnFALSE;
  if((this->minute == object->minute) == asnFALSE)
    return asnFALSE;
  if((this->second == object->second) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : NEVServiceData
 *    Operator ==
 */
asnBOOL NEVServiceData::operator== (const asntype& obj) const
{
  const NEVServiceData* object = asnDCast(const NEVServiceData*,&obj);
  if(object == (NEVServiceData*)0) return asnFALSE;
  if((this->vehicleVin == object->vehicleVin) == asnFALSE)
    return asnFALSE;
  if(this->testVehicle == asnFALSE)
  {
    if(object->testVehicle != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->testVehicle == asnFALSE) return asnFALSE;
  }
  if((this->rvdcTriggerCondition == object->rvdcTriggerCondition) == asnFALSE)
    return asnFALSE;
  if((this->mdpID == object->mdpID) == asnFALSE)
    return asnFALSE;
  if((this->maID == object->maID) == asnFALSE)
    return asnFALSE;
  if((this->position == (NEVDRVehiclePosition__C *) asnBNULL) || (object->position == (NEVDRVehiclePosition__C *) asnBNULL))
    return asnFALSE;
  if((*(this->position) == *object->position) == asnFALSE)
    return asnFALSE;
  if((this->ecuData == (EcuData__C *) asnBNULL) || (object->ecuData == (EcuData__C *) asnBNULL))
    return asnFALSE;
  if((*(this->ecuData) == *object->ecuData) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : Configuration
 *    Operator ==
 */
asnBOOL Configuration::operator== (const asntype& obj) const
{
  const Configuration* object = asnDCast(const Configuration*,&obj);
  if(object == (Configuration*)0) return asnFALSE;
  if((this->version == object->version) == asnFALSE)
    return asnFALSE;
  if((this->items == object->items) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : ConfigurationItem
 *    Operator ==
 */
asnBOOL ConfigurationItem::operator== (const asntype& obj) const
{
  const ConfigurationItem* object = asnDCast(const ConfigurationItem*,&obj);
  if(object == (ConfigurationItem*)0) return asnFALSE;
  if((this->name == object->name) == asnFALSE)
    return asnFALSE;
  if((this->parameters == object->parameters) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : ContactInfo
 *    Operator ==
 */
asnBOOL ContactInfo::operator== (const asntype& obj) const
{
  const ContactInfo* object = asnDCast(const ContactInfo*,&obj);
  if(object == (ContactInfo*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_email) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_email) != asnFALSE)
    {
      if((this->email == object->email) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_email) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_address) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_address) != asnFALSE)
    {
      if((this->address == (PostAddress *) asnBNULL) || (object->address == (PostAddress *) asnBNULL))
        return asnFALSE;
      if((*(this->address) == *object->address) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_address) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_phone1) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_phone1) != asnFALSE)
    {
      if((this->phone1 == object->phone1) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_phone1) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_phone2) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_phone2) != asnFALSE)
    {
      if((this->phone2 == object->phone2) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_phone2) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : Error
 *    Operator ==
 */
asnBOOL Error::operator== (const asntype& obj) const
{
  const Error* object = asnDCast(const Error*,&obj);
  if(object == (Error*)0) return asnFALSE;
  if((this->code == object->code) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_vehicleErrorCode) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_vehicleErrorCode) != asnFALSE)
    {
      if((this->vehicleErrorCode == object->vehicleErrorCode) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_vehicleErrorCode) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_Error__message) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_Error__message) != asnFALSE)
    {
      if((this->message == object->message) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_Error__message) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : EventAction
 *    Operator ==
 */
asnBOOL EventAction::operator== (const asntype& obj) const
{
  const EventAction* object = asnDCast(const EventAction*,&obj);
  if(object == (EventAction*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_triggerTimes) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_triggerTimes) != asnFALSE)
    {
      if((this->triggerTimes == object->triggerTimes) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_triggerTimes) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_notifyInterval) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_notifyInterval) != asnFALSE)
    {
      if((this->notifyInterval == object->notifyInterval) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_notifyInterval) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : EventRule
 *    Operator ==
 */
asnBOOL EventRule::operator== (const asntype& obj) const
{
  const EventRule* object = asnDCast(const EventRule*,&obj);
  if(object == (EventRule*)0) return asnFALSE;
  if((this->ruleId == object->ruleId) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_startTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_startTime) != asnFALSE)
    {
      if((this->startTime == (TimeStamp *) asnBNULL) || (object->startTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->startTime) == *object->startTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_startTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_EventRule__endTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_EventRule__endTime) != asnFALSE)
    {
      if((this->endTime == (TimeStamp *) asnBNULL) || (object->endTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->endTime) == *object->endTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_EventRule__endTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_conditions) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_conditions) != asnFALSE)
    {
      if((this->conditions == object->conditions) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_conditions) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_EventRule__interval) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_EventRule__interval) != asnFALSE)
    {
      if((this->interval == object->interval) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_EventRule__interval) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_EventRule__action) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_EventRule__action) != asnFALSE)
    {
      if((this->action == (EventAction *) asnBNULL) || (object->action == (EventAction *) asnBNULL))
        return asnFALSE;
      if((*(this->action) == *object->action) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_EventRule__action) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : GeneralMessage__C
 *    Operator ==
 */
asnBOOL asncGeneralMessage__message::operator== (const asntype& obj) const
{
  if(!GeneralMessage__C::operator==(obj))
    return asnFALSE;
  const asncGeneralMessage__message* object = asnDCast(const asncGeneralMessage__message*,&obj);
  if(object == (asncGeneralMessage__message*)0) return asnFALSE;
  return (this->message == object->message);
}
/**
 *    TypeAssignment : GeneralMessage__C
 *    Operator ==
 */
asnBOOL asncocetMessage::operator== (const asntype& obj) const
{
  if(!GeneralMessage__C::operator==(obj))
    return asnFALSE;
  const asncocetMessage* object = asnDCast(const asncocetMessage*,&obj);
  if(object == (asncocetMessage*)0) return asnFALSE;
  return (ocetMessage == object->ocetMessage);
}
/**
 *    TypeAssignment : GeneralMessage__C
 *    Operator ==
 */
asnBOOL GeneralMessage__C::operator== (const asntype& obj) const
{
  const GeneralMessage__C* object = asnDCast(const GeneralMessage__C*,&obj);
  if(object == (GeneralMessage__C*)0) return asnFALSE;
  if (alternative == object->alternative) return asnTRUE;
  else return asnFALSE;
}
/**
 *    TypeAssignment : GeneralMessage
 *    Operator ==
 */
asnBOOL GeneralMessage::operator== (const asntype& obj) const
{
  const GeneralMessage* object = asnDCast(const GeneralMessage*,&obj);
  if(object == (GeneralMessage*)0) return asnFALSE;
  if((this->value == (GeneralMessage__C*)asnBNULL) || (object->value == (GeneralMessage__C*)asnBNULL))
    return asnFALSE;
  return (*(this->value) == *(object->value));
}

/**
 *    TypeAssignment : Notification
 *    Operator ==
 */
asnBOOL Notification::operator== (const asntype& obj) const
{
  const Notification* object = asnDCast(const Notification*,&obj);
  if(object == (Notification*)0) return asnFALSE;
  if((this->reason == object->reason) == asnFALSE)
    return asnFALSE;
  if((this->time == (TimeStamp *) asnBNULL) || (object->time == (TimeStamp *) asnBNULL))
    return asnFALSE;
  if((*(this->time) == *object->time) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_Notification__code) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_Notification__code) != asnFALSE)
    {
      if((this->code == object->code) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_Notification__code) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_parameters) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_parameters) != asnFALSE)
    {
      if((this->parameters == object->parameters) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_parameters) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : OTA
 *    Operator ==
 */
asnBOOL OTA::operator== (const asntype& obj) const
{
  const OTA* object = asnDCast(const OTA*,&obj);
  if(object == (OTA*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_swModel) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_swModel) != asnFALSE)
    {
      if((this->swModel == object->swModel) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_swModel) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_OTA__swVersion) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_OTA__swVersion) != asnFALSE)
    {
      if((this->swVersion == object->swVersion) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_OTA__swVersion) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->downloadUrl == object->downloadUrl) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_verificationCode) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_verificationCode) != asnFALSE)
    {
      if((this->verificationCode == object->verificationCode) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_verificationCode) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : PointOfInterest
 *    Operator ==
 */
asnBOOL PointOfInterest::operator== (const asntype& obj) const
{
  const PointOfInterest* object = asnDCast(const PointOfInterest*,&obj);
  if(object == (PointOfInterest*)0) return asnFALSE;
  if((this->name == object->name) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_position) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_position) != asnFALSE)
    {
      if((this->position == (Position *) asnBNULL) || (object->position == (Position *) asnBNULL))
        return asnFALSE;
      if((*(this->position) == *object->position) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_position) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_type) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_type) != asnFALSE)
    {
      if((this->type == object->type) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_type) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_contactInfo) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_contactInfo) != asnFALSE)
    {
      if((this->contactInfo == (ContactInfo *) asnBNULL) || (object->contactInfo == (ContactInfo *) asnBNULL))
        return asnFALSE;
      if((*(this->contactInfo) == *object->contactInfo) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_contactInfo) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_url) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_url) != asnFALSE)
    {
      if((this->url == object->url) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_url) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_attributes) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_attributes) != asnFALSE)
    {
      if((this->attributes == object->attributes) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_attributes) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : Position
 *    Operator ==
 */
asnBOOL Position::operator== (const asntype& obj) const
{
  const Position* object = asnDCast(const Position*,&obj);
  if(object == (Position*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_latitude) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_latitude) != asnFALSE)
    {
      if((this->latitude == object->latitude) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_latitude) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_longitude) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_longitude) != asnFALSE)
    {
      if((this->longitude == object->longitude) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_longitude) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_altitude) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_altitude) != asnFALSE)
    {
      if((this->altitude == object->altitude) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_altitude) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_posCanBeTrusted) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_posCanBeTrusted) != asnFALSE)
    {
      if(this->posCanBeTrusted == asnFALSE)
      {
        if(object->posCanBeTrusted != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->posCanBeTrusted == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_posCanBeTrusted) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_carLocatorStatUploadEn) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_carLocatorStatUploadEn) != asnFALSE)
    {
      if(this->carLocatorStatUploadEn == asnFALSE)
      {
        if(object->carLocatorStatUploadEn != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->carLocatorStatUploadEn == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_carLocatorStatUploadEn) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_marsCoordinates) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_marsCoordinates) != asnFALSE)
    {
      if(this->marsCoordinates == asnFALSE)
      {
        if(object->marsCoordinates != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->marsCoordinates == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_marsCoordinates) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : PostAddress
 *    Operator ==
 */
asnBOOL PostAddress::operator== (const asntype& obj) const
{
  const PostAddress* object = asnDCast(const PostAddress*,&obj);
  if(object == (PostAddress*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_street) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_street) != asnFALSE)
    {
      if((this->street == object->street) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_street) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_houseNumber) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_houseNumber) != asnFALSE)
    {
      if((this->houseNumber == object->houseNumber) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_houseNumber) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_city) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_city) != asnFALSE)
    {
      if((this->city == object->city) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_city) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_region) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_region) != asnFALSE)
    {
      if((this->region == object->region) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_region) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_postcode) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_postcode) != asnFALSE)
    {
      if((this->postcode == object->postcode) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_postcode) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_country) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_country) != asnFALSE)
    {
      if((this->country == object->country) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_country) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : RuleCondition
 *    Operator ==
 */
asnBOOL RuleCondition::operator== (const asntype& obj) const
{
  const RuleCondition* object = asnDCast(const RuleCondition*,&obj);
  if(object == (RuleCondition*)0) return asnFALSE;
  if((this->condition == object->condition) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : ServiceData
 *    Operator ==
 */
asnBOOL ServiceData::operator== (const asntype& obj) const
{
  const ServiceData* object = asnDCast(const ServiceData*,&obj);
  if(object == (ServiceData*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_serviceTrigger) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_serviceTrigger) != asnFALSE)
    {
      if((this->serviceTrigger == (ServiceTrigger *) asnBNULL) || (object->serviceTrigger == (ServiceTrigger *) asnBNULL))
        return asnFALSE;
      if((*(this->serviceTrigger) == *object->serviceTrigger) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_serviceTrigger) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceData__serviceParameters) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceData__serviceParameters) != asnFALSE)
    {
      if((this->serviceParameters == object->serviceParameters) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceData__serviceParameters) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_serviceCommand) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_serviceCommand) != asnFALSE)
    {
      if((this->serviceCommand == object->serviceCommand) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_serviceCommand) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_serviceResult) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_serviceResult) != asnFALSE)
    {
      if((this->serviceResult == (ServiceResult *) asnBNULL) || (object->serviceResult == (ServiceResult *) asnBNULL))
        return asnFALSE;
      if((*(this->serviceResult) == *object->serviceResult) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_serviceResult) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_serviceStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_serviceStatus) != asnFALSE)
    {
      if((this->serviceStatus == (ServiceStatus *) asnBNULL) || (object->serviceStatus == (ServiceStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->serviceStatus) == *object->serviceStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_serviceStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceData__message) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceData__message) != asnFALSE)
    {
      if((this->message == (GeneralMessage__C *) asnBNULL) || (object->message == (GeneralMessage__C *) asnBNULL))
        return asnFALSE;
      if((*(this->message) == *object->message) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceData__message) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_pois) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_pois) != asnFALSE)
    {
      if((this->pois == object->pois) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_pois) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_configuration) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_configuration) != asnFALSE)
    {
      if((this->configuration == (Configuration *) asnBNULL) || (object->configuration == (Configuration *) asnBNULL))
        return asnFALSE;
      if((*(this->configuration) == *object->configuration) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_configuration) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_vehicleStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_vehicleStatus) != asnFALSE)
    {
      if((this->vehicleStatus == (VehicleStatus *) asnBNULL) || (object->vehicleStatus == (VehicleStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->vehicleStatus) == *object->vehicleStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_vehicleStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceData__ota) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceData__ota) != asnFALSE)
    {
      if((this->ota == (OTA *) asnBNULL) || (object->ota == (OTA *) asnBNULL))
        return asnFALSE;
      if((*(this->ota) == *object->ota) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceData__ota) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceData__fota) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceData__fota) != asnFALSE)
    {
      if((this->fota == (FOTA *) asnBNULL) || (object->fota == (FOTA *) asnBNULL))
        return asnFALSE;
      if((*(this->fota) == *object->fota) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceData__fota) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_rvdc) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_rvdc) != asnFALSE)
    {
      if((this->rvdc == (RVDC *) asnBNULL) || (object->rvdc == (RVDC *) asnBNULL))
        return asnFALSE;
      if((*(this->rvdc) == *object->rvdc) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_rvdc) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_trip) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_trip) != asnFALSE)
    {
      if((this->trip == (Trip *) asnBNULL) || (object->trip == (Trip *) asnBNULL))
        return asnFALSE;
      if((*(this->trip) == *object->trip) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_trip) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_tripFragments) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_tripFragments) != asnFALSE)
    {
      if((this->tripFragments == object->tripFragments) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_tripFragments) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_trackPoints) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_trackPoints) != asnFALSE)
    {
      if((this->trackPoints == object->trackPoints) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_trackPoints) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_nevServiceData) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_nevServiceData) != asnFALSE)
    {
      if((this->nevServiceData == (NEVServiceData *) asnBNULL) || (object->nevServiceData == (NEVServiceData *) asnBNULL))
        return asnFALSE;
      if((*(this->nevServiceData) == *object->nevServiceData) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_nevServiceData) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_eventRule) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_eventRule) != asnFALSE)
    {
      if((this->eventRule == (EventRule *) asnBNULL) || (object->eventRule == (EventRule *) asnBNULL))
        return asnFALSE;
      if((*(this->eventRule) == *object->eventRule) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_eventRule) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_timerData) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_timerData) != asnFALSE)
    {
      if((this->timerData == (TimerData *) asnBNULL) || (object->timerData == (TimerData *) asnBNULL))
        return asnFALSE;
      if((*(this->timerData) == *object->timerData) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_timerData) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : ServiceParameter
 *    Operator ==
 */
asnBOOL ServiceParameter::operator== (const asntype& obj) const
{
  const ServiceParameter* object = asnDCast(const ServiceParameter*,&obj);
  if(object == (ServiceParameter*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_intVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      if((this->intVal == object->intVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_intVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceParameter__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : ServiceResult
 *    Operator ==
 */
asnBOOL ServiceResult::operator== (const asntype& obj) const
{
  const ServiceResult* object = asnDCast(const ServiceResult*,&obj);
  if(object == (ServiceResult*)0) return asnFALSE;
  if(this->operationSucceeded == asnFALSE)
  {
    if(object->operationSucceeded != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->operationSucceeded == asnFALSE) return asnFALSE;
  }
  if(asnGetPresence(object->optionalField,asn_error) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_error) != asnFALSE)
    {
      if((this->error == (Error *) asnBNULL) || (object->error == (Error *) asnBNULL))
        return asnFALSE;
      if((*(this->error) == *object->error) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_error) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : ServiceStatus
 *    Operator ==
 */
asnBOOL ServiceStatus::operator== (const asntype& obj) const
{
  const ServiceStatus* object = asnDCast(const ServiceStatus*,&obj);
  if(object == (ServiceStatus*)0) return asnFALSE;
  if(this->remoteControlInhibited == asnFALSE)
  {
    if(object->remoteControlInhibited != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->remoteControlInhibited == asnFALSE) return asnFALSE;
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : ServiceTrigger
 *    Operator ==
 */
asnBOOL ServiceTrigger::operator== (const asntype& obj) const
{
  const ServiceTrigger* object = asnDCast(const ServiceTrigger*,&obj);
  if(object == (ServiceTrigger*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_scheduledTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_scheduledTime) != asnFALSE)
    {
      if((this->scheduledTime == (TimeStamp *) asnBNULL) || (object->scheduledTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->scheduledTime) == *object->scheduledTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_scheduledTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_recurrentOperation) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_recurrentOperation) != asnFALSE)
    {
      if(this->recurrentOperation == asnFALSE)
      {
        if(object->recurrentOperation != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->recurrentOperation == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_recurrentOperation) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceTrigger__duration) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceTrigger__duration) != asnFALSE)
    {
      if((this->duration == object->duration) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceTrigger__duration) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceTrigger__interval) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceTrigger__interval) != asnFALSE)
    {
      if((this->interval == object->interval) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceTrigger__interval) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_occurs) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_occurs) != asnFALSE)
    {
      if((this->occurs == object->occurs) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_occurs) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceTrigger__endTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceTrigger__endTime) != asnFALSE)
    {
      if((this->endTime == (TimeStamp *) asnBNULL) || (object->endTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->endTime) == *object->endTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceTrigger__endTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ServiceTrigger__startTimeofDay) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ServiceTrigger__startTimeofDay) != asnFALSE)
    {
      if((this->startTimeofDay == object->startTimeofDay) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ServiceTrigger__startTimeofDay) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : TimerData
 *    Operator ==
 */
asnBOOL TimerData::operator== (const asntype& obj) const
{
  const TimerData* object = asnDCast(const TimerData*,&obj);
  if(object == (TimerData*)0) return asnFALSE;
  if((this->timerId == object->timerId) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_timers) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_timers) != asnFALSE)
    {
      if((this->timers == object->timers) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_timers) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : TimerInfo
 *    Operator ==
 */
asnBOOL TimerInfo::operator== (const asntype& obj) const
{
  const TimerInfo* object = asnDCast(const TimerInfo*,&obj);
  if(object == (TimerInfo*)0) return asnFALSE;
  if((this->timerActivation == object->timerActivation) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_TimerInfo__duration) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TimerInfo__duration) != asnFALSE)
    {
      if((this->duration == object->duration) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TimerInfo__duration) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_dayofWeek) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_dayofWeek) != asnFALSE)
    {
      if((this->dayofWeek == object->dayofWeek) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_dayofWeek) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TimerInfo__startTimeofDay) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TimerInfo__startTimeofDay) != asnFALSE)
    {
      if((this->startTimeofDay == object->startTimeofDay) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TimerInfo__startTimeofDay) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_endtimeofDay) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_endtimeofDay) != asnFALSE)
    {
      if((this->endtimeofDay == object->endtimeofDay) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_endtimeofDay) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : TrackPoint
 *    Operator ==
 */
asnBOOL TrackPoint::operator== (const asntype& obj) const
{
  const TrackPoint* object = asnDCast(const TrackPoint*,&obj);
  if(object == (TrackPoint*)0) return asnFALSE;
  if((this->systemTime == (TimeStamp *) asnBNULL) || (object->systemTime == (TimeStamp *) asnBNULL))
    return asnFALSE;
  if((*(this->systemTime) == *object->systemTime) == asnFALSE)
    return asnFALSE;
  if((this->position == (Position *) asnBNULL) || (object->position == (Position *) asnBNULL))
    return asnFALSE;
  if((*(this->position) == *object->position) == asnFALSE)
    return asnFALSE;
  if((this->speed == object->speed) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_TrackPoint__direction) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TrackPoint__direction) != asnFALSE)
    {
      if((this->direction == object->direction) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TrackPoint__direction) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_isSVT) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_isSVT) != asnFALSE)
    {
      if(this->isSVT == asnFALSE)
      {
        if(object->isSVT != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->isSVT == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_isSVT) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TrackPoint__odometer) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TrackPoint__odometer) != asnFALSE)
    {
      if((this->odometer == object->odometer) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TrackPoint__odometer) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_travelDistanceSinceLastWaypoint) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_travelDistanceSinceLastWaypoint) != asnFALSE)
    {
      if((this->travelDistanceSinceLastWaypoint == object->travelDistanceSinceLastWaypoint) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_travelDistanceSinceLastWaypoint) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fuelConsumptionSinceLastWaypoint) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fuelConsumptionSinceLastWaypoint) != asnFALSE)
    {
      if((this->fuelConsumptionSinceLastWaypoint == object->fuelConsumptionSinceLastWaypoint) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fuelConsumptionSinceLastWaypoint) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_electricConsumptionSinceLastSample) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_electricConsumptionSinceLastSample) != asnFALSE)
    {
      if((this->electricConsumptionSinceLastSample == object->electricConsumptionSinceLastSample) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_electricConsumptionSinceLastSample) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_electricRegenerationSinceLastSample) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_electricRegenerationSinceLastSample) != asnFALSE)
    {
      if((this->electricRegenerationSinceLastSample == object->electricRegenerationSinceLastSample) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_electricRegenerationSinceLastSample) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : Trip
 *    Operator ==
 */
asnBOOL Trip::operator== (const asntype& obj) const
{
  const Trip* object = asnDCast(const Trip*,&obj);
  if(object == (Trip*)0) return asnFALSE;
  if((this->tripId == object->tripId) == asnFALSE)
    return asnFALSE;
  if((this->startTime == (TimeStamp *) asnBNULL) || (object->startTime == (TimeStamp *) asnBNULL))
    return asnFALSE;
  if((*(this->startTime) == *object->startTime) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_Trip__startOdometer) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_Trip__startOdometer) != asnFALSE)
    {
      if((this->startOdometer == object->startOdometer) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_Trip__startOdometer) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fuelConsumption) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fuelConsumption) != asnFALSE)
    {
      if((this->fuelConsumption == object->fuelConsumption) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fuelConsumption) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->traveledDistance == object->traveledDistance) == asnFALSE)
    return asnFALSE;
  if((this->trackpoints == object->trackpoints) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_waypoints) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_waypoints) != asnFALSE)
    {
      if((this->waypoints == object->waypoints) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_waypoints) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->avgSpeed == object->avgSpeed) == asnFALSE)
    return asnFALSE;
  if((this->endTime == (TimeStamp *) asnBNULL) || (object->endTime == (TimeStamp *) asnBNULL))
    return asnFALSE;
  if((*(this->endTime) == *object->endTime) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_Trip__endOdometer) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_Trip__endOdometer) != asnFALSE)
    {
      if((this->endOdometer == object->endOdometer) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_Trip__endOdometer) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_electricConsumption) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_electricConsumption) != asnFALSE)
    {
      if((this->electricConsumption == object->electricConsumption) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_electricConsumption) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_electricRegeneration) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_electricRegeneration) != asnFALSE)
    {
      if((this->electricRegeneration == object->electricRegeneration) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_electricRegeneration) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : TripFragment
 *    Operator ==
 */
asnBOOL TripFragment::operator== (const asntype& obj) const
{
  const TripFragment* object = asnDCast(const TripFragment*,&obj);
  if(object == (TripFragment*)0) return asnFALSE;
  if((this->startTime == (TimeStamp *) asnBNULL) || (object->startTime == (TimeStamp *) asnBNULL))
    return asnFALSE;
  if((*(this->startTime) == *object->startTime) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_startPosition) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_startPosition) != asnFALSE)
    {
      if((this->startPosition == (Position *) asnBNULL) || (object->startPosition == (Position *) asnBNULL))
        return asnFALSE;
      if((*(this->startPosition) == *object->startPosition) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_startPosition) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TripFragment__startOdometer) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TripFragment__startOdometer) != asnFALSE)
    {
      if((this->startOdometer == object->startOdometer) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TripFragment__startOdometer) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_startFuelLevel) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_startFuelLevel) != asnFALSE)
    {
      if((this->startFuelLevel == object->startFuelLevel) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_startFuelLevel) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_startElectricConsumption) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_startElectricConsumption) != asnFALSE)
    {
      if((this->startElectricConsumption == object->startElectricConsumption) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_startElectricConsumption) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_startElectricRegeneration) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_startElectricRegeneration) != asnFALSE)
    {
      if((this->startElectricRegeneration == object->startElectricRegeneration) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_startElectricRegeneration) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TripFragment__endTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TripFragment__endTime) != asnFALSE)
    {
      if((this->endTime == (TimeStamp *) asnBNULL) || (object->endTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->endTime) == *object->endTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TripFragment__endTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_endPosition) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_endPosition) != asnFALSE)
    {
      if((this->endPosition == (Position *) asnBNULL) || (object->endPosition == (Position *) asnBNULL))
        return asnFALSE;
      if((*(this->endPosition) == *object->endPosition) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_endPosition) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TripFragment__endOdometer) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TripFragment__endOdometer) != asnFALSE)
    {
      if((this->endOdometer == object->endOdometer) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TripFragment__endOdometer) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_endFuelLevel) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_endFuelLevel) != asnFALSE)
    {
      if((this->endFuelLevel == object->endFuelLevel) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_endFuelLevel) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_endElectricConsumption) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_endElectricConsumption) != asnFALSE)
    {
      if((this->endElectricConsumption == object->endElectricConsumption) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_endElectricConsumption) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_endElectricRegeneration) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_endElectricRegeneration) != asnFALSE)
    {
      if((this->endElectricRegeneration == object->endElectricRegeneration) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_endElectricRegeneration) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : AdditionalStatus
 *    Operator ==
 */
asnBOOL AdditionalStatus::operator== (const asntype& obj) const
{
  const AdditionalStatus* object = asnDCast(const AdditionalStatus*,&obj);
  if(object == (AdditionalStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_confAndId) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_confAndId) != asnFALSE)
    {
      if((this->confAndId == (ConfigurationAndIdentity *) asnBNULL) || (object->confAndId == (ConfigurationAndIdentity *) asnBNULL))
        return asnFALSE;
      if((*(this->confAndId) == *object->confAndId) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_confAndId) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ecuWarningMessages) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ecuWarningMessages) != asnFALSE)
    {
      if((this->ecuWarningMessages == object->ecuWarningMessages) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ecuWarningMessages) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_towStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_towStatus) != asnFALSE)
    {
      if((this->towStatus == (TowStatus *) asnBNULL) || (object->towStatus == (TowStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->towStatus) == *object->towStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_towStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_AdditionalStatus__signals) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_AdditionalStatus__signals) != asnFALSE)
    {
      if((this->signals == object->signals) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_AdditionalStatus__signals) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_AdditionalStatus__data) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_AdditionalStatus__data) != asnFALSE)
    {
      if((this->data == object->data) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_AdditionalStatus__data) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : BasicVehicleStatus
 *    Operator ==
 */
asnBOOL BasicVehicleStatus::operator== (const asntype& obj) const
{
  const BasicVehicleStatus* object = asnDCast(const BasicVehicleStatus*,&obj);
  if(object == (BasicVehicleStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_BasicVehicleStatus__vin) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_BasicVehicleStatus__vin) != asnFALSE)
    {
      if((this->vin == object->vin) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_BasicVehicleStatus__vin) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->position == (Position *) asnBNULL) || (object->position == (Position *) asnBNULL))
    return asnFALSE;
  if((*(this->position) == *object->position) == asnFALSE)
    return asnFALSE;
  if((this->speed == object->speed) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_speedUnit) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_speedUnit) != asnFALSE)
    {
      if((this->speedUnit == object->speedUnit) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_speedUnit) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_BasicVehicleStatus__speedValidity) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_BasicVehicleStatus__speedValidity) != asnFALSE)
    {
      if((this->speedValidity == object->speedValidity) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_BasicVehicleStatus__speedValidity) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_BasicVehicleStatus__direction) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_BasicVehicleStatus__direction) != asnFALSE)
    {
      if((this->direction == object->direction) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_BasicVehicleStatus__direction) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_engineStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_engineStatus) != asnFALSE)
    {
      if((this->engineStatus == object->engineStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_engineStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_keyStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_keyStatus) != asnFALSE)
    {
      if((this->keyStatus == object->keyStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_keyStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_usageMode) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_usageMode) != asnFALSE)
    {
      if((this->usageMode == object->usageMode) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_usageMode) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : BatteryStatus
 *    Operator ==
 */
asnBOOL BatteryStatus::operator== (const asntype& obj) const
{
  const BatteryStatus* object = asnDCast(const BatteryStatus*,&obj);
  if(object == (BatteryStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_BatteryStatus__stateOfCharge) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_BatteryStatus__stateOfCharge) != asnFALSE)
    {
      if((this->stateOfCharge == object->stateOfCharge) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_BatteryStatus__stateOfCharge) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_BatteryStatus__chargeLevel) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_BatteryStatus__chargeLevel) != asnFALSE)
    {
      if((this->chargeLevel == object->chargeLevel) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_BatteryStatus__chargeLevel) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_stateOfHealth) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_stateOfHealth) != asnFALSE)
    {
      if((this->stateOfHealth == object->stateOfHealth) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_stateOfHealth) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_voltage) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_voltage) != asnFALSE)
    {
      if((this->voltage == object->voltage) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_voltage) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : CarConfig
 *    Operator ==
 */
asnBOOL CarConfig::operator== (const asntype& obj) const
{
  const CarConfig* object = asnDCast(const CarConfig*,&obj);
  if(object == (CarConfig*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_heatedFrontSeats) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_heatedFrontSeats) != asnFALSE)
    {
      if((this->heatedFrontSeats == object->heatedFrontSeats) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_heatedFrontSeats) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_parkingClimateLevel) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_parkingClimateLevel) != asnFALSE)
    {
      if((this->parkingClimateLevel == object->parkingClimateLevel) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_parkingClimateLevel) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_heatedSteeringWheel) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_heatedSteeringWheel) != asnFALSE)
    {
      if((this->heatedSteeringWheel == object->heatedSteeringWheel) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_heatedSteeringWheel) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_CarConfig__items) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_CarConfig__items) != asnFALSE)
    {
      if((this->items == object->items) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_CarConfig__items) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : ClimateStatus
 *    Operator ==
 */
asnBOOL ClimateStatus::operator== (const asntype& obj) const
{
  const ClimateStatus* object = asnDCast(const ClimateStatus*,&obj);
  if(object == (ClimateStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_interiorTemp) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_interiorTemp) != asnFALSE)
    {
      if((this->interiorTemp == object->interiorTemp) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_interiorTemp) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_exteriorTemp) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_exteriorTemp) != asnFALSE)
    {
      if((this->exteriorTemp == object->exteriorTemp) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_exteriorTemp) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_preClimateActive) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_preClimateActive) != asnFALSE)
    {
      if(this->preClimateActive == asnFALSE)
      {
        if(object->preClimateActive != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->preClimateActive == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_preClimateActive) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_airCleanSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_airCleanSts) != asnFALSE)
    {
      if((this->airCleanSts == object->airCleanSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_airCleanSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_drvHeatSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_drvHeatSts) != asnFALSE)
    {
      if((this->drvHeatSts == object->drvHeatSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_drvHeatSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_passHeatingSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_passHeatingSts) != asnFALSE)
    {
      if((this->passHeatingSts == object->passHeatingSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_passHeatingSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_rlHeatingSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_rlHeatingSts) != asnFALSE)
    {
      if((this->rlHeatingSts == object->rlHeatingSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_rlHeatingSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_rrHeatingSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_rrHeatingSts) != asnFALSE)
    {
      if((this->rrHeatingSts == object->rrHeatingSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_rrHeatingSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_drvVentSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_drvVentSts) != asnFALSE)
    {
      if((this->drvVentSts == object->drvVentSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_drvVentSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_passVentSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_passVentSts) != asnFALSE)
    {
      if((this->passVentSts == object->passVentSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_passVentSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_rrVentSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_rrVentSts) != asnFALSE)
    {
      if((this->rrVentSts == object->rrVentSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_rrVentSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_rlVentSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_rlVentSts) != asnFALSE)
    {
      if((this->rlVentSts == object->rlVentSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_rlVentSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_interCO2Warning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_interCO2Warning) != asnFALSE)
    {
      if((this->interCO2Warning == object->interCO2Warning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_interCO2Warning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fragStrs) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fragStrs) != asnFALSE)
    {
      if((this->fragStrs == (FragStrs *) asnBNULL) || (object->fragStrs == (FragStrs *) asnBNULL))
        return asnFALSE;
      if((*(this->fragStrs) == *object->fragStrs) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fragStrs) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : ConfigurationAndIdentity
 *    Operator ==
 */
asnBOOL ConfigurationAndIdentity::operator== (const asntype& obj) const
{
  const ConfigurationAndIdentity* object = asnDCast(const ConfigurationAndIdentity*,&obj);
  if(object == (ConfigurationAndIdentity*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_ConfigurationAndIdentity__vin) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ConfigurationAndIdentity__vin) != asnFALSE)
    {
      if((this->vin == object->vin) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ConfigurationAndIdentity__vin) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fuelType) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fuelType) != asnFALSE)
    {
      if((this->fuelType == object->fuelType) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fuelType) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : ConnectivityInfo
 *    Operator ==
 */
asnBOOL ConnectivityInfo::operator== (const asntype& obj) const
{
  const ConnectivityInfo* object = asnDCast(const ConnectivityInfo*,&obj);
  if(object == (ConnectivityInfo*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_connectTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_connectTime) != asnFALSE)
    {
      if((this->connectTime == (TimeStamp *) asnBNULL) || (object->connectTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->connectTime) == *object->connectTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_connectTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_connectPosition) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_connectPosition) != asnFALSE)
    {
      if((this->connectPosition == (Position *) asnBNULL) || (object->connectPosition == (Position *) asnBNULL))
        return asnFALSE;
      if((*(this->connectPosition) == *object->connectPosition) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_connectPosition) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_connectType) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_connectType) != asnFALSE)
    {
      if((this->connectType == object->connectType) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_connectType) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_numRetriesConnect) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_numRetriesConnect) != asnFALSE)
    {
      if((this->numRetriesConnect == object->numRetriesConnect) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_numRetriesConnect) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_retryReason) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_retryReason) != asnFALSE)
    {
      if((this->retryReason == object->retryReason) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_retryReason) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : ConnectivityStatus
 *    Operator ==
 */
asnBOOL ConnectivityStatus::operator== (const asntype& obj) const
{
  const ConnectivityStatus* object = asnDCast(const ConnectivityStatus*,&obj);
  if(object == (ConnectivityStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_wakeupTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_wakeupTime) != asnFALSE)
    {
      if((this->wakeupTime == (TimeStamp *) asnBNULL) || (object->wakeupTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->wakeupTime) == *object->wakeupTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_wakeupTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_wPosition) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_wPosition) != asnFALSE)
    {
      if((this->wPosition == (Position *) asnBNULL) || (object->wPosition == (Position *) asnBNULL))
        return asnFALSE;
      if((*(this->wPosition) == *object->wPosition) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_wPosition) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_connectEstablishedList) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_connectEstablishedList) != asnFALSE)
    {
      if((this->connectEstablishedList == object->connectEstablishedList) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_connectEstablishedList) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_lostConnectionsList) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_lostConnectionsList) != asnFALSE)
    {
      if((this->lostConnectionsList == object->lostConnectionsList) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_lostConnectionsList) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_sleeptime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_sleeptime) != asnFALSE)
    {
      if((this->sleeptime == (TimeStamp *) asnBNULL) || (object->sleeptime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->sleeptime) == *object->sleeptime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_sleeptime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_sPosition) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_sPosition) != asnFALSE)
    {
      if((this->sPosition == (Position *) asnBNULL) || (object->sPosition == (Position *) asnBNULL))
        return asnFALSE;
      if((*(this->sPosition) == *object->sPosition) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_sPosition) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : DiagnosticTroubleCode
 *    Operator ==
 */
asnBOOL DiagnosticTroubleCode::operator== (const asntype& obj) const
{
  const DiagnosticTroubleCode* object = asnDCast(const DiagnosticTroubleCode*,&obj);
  if(object == (DiagnosticTroubleCode*)0) return asnFALSE;
  if((this->dtc == object->dtc) == asnFALSE)
    return asnFALSE;
  if((this->status == object->status) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_failureCount) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_failureCount) != asnFALSE)
    {
      if((this->failureCount == object->failureCount) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_failureCount) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_lastFail) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_lastFail) != asnFALSE)
    {
      if((this->lastFail == (TimeStamp *) asnBNULL) || (object->lastFail == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->lastFail) == *object->lastFail) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_lastFail) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_firtFail) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_firtFail) != asnFALSE)
    {
      if((this->firtFail == (TimeStamp *) asnBNULL) || (object->firtFail == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->firtFail) == *object->firtFail) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_firtFail) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_firstFailureOdometer) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_firstFailureOdometer) != asnFALSE)
    {
      if((this->firstFailureOdometer == object->firstFailureOdometer) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_firstFailureOdometer) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_firstFailureBatteryVoltage) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_firstFailureBatteryVoltage) != asnFALSE)
    {
      if((this->firstFailureBatteryVoltage == object->firstFailureBatteryVoltage) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_firstFailureBatteryVoltage) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_firstFailureVehicleSpeed) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_firstFailureVehicleSpeed) != asnFALSE)
    {
      if((this->firstFailureVehicleSpeed == object->firstFailureVehicleSpeed) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_firstFailureVehicleSpeed) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : ECUDiagnostic
 *    Operator ==
 */
asnBOOL ECUDiagnostic::operator== (const asntype& obj) const
{
  const ECUDiagnostic* object = asnDCast(const ECUDiagnostic*,&obj);
  if(object == (ECUDiagnostic*)0) return asnFALSE;
  if((this->ecuID == object->ecuID) == asnFALSE)
    return asnFALSE;
  if((this->diagnosticResult == object->diagnosticResult) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_dtcs) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_dtcs) != asnFALSE)
    {
      if((this->dtcs == object->dtcs) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_dtcs) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_exceptionCode) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_exceptionCode) != asnFALSE)
    {
      if((this->exceptionCode == object->exceptionCode) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_exceptionCode) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : asncECUDiagnosticss
 *    Operator ==
 */
asnBOOL asncECUDiagnosticss::operator== (const asntype& obj) const
{
  const asncECUDiagnosticss* object = asnDCast(const asncECUDiagnosticss*,&obj);
  if(object == (asncECUDiagnosticss*)0) return asnFALSE;
  if((this->ecuID == object->ecuID) == asnFALSE)
    return asnFALSE;
  if((this->diagnosticResult == object->diagnosticResult) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_dtcs) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_dtcs) != asnFALSE)
    {
      if((this->dtcs == object->dtcs) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_dtcs) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_exceptionCode) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_exceptionCode) != asnFALSE)
    {
      if((this->exceptionCode == object->exceptionCode) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_exceptionCode) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}
/**
 *    TypeAssignment : ECUDiagnostics
 *    Operator ==
 */
asnBOOL ECUDiagnostics::operator== (const asntype& obj) const
{
  const ECUDiagnostics* object = asnDCast(const ECUDiagnostics*,&obj);
  if(object == (ECUDiagnostics*)0) return asnFALSE;
  return (this->value == object->value);
}

/**
 *    TypeAssignment : asncEcuWarningMessagess
 *    Operator ==
 */
asnBOOL asncEcuWarningMessagess::operator== (const asntype& obj) const
{
  const asncEcuWarningMessagess* object = asnDCast(const asncEcuWarningMessagess*,&obj);
  if(object == (asncEcuWarningMessagess*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_collectTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_collectTime) != asnFALSE)
    {
      if((this->collectTime == (TimeStamp *) asnBNULL) || (object->collectTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->collectTime) == *object->collectTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_collectTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_value) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_value) != asnFALSE)
    {
      if((this->value == object->value) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_value) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}
/**
 *    TypeAssignment : EcuWarningMessages
 *    Operator ==
 */
asnBOOL EcuWarningMessages::operator== (const asntype& obj) const
{
  const EcuWarningMessages* object = asnDCast(const EcuWarningMessages*,&obj);
  if(object == (EcuWarningMessages*)0) return asnFALSE;
  return (this->value == object->value);
}

/**
 *    TypeAssignment : ElectricStatus
 *    Operator ==
 */
asnBOOL ElectricStatus::operator== (const asntype& obj) const
{
  const ElectricStatus* object = asnDCast(const ElectricStatus*,&obj);
  if(object == (ElectricStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_isCharging) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_isCharging) != asnFALSE)
    {
      if(this->isCharging == asnFALSE)
      {
        if(object->isCharging != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->isCharging == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_isCharging) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_isPluggedIn) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_isPluggedIn) != asnFALSE)
    {
      if(this->isPluggedIn == asnFALSE)
      {
        if(object->isPluggedIn != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->isPluggedIn == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_isPluggedIn) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ElectricStatus__stateOfCharge) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ElectricStatus__stateOfCharge) != asnFALSE)
    {
      if((this->stateOfCharge == object->stateOfCharge) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ElectricStatus__stateOfCharge) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ElectricStatus__chargeLevel) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ElectricStatus__chargeLevel) != asnFALSE)
    {
      if((this->chargeLevel == object->chargeLevel) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ElectricStatus__chargeLevel) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_timeToFullyCharged) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_timeToFullyCharged) != asnFALSE)
    {
      if((this->timeToFullyCharged == object->timeToFullyCharged) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_timeToFullyCharged) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_statusOfChargerConnection) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_statusOfChargerConnection) != asnFALSE)
    {
      if((this->statusOfChargerConnection == object->statusOfChargerConnection) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_statusOfChargerConnection) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_chargerState) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_chargerState) != asnFALSE)
    {
      if((this->chargerState == object->chargerState) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_chargerState) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_distanceToEmptyOnBatteryOnly) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_distanceToEmptyOnBatteryOnly) != asnFALSE)
    {
      if((this->distanceToEmptyOnBatteryOnly == object->distanceToEmptyOnBatteryOnly) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_distanceToEmptyOnBatteryOnly) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ems48VSOC) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ems48VSOC) != asnFALSE)
    {
      if((this->ems48VSOC == object->ems48VSOC) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ems48VSOC) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ems48VDisSOC) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ems48VDisSOC) != asnFALSE)
    {
      if((this->ems48VDisSOC == object->ems48VDisSOC) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ems48VDisSOC) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_emsHVRBSError) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_emsHVRBSError) != asnFALSE)
    {
      if((this->emsHVRBSError == object->emsHVRBSError) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_emsHVRBSError) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_emsHVDC) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_emsHVDC) != asnFALSE)
    {
      if((this->emsHVDC == object->emsHVDC) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_emsHVDC) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_emsRBSModeDisplay) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_emsRBSModeDisplay) != asnFALSE)
    {
      if((this->emsRBSModeDisplay == object->emsRBSModeDisplay) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_emsRBSModeDisplay) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_emsOVPActive) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_emsOVPActive) != asnFALSE)
    {
      if((this->emsOVPActive == object->emsOVPActive) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_emsOVPActive) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ems48vPackTemp1) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ems48vPackTemp1) != asnFALSE)
    {
      if((this->ems48vPackTemp1 == object->ems48vPackTemp1) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ems48vPackTemp1) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ems48vPackTemp2) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ems48vPackTemp2) != asnFALSE)
    {
      if((this->ems48vPackTemp2 == object->ems48vPackTemp2) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ems48vPackTemp2) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_emsBMSLBuildSwVersion) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_emsBMSLBuildSwVersion) != asnFALSE)
    {
      if((this->emsBMSLBuildSwVersion == object->emsBMSLBuildSwVersion) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_emsBMSLBuildSwVersion) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->emsCBRemainingLife == object->emsCBRemainingLife) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_chargeHvSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_chargeHvSts) != asnFALSE)
    {
      if((this->chargeHvSts == object->chargeHvSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_chargeHvSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ptReady) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ptReady) != asnFALSE)
    {
      if((this->ptReady == object->ptReady) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ptReady) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_averPowerConsumption) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_averPowerConsumption) != asnFALSE)
    {
      if((this->averPowerConsumption == object->averPowerConsumption) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_averPowerConsumption) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_indPowerConsumption) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_indPowerConsumption) != asnFALSE)
    {
      if((this->indPowerConsumption == object->indPowerConsumption) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_indPowerConsumption) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_dcDcActvd) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_dcDcActvd) != asnFALSE)
    {
      if((this->dcDcActvd == object->dcDcActvd) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_dcDcActvd) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_dcDcConnectStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_dcDcConnectStatus) != asnFALSE)
    {
      if((this->dcDcConnectStatus == object->dcDcConnectStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_dcDcConnectStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_wptObjt) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_wptObjt) != asnFALSE)
    {
      if((this->wptObjt == object->wptObjt) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_wptObjt) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_wptFineAlignt) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_wptFineAlignt) != asnFALSE)
    {
      if((this->wptFineAlignt == object->wptFineAlignt) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_wptFineAlignt) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_wptActived) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_wptActived) != asnFALSE)
    {
      if((this->wptActived == object->wptActived) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_wptActived) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_chargeIAct) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_chargeIAct) != asnFALSE)
    {
      if((this->chargeIAct == object->chargeIAct) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_chargeIAct) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_chargeUAct) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_chargeUAct) != asnFALSE)
    {
      if((this->chargeUAct == object->chargeUAct) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_chargeUAct) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_chargeSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_chargeSts) != asnFALSE)
    {
      if((this->chargeSts == object->chargeSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_chargeSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_disChargeConnectStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_disChargeConnectStatus) != asnFALSE)
    {
      if((this->disChargeConnectStatus == object->disChargeConnectStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_disChargeConnectStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_disChargeIAct) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_disChargeIAct) != asnFALSE)
    {
      if((this->disChargeIAct == object->disChargeIAct) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_disChargeIAct) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_disChargeUAct) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_disChargeUAct) != asnFALSE)
    {
      if((this->disChargeUAct == object->disChargeUAct) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_disChargeUAct) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_disChargeSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_disChargeSts) != asnFALSE)
    {
      if((this->disChargeSts == object->disChargeSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_disChargeSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : FragItem
 *    Operator ==
 */
asnBOOL FragItem::operator== (const asntype& obj) const
{
  const FragItem* object = asnDCast(const FragItem*,&obj);
  if(object == (FragItem*)0) return asnFALSE;
  if((this->id == object->id) == asnFALSE)
    return asnFALSE;
  if((this->activated == object->activated) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_level) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_level) != asnFALSE)
    {
      if((this->level == object->level) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_level) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FragItem__code) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FragItem__code) != asnFALSE)
    {
      if((this->code == object->code) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FragItem__code) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : FragStrs
 *    Operator ==
 */
asnBOOL FragStrs::operator== (const asntype& obj) const
{
  const FragStrs* object = asnDCast(const FragStrs*,&obj);
  if(object == (FragStrs*)0) return asnFALSE;
  if((this->activated == object->activated) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_number) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_number) != asnFALSE)
    {
      if((this->number == object->number) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_number) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_FragStrs__items) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_FragStrs__items) != asnFALSE)
    {
      if((this->items == object->items) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_FragStrs__items) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : GenericVehicleSignal
 *    Operator ==
 */
asnBOOL GenericVehicleSignal::operator== (const asntype& obj) const
{
  const GenericVehicleSignal* object = asnDCast(const GenericVehicleSignal*,&obj);
  if(object == (GenericVehicleSignal*)0) return asnFALSE;
  if((this->key == object->key) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_collectTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_collectTime) != asnFALSE)
    {
      if((this->collectTime == (TimeStamp *) asnBNULL) || (object->collectTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->collectTime) == *object->collectTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_collectTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_value) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_value) != asnFALSE)
    {
      if((this->value == object->value) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_value) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__stringVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__stringVal) != asnFALSE)
    {
      if((this->stringVal == object->stringVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__stringVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__boolVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__boolVal) != asnFALSE)
    {
      if(this->boolVal == asnFALSE)
      {
        if(object->boolVal != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->boolVal == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__boolVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__timestampVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__timestampVal) != asnFALSE)
    {
      if((this->timestampVal == (TimeStamp *) asnBNULL) || (object->timestampVal == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->timestampVal) == *object->timestampVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__timestampVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_GenericVehicleSignal__dataVal) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__dataVal) != asnFALSE)
    {
      if((this->dataVal == object->dataVal) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_GenericVehicleSignal__dataVal) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : LockStatus
 *    Operator ==
 */
asnBOOL LockStatus::operator== (const asntype& obj) const
{
  const LockStatus* object = asnDCast(const LockStatus*,&obj);
  if(object == (LockStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_winStatusDriver) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winStatusDriver) != asnFALSE)
    {
      if((this->winStatusDriver == object->winStatusDriver) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winStatusDriver) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_winStatusPassenger) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winStatusPassenger) != asnFALSE)
    {
      if((this->winStatusPassenger == object->winStatusPassenger) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winStatusPassenger) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_winStatusDriverRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winStatusDriverRear) != asnFALSE)
    {
      if((this->winStatusDriverRear == object->winStatusDriverRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winStatusDriverRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_winStatusPassengerRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winStatusPassengerRear) != asnFALSE)
    {
      if((this->winStatusPassengerRear == object->winStatusPassengerRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winStatusPassengerRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_winStatusDriverWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winStatusDriverWarning) != asnFALSE)
    {
      if((this->winStatusDriverWarning == object->winStatusDriverWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winStatusDriverWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_winStatusPassengerWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winStatusPassengerWarning) != asnFALSE)
    {
      if((this->winStatusPassengerWarning == object->winStatusPassengerWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winStatusPassengerWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_winStatusDriverRearWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winStatusDriverRearWarning) != asnFALSE)
    {
      if((this->winStatusDriverRearWarning == object->winStatusDriverRearWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winStatusDriverRearWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_winStatusPassengerRearWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winStatusPassengerRearWarning) != asnFALSE)
    {
      if((this->winStatusPassengerRearWarning == object->winStatusPassengerRearWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winStatusPassengerRearWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_winPosDriver) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winPosDriver) != asnFALSE)
    {
      if((this->winPosDriver == object->winPosDriver) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winPosDriver) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_winPosPassenger) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winPosPassenger) != asnFALSE)
    {
      if((this->winPosPassenger == object->winPosPassenger) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winPosPassenger) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_winPosDriverRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winPosDriverRear) != asnFALSE)
    {
      if((this->winPosDriverRear == object->winPosDriverRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winPosDriverRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_winPosPassengerRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winPosPassengerRear) != asnFALSE)
    {
      if((this->winPosPassengerRear == object->winPosPassengerRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winPosPassengerRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_sunroofOpenStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_sunroofOpenStatus) != asnFALSE)
    {
      if((this->sunroofOpenStatus == object->sunroofOpenStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_sunroofOpenStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_sunroofPos) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_sunroofPos) != asnFALSE)
    {
      if((this->sunroofPos == object->sunroofPos) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_sunroofPos) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_sunroofOpenStatusWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_sunroofOpenStatusWarning) != asnFALSE)
    {
      if((this->sunroofOpenStatusWarning == object->sunroofOpenStatusWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_sunroofOpenStatusWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_curtainOpenStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_curtainOpenStatus) != asnFALSE)
    {
      if((this->curtainOpenStatus == object->curtainOpenStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_curtainOpenStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_curtainPos) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_curtainPos) != asnFALSE)
    {
      if((this->curtainPos == object->curtainPos) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_curtainPos) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_curtainWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_curtainWarning) != asnFALSE)
    {
      if((this->curtainWarning == object->curtainWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_curtainWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_tankFlapStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_tankFlapStatus) != asnFALSE)
    {
      if((this->tankFlapStatus == object->tankFlapStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_tankFlapStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_chargeLidRearStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_chargeLidRearStatus) != asnFALSE)
    {
      if((this->chargeLidRearStatus == object->chargeLidRearStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_chargeLidRearStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_chargeLidFrontStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_chargeLidFrontStatus) != asnFALSE)
    {
      if((this->chargeLidFrontStatus == object->chargeLidFrontStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_chargeLidFrontStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_ventilateStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_ventilateStatus) != asnFALSE)
    {
      if((this->ventilateStatus == object->ventilateStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_ventilateStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorOpenStatusDriver) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorOpenStatusDriver) != asnFALSE)
    {
      if((this->doorOpenStatusDriver == object->doorOpenStatusDriver) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorOpenStatusDriver) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorOpenStatusPassenger) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorOpenStatusPassenger) != asnFALSE)
    {
      if((this->doorOpenStatusPassenger == object->doorOpenStatusPassenger) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorOpenStatusPassenger) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorOpenStatusDriverRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorOpenStatusDriverRear) != asnFALSE)
    {
      if((this->doorOpenStatusDriverRear == object->doorOpenStatusDriverRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorOpenStatusDriverRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorOpenStatusPassengerRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorOpenStatusPassengerRear) != asnFALSE)
    {
      if((this->doorOpenStatusPassengerRear == object->doorOpenStatusPassengerRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorOpenStatusPassengerRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorPosDriver) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorPosDriver) != asnFALSE)
    {
      if((this->doorPosDriver == object->doorPosDriver) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorPosDriver) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorPosPassenger) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorPosPassenger) != asnFALSE)
    {
      if((this->doorPosPassenger == object->doorPosPassenger) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorPosPassenger) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorPosDriverRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorPosDriverRear) != asnFALSE)
    {
      if((this->doorPosDriverRear == object->doorPosDriverRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorPosDriverRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorPosPassengerRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorPosPassengerRear) != asnFALSE)
    {
      if((this->doorPosPassengerRear == object->doorPosPassengerRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorPosPassengerRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorLockStatusDriver) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorLockStatusDriver) != asnFALSE)
    {
      if((this->doorLockStatusDriver == object->doorLockStatusDriver) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorLockStatusDriver) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorLockStatusPassenger) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorLockStatusPassenger) != asnFALSE)
    {
      if((this->doorLockStatusPassenger == object->doorLockStatusPassenger) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorLockStatusPassenger) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorLockStatusDriverRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorLockStatusDriverRear) != asnFALSE)
    {
      if((this->doorLockStatusDriverRear == object->doorLockStatusDriverRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorLockStatusDriverRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorLockStatusPassengerRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorLockStatusPassengerRear) != asnFALSE)
    {
      if((this->doorLockStatusPassengerRear == object->doorLockStatusPassengerRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorLockStatusPassengerRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorGripStatusDriver) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorGripStatusDriver) != asnFALSE)
    {
      if((this->doorGripStatusDriver == object->doorGripStatusDriver) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorGripStatusDriver) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorGripStatusPassenger) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorGripStatusPassenger) != asnFALSE)
    {
      if((this->doorGripStatusPassenger == object->doorGripStatusPassenger) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorGripStatusPassenger) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorGripStatusDriverRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorGripStatusDriverRear) != asnFALSE)
    {
      if((this->doorGripStatusDriverRear == object->doorGripStatusDriverRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorGripStatusDriverRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_doorGripStatusPassengerRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_doorGripStatusPassengerRear) != asnFALSE)
    {
      if((this->doorGripStatusPassengerRear == object->doorGripStatusPassengerRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_doorGripStatusPassengerRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_trunkOpenStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_trunkOpenStatus) != asnFALSE)
    {
      if((this->trunkOpenStatus == object->trunkOpenStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_trunkOpenStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_trunkLockStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_trunkLockStatus) != asnFALSE)
    {
      if((this->trunkLockStatus == object->trunkLockStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_trunkLockStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_engineHoodOpenStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_engineHoodOpenStatus) != asnFALSE)
    {
      if((this->engineHoodOpenStatus == object->engineHoodOpenStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_engineHoodOpenStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_engineHoodLockStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_engineHoodLockStatus) != asnFALSE)
    {
      if((this->engineHoodLockStatus == object->engineHoodLockStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_engineHoodLockStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_centralLockingStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_centralLockingStatus) != asnFALSE)
    {
      if((this->centralLockingStatus == object->centralLockingStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_centralLockingStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_centralLockingDisStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_centralLockingDisStatus) != asnFALSE)
    {
      if((this->centralLockingDisStatus == object->centralLockingDisStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_centralLockingDisStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_privateLockStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_privateLockStatus) != asnFALSE)
    {
      if((this->privateLockStatus == object->privateLockStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_privateLockStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_vehicleAlarm) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_vehicleAlarm) != asnFALSE)
    {
      if((this->vehicleAlarm == object->vehicleAlarm) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_vehicleAlarm) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_winCloseReminder) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_winCloseReminder) != asnFALSE)
    {
      if((this->winCloseReminder == object->winCloseReminder) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_winCloseReminder) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_handBrakeStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_handBrakeStatus) != asnFALSE)
    {
      if((this->handBrakeStatus == object->handBrakeStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_handBrakeStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_electricParkBrakeStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_electricParkBrakeStatus) != asnFALSE)
    {
      if((this->electricParkBrakeStatus == object->electricParkBrakeStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_electricParkBrakeStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : MaintenanceStatus
 *    Operator ==
 */
asnBOOL MaintenanceStatus::operator== (const asntype& obj) const
{
  const MaintenanceStatus* object = asnDCast(const MaintenanceStatus*,&obj);
  if(object == (MaintenanceStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_mainBatteryStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_mainBatteryStatus) != asnFALSE)
    {
      if((this->mainBatteryStatus == (BatteryStatus *) asnBNULL) || (object->mainBatteryStatus == (BatteryStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->mainBatteryStatus) == *object->mainBatteryStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_mainBatteryStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_tyreStatusDriver) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_tyreStatusDriver) != asnFALSE)
    {
      if((this->tyreStatusDriver == object->tyreStatusDriver) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_tyreStatusDriver) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_tyreStatusPassenger) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_tyreStatusPassenger) != asnFALSE)
    {
      if((this->tyreStatusPassenger == object->tyreStatusPassenger) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_tyreStatusPassenger) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_tyreStatusDriverRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_tyreStatusDriverRear) != asnFALSE)
    {
      if((this->tyreStatusDriverRear == object->tyreStatusDriverRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_tyreStatusDriverRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_tyreStatusPassengerRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_tyreStatusPassengerRear) != asnFALSE)
    {
      if((this->tyreStatusPassengerRear == object->tyreStatusPassengerRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_tyreStatusPassengerRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_engineHrsToService) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_engineHrsToService) != asnFALSE)
    {
      if((this->engineHrsToService == object->engineHrsToService) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_engineHrsToService) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_distanceToService) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_distanceToService) != asnFALSE)
    {
      if((this->distanceToService == object->distanceToService) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_distanceToService) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_daysToService) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_daysToService) != asnFALSE)
    {
      if((this->daysToService == object->daysToService) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_daysToService) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_serviceWarningStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_serviceWarningStatus) != asnFALSE)
    {
      if((this->serviceWarningStatus == object->serviceWarningStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_serviceWarningStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_serviceWarningTrigger) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_serviceWarningTrigger) != asnFALSE)
    {
      if((this->serviceWarningTrigger == object->serviceWarningTrigger) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_serviceWarningTrigger) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_engineOilLevelStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_engineOilLevelStatus) != asnFALSE)
    {
      if((this->engineOilLevelStatus == object->engineOilLevelStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_engineOilLevelStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_engineOilTemperature) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_engineOilTemperature) != asnFALSE)
    {
      if((this->engineOilTemperature == object->engineOilTemperature) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_engineOilTemperature) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_engineOilPressureWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_engineOilPressureWarning) != asnFALSE)
    {
      if((this->engineOilPressureWarning == object->engineOilPressureWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_engineOilPressureWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_engineCoolantTemperature) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_engineCoolantTemperature) != asnFALSE)
    {
      if((this->engineCoolantTemperature == object->engineCoolantTemperature) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_engineCoolantTemperature) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_engineCoolantLevelStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_engineCoolantLevelStatus) != asnFALSE)
    {
      if((this->engineCoolantLevelStatus == object->engineCoolantLevelStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_engineCoolantLevelStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_brakeFluidLevelStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_brakeFluidLevelStatus) != asnFALSE)
    {
      if((this->brakeFluidLevelStatus == object->brakeFluidLevelStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_brakeFluidLevelStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_washerFluidLevelStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_washerFluidLevelStatus) != asnFALSE)
    {
      if((this->washerFluidLevelStatus == object->washerFluidLevelStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_washerFluidLevelStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_indcrTurnLeWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_indcrTurnLeWarning) != asnFALSE)
    {
      if((this->indcrTurnLeWarning == object->indcrTurnLeWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_indcrTurnLeWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_indcrTurnRiWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_indcrTurnRiWarning) != asnFALSE)
    {
      if((this->indcrTurnRiWarning == object->indcrTurnRiWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_indcrTurnRiWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_indcrTurnOnPassSideWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_indcrTurnOnPassSideWarning) != asnFALSE)
    {
      if((this->indcrTurnOnPassSideWarning == object->indcrTurnOnPassSideWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_indcrTurnOnPassSideWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_indcrTurnOnDrvrSideWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_indcrTurnOnDrvrSideWarning) != asnFALSE)
    {
      if((this->indcrTurnOnDrvrSideWarning == object->indcrTurnOnDrvrSideWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_indcrTurnOnDrvrSideWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_indcrTurnLeFrntWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_indcrTurnLeFrntWarning) != asnFALSE)
    {
      if((this->indcrTurnLeFrntWarning == object->indcrTurnLeFrntWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_indcrTurnLeFrntWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fogLiReWarning) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fogLiReWarning) != asnFALSE)
    {
      if((this->fogLiReWarning == object->fogLiReWarning) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fogLiReWarning) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_bulbStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_bulbStatus) != asnFALSE)
    {
      if((this->bulbStatus == object->bulbStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_bulbStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : NetworkAccessStatus
 *    Operator ==
 */
asnBOOL NetworkAccessStatus::operator== (const asntype& obj) const
{
  const NetworkAccessStatus* object = asnDCast(const NetworkAccessStatus*,&obj);
  if(object == (NetworkAccessStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_simInfo) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_simInfo) != asnFALSE)
    {
      if((this->simInfo == (SIMInfo *) asnBNULL) || (object->simInfo == (SIMInfo *) asnBNULL))
        return asnFALSE;
      if((*(this->simInfo) == *object->simInfo) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_simInfo) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_mobileNetwork) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_mobileNetwork) != asnFALSE)
    {
      if((this->mobileNetwork == object->mobileNetwork) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_mobileNetwork) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : OEMMSD
 *    Operator ==
 */
asnBOOL OEMMSD::operator== (const asntype& obj) const
{
  const OEMMSD* object = asnDCast(const OEMMSD*,&obj);
  if(object == (OEMMSD*)0) return asnFALSE;
  if(this->automaticActivation == asnFALSE)
  {
    if(object->automaticActivation != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->automaticActivation == asnFALSE) return asnFALSE;
  }
  if(this->testCall == asnFALSE)
  {
    if(object->testCall != asnFALSE) return asnFALSE;
  }
  else
  {
    if(object->testCall == asnFALSE) return asnFALSE;
  }
  if((this->position == (Position *) asnBNULL) || (object->position == (Position *) asnBNULL))
    return asnFALSE;
  if((*(this->position) == *object->position) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_vehicleType) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_vehicleType) != asnFALSE)
    {
      if((this->vehicleType == object->vehicleType) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_vehicleType) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_OEMMSD__vin) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_OEMMSD__vin) != asnFALSE)
    {
      if((this->vin == object->vin) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_OEMMSD__vin) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->fuelType == object->fuelType) == asnFALSE)
    return asnFALSE;
  if((this->direction == object->direction) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_numberOfPassengers) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_numberOfPassengers) != asnFALSE)
    {
      if((this->numberOfPassengers == object->numberOfPassengers) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_numberOfPassengers) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_recentPositions) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_recentPositions) != asnFALSE)
    {
      if((this->recentPositions == object->recentPositions) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_recentPositions) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_speed) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_speed) != asnFALSE)
    {
      if((this->speed == object->speed) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_speed) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_OEMMSD__speedValidity) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_OEMMSD__speedValidity) != asnFALSE)
    {
      if((this->speedValidity == object->speedValidity) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_OEMMSD__speedValidity) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_OEMMSD__signals) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_OEMMSD__signals) != asnFALSE)
    {
      if((this->signals == object->signals) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_OEMMSD__signals) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : PollutionStatus
 *    Operator ==
 */
asnBOOL PollutionStatus::operator== (const asntype& obj) const
{
  const PollutionStatus* object = asnDCast(const PollutionStatus*,&obj);
  if(object == (PollutionStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_interiorPM25) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_interiorPM25) != asnFALSE)
    {
      if((this->interiorPM25 == object->interiorPM25) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_interiorPM25) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_exteriorPM25) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_exteriorPM25) != asnFALSE)
    {
      if((this->exteriorPM25 == object->exteriorPM25) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_exteriorPM25) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_interiorPM25Level) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_interiorPM25Level) != asnFALSE)
    {
      if((this->interiorPM25Level == object->interiorPM25Level) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_interiorPM25Level) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_exteriorPM25Level) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_exteriorPM25Level) != asnFALSE)
    {
      if((this->exteriorPM25Level == object->exteriorPM25Level) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_exteriorPM25Level) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : RunningStatus
 *    Operator ==
 */
asnBOOL RunningStatus::operator== (const asntype& obj) const
{
  const RunningStatus* object = asnDCast(const RunningStatus*,&obj);
  if(object == (RunningStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_srsStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_srsStatus) != asnFALSE)
    {
      if((this->srsStatus == object->srsStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_srsStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_srsCrashStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_srsCrashStatus) != asnFALSE)
    {
      if((this->srsCrashStatus == object->srsCrashStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_srsCrashStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_RunningStatus__odometer) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_RunningStatus__odometer) != asnFALSE)
    {
      if((this->odometer == object->odometer) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_RunningStatus__odometer) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fuelLevel) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fuelLevel) != asnFALSE)
    {
      if((this->fuelLevel == object->fuelLevel) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fuelLevel) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fuelLevelStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fuelLevelStatus) != asnFALSE)
    {
      if((this->fuelLevelStatus == object->fuelLevelStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fuelLevelStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fuelEnLevel) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fuelEnLevel) != asnFALSE)
    {
      if((this->fuelEnLevel == object->fuelEnLevel) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fuelEnLevel) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fuelEnCnsFild) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fuelEnCnsFild) != asnFALSE)
    {
      if((this->fuelEnCnsFild == object->fuelEnCnsFild) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fuelEnCnsFild) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fuelEnCns) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fuelEnCns) != asnFALSE)
    {
      if((this->fuelEnCns == object->fuelEnCns) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fuelEnCns) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fuelLow1WarningDriver) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fuelLow1WarningDriver) != asnFALSE)
    {
      if((this->fuelLow1WarningDriver == object->fuelLow1WarningDriver) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fuelLow1WarningDriver) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_fuelLow2WarningDriver) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_fuelLow2WarningDriver) != asnFALSE)
    {
      if((this->fuelLow2WarningDriver == object->fuelLow2WarningDriver) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_fuelLow2WarningDriver) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_distanceToEmpty) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_distanceToEmpty) != asnFALSE)
    {
      if((this->distanceToEmpty == object->distanceToEmpty) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_distanceToEmpty) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_trvlDistance) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_trvlDistance) != asnFALSE)
    {
      if((this->trvlDistance == object->trvlDistance) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_trvlDistance) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_aveFuelConsumption) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_aveFuelConsumption) != asnFALSE)
    {
      if((this->aveFuelConsumption == object->aveFuelConsumption) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_aveFuelConsumption) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_aveFuelConsumptionInLatestDrivingCycle) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_aveFuelConsumptionInLatestDrivingCycle) != asnFALSE)
    {
      if((this->aveFuelConsumptionInLatestDrivingCycle == object->aveFuelConsumptionInLatestDrivingCycle) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_aveFuelConsumptionInLatestDrivingCycle) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_avgSpeed) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_avgSpeed) != asnFALSE)
    {
      if((this->avgSpeed == object->avgSpeed) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_avgSpeed) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_avgSpeedLatestDrivingCycle) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_avgSpeedLatestDrivingCycle) != asnFALSE)
    {
      if((this->avgSpeedLatestDrivingCycle == object->avgSpeedLatestDrivingCycle) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_avgSpeedLatestDrivingCycle) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_aveFuelConsumptionUnit) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_aveFuelConsumptionUnit) != asnFALSE)
    {
      if((this->aveFuelConsumptionUnit == object->aveFuelConsumptionUnit) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_aveFuelConsumptionUnit) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_indFuelConsumption) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_indFuelConsumption) != asnFALSE)
    {
      if((this->indFuelConsumption == object->indFuelConsumption) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_indFuelConsumption) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_notifForEmgyCallStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_notifForEmgyCallStatus) != asnFALSE)
    {
      if((this->notifForEmgyCallStatus == object->notifForEmgyCallStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_notifForEmgyCallStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_tyrePreWarningDriver) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_tyrePreWarningDriver) != asnFALSE)
    {
      if((this->tyrePreWarningDriver == object->tyrePreWarningDriver) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_tyrePreWarningDriver) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_tyrePreWarningPassenger) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_tyrePreWarningPassenger) != asnFALSE)
    {
      if((this->tyrePreWarningPassenger == object->tyrePreWarningPassenger) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_tyrePreWarningPassenger) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_tyrePreWarningDriverRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_tyrePreWarningDriverRear) != asnFALSE)
    {
      if((this->tyrePreWarningDriverRear == object->tyrePreWarningDriverRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_tyrePreWarningDriverRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_tyrePreWarningPassengerRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_tyrePreWarningPassengerRear) != asnFALSE)
    {
      if((this->tyrePreWarningPassengerRear == object->tyrePreWarningPassengerRear) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_tyrePreWarningPassengerRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_seatBeltStatusDriver) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusDriver) != asnFALSE)
    {
      if(this->seatBeltStatusDriver == asnFALSE)
      {
        if(object->seatBeltStatusDriver != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->seatBeltStatusDriver == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusDriver) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_seatBeltStatusPassenger) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusPassenger) != asnFALSE)
    {
      if(this->seatBeltStatusPassenger == asnFALSE)
      {
        if(object->seatBeltStatusPassenger != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->seatBeltStatusPassenger == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusPassenger) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_seatBeltStatusDriverRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusDriverRear) != asnFALSE)
    {
      if(this->seatBeltStatusDriverRear == asnFALSE)
      {
        if(object->seatBeltStatusDriverRear != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->seatBeltStatusDriverRear == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusDriverRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_seatBeltStatusPassengerRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusPassengerRear) != asnFALSE)
    {
      if(this->seatBeltStatusPassengerRear == asnFALSE)
      {
        if(object->seatBeltStatusPassengerRear != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->seatBeltStatusPassengerRear == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusPassengerRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_seatBeltStatusDriverMid) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusDriverMid) != asnFALSE)
    {
      if(this->seatBeltStatusDriverMid == asnFALSE)
      {
        if(object->seatBeltStatusDriverMid != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->seatBeltStatusDriverMid == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusDriverMid) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_seatBeltStatusThDriverRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusThDriverRear) != asnFALSE)
    {
      if(this->seatBeltStatusThDriverRear == asnFALSE)
      {
        if(object->seatBeltStatusThDriverRear != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->seatBeltStatusThDriverRear == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusThDriverRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_seatBeltStatusThPassengerRear) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusThPassengerRear) != asnFALSE)
    {
      if(this->seatBeltStatusThPassengerRear == asnFALSE)
      {
        if(object->seatBeltStatusThPassengerRear != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->seatBeltStatusThPassengerRear == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusThPassengerRear) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_seatBeltStatusThDriverMid) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusThDriverMid) != asnFALSE)
    {
      if(this->seatBeltStatusThDriverMid == asnFALSE)
      {
        if(object->seatBeltStatusThDriverMid != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->seatBeltStatusThDriverMid == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_seatBeltStatusThDriverMid) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_brakePedalDepressed) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_brakePedalDepressed) != asnFALSE)
    {
      if(this->brakePedalDepressed == asnFALSE)
      {
        if(object->brakePedalDepressed != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->brakePedalDepressed == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_brakePedalDepressed) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_gearManualStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_gearManualStatus) != asnFALSE)
    {
      if((this->gearManualStatus == object->gearManualStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_gearManualStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_gearAutoStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_gearAutoStatus) != asnFALSE)
    {
      if((this->gearAutoStatus == object->gearAutoStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_gearAutoStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_engineSpeed) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_engineSpeed) != asnFALSE)
    {
      if((this->engineSpeed == object->engineSpeed) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_engineSpeed) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_transimissionGearPostion) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_transimissionGearPostion) != asnFALSE)
    {
      if((this->transimissionGearPostion == object->transimissionGearPostion) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_transimissionGearPostion) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_cruiseControlStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_cruiseControlStatus) != asnFALSE)
    {
      if((this->cruiseControlStatus == object->cruiseControlStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_cruiseControlStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_engineBlockedStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_engineBlockedStatus) != asnFALSE)
    {
      if((this->engineBlockedStatus == object->engineBlockedStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_engineBlockedStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_tripMeter1) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_tripMeter1) != asnFALSE)
    {
      if((this->tripMeter1 == object->tripMeter1) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_tripMeter1) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_tripMeter2) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_tripMeter2) != asnFALSE)
    {
      if((this->tripMeter2 == object->tripMeter2) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_tripMeter2) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : SIMInfo
 *    Operator ==
 */
asnBOOL SIMInfo::operator== (const asntype& obj) const
{
  const SIMInfo* object = asnDCast(const SIMInfo*,&obj);
  if(object == (SIMInfo*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_msisdn) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_msisdn) != asnFALSE)
    {
      if((this->msisdn == object->msisdn) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_msisdn) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_imsi) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_imsi) != asnFALSE)
    {
      if((this->imsi == object->imsi) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_imsi) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_iccId) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_iccId) != asnFALSE)
    {
      if((this->iccId == object->iccId) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_iccId) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : TEMStatus
 *    Operator ==
 */
asnBOOL TEMStatus::operator== (const asntype& obj) const
{
  const TEMStatus* object = asnDCast(const TEMStatus*,&obj);
  if(object == (TEMStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_TEMStatus__vin) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TEMStatus__vin) != asnFALSE)
    {
      if((this->vin == object->vin) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TEMStatus__vin) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if((this->powerSource == object->powerSource) == asnFALSE)
    return asnFALSE;
  if((this->powerMode == object->powerMode) == asnFALSE)
    return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_serviceProvisoned) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_serviceProvisoned) != asnFALSE)
    {
      if(this->serviceProvisoned == asnFALSE)
      {
        if(object->serviceProvisoned != asnFALSE) return asnFALSE;
      }
      else
      {
        if(object->serviceProvisoned == asnFALSE) return asnFALSE;
      }
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_serviceProvisoned) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_healthStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_healthStatus) != asnFALSE)
    {
      if((this->healthStatus == object->healthStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_healthStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TEMStatus__diagnostics) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TEMStatus__diagnostics) != asnFALSE)
    {
      if((this->diagnostics == (ECUDiagnostic *) asnBNULL) || (object->diagnostics == (ECUDiagnostic *) asnBNULL))
        return asnFALSE;
      if((*(this->diagnostics) == *object->diagnostics) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TEMStatus__diagnostics) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TEMStatus__backupBattery) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TEMStatus__backupBattery) != asnFALSE)
    {
      if((this->backupBattery == (BatteryStatus *) asnBNULL) || (object->backupBattery == (BatteryStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->backupBattery) == *object->backupBattery) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TEMStatus__backupBattery) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_sleepCycleNextWakeupTime) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_sleepCycleNextWakeupTime) != asnFALSE)
    {
      if((this->sleepCycleNextWakeupTime == (TimeStamp *) asnBNULL) || (object->sleepCycleNextWakeupTime == (TimeStamp *) asnBNULL))
        return asnFALSE;
      if((*(this->sleepCycleNextWakeupTime) == *object->sleepCycleNextWakeupTime) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_sleepCycleNextWakeupTime) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_serialNumber) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_serialNumber) != asnFALSE)
    {
      if((this->serialNumber == object->serialNumber) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_serialNumber) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_completeECUPartNumbers) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_completeECUPartNumbers) != asnFALSE)
    {
      if((this->completeECUPartNumbers == object->completeECUPartNumbers) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_completeECUPartNumbers) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_networkAccessStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_networkAccessStatus) != asnFALSE)
    {
      if((this->networkAccessStatus == (NetworkAccessStatus *) asnBNULL) || (object->networkAccessStatus == (NetworkAccessStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->networkAccessStatus) == *object->networkAccessStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_networkAccessStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_imei) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_imei) != asnFALSE)
    {
      if((this->imei == object->imei) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_imei) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_connectivityStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_connectivityStatus) != asnFALSE)
    {
      if((this->connectivityStatus == (ConnectivityStatus *) asnBNULL) || (object->connectivityStatus == (ConnectivityStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->connectivityStatus) == *object->connectivityStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_connectivityStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_hwVersion) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_hwVersion) != asnFALSE)
    {
      if((this->hwVersion == object->hwVersion) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_hwVersion) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_TEMStatus__swVersion) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_TEMStatus__swVersion) != asnFALSE)
    {
      if((this->swVersion == object->swVersion) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_TEMStatus__swVersion) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_mpuVersion) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_mpuVersion) != asnFALSE)
    {
      if((this->mpuVersion == object->mpuVersion) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_mpuVersion) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_mcuVersion) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_mcuVersion) != asnFALSE)
    {
      if((this->mcuVersion == object->mcuVersion) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_mcuVersion) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : TheftNotification
 *    Operator ==
 */
asnBOOL TheftNotification::operator== (const asntype& obj) const
{
  const TheftNotification* object = asnDCast(const TheftNotification*,&obj);
  if(object == (TheftNotification*)0) return asnFALSE;
  if((this->time == (TimeStamp *) asnBNULL) || (object->time == (TimeStamp *) asnBNULL))
    return asnFALSE;
  if((*(this->time) == *object->time) == asnFALSE)
    return asnFALSE;
  if((this->activated == object->activated) == asnFALSE)
    return asnFALSE;
  return asnTRUE;
}

/**
 *    TypeAssignment : TowStatus
 *    Operator ==
 */
asnBOOL TowStatus::operator== (const asntype& obj) const
{
  const TowStatus* object = asnDCast(const TowStatus*,&obj);
  if(object == (TowStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_trailerLampActiveChk) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_trailerLampActiveChk) != asnFALSE)
    {
      if((this->trailerLampActiveChk == object->trailerLampActiveChk) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_trailerLampActiveChk) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_trailerLampCheckSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_trailerLampCheckSts) != asnFALSE)
    {
      if((this->trailerLampCheckSts == object->trailerLampCheckSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_trailerLampCheckSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_trailerBreakLampSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_trailerBreakLampSts) != asnFALSE)
    {
      if((this->trailerBreakLampSts == object->trailerBreakLampSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_trailerBreakLampSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_trailerFogLampSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_trailerFogLampSts) != asnFALSE)
    {
      if((this->trailerFogLampSts == object->trailerFogLampSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_trailerFogLampSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_trailerPosLampSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_trailerPosLampSts) != asnFALSE)
    {
      if((this->trailerPosLampSts == object->trailerPosLampSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_trailerPosLampSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_trailerTurningLampSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_trailerTurningLampSts) != asnFALSE)
    {
      if((this->trailerTurningLampSts == object->trailerTurningLampSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_trailerTurningLampSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_trailerReversingLampSts) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_trailerReversingLampSts) != asnFALSE)
    {
      if((this->trailerReversingLampSts == object->trailerReversingLampSts) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_trailerReversingLampSts) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

/**
 *    TypeAssignment : VehicleStatus
 *    Operator ==
 */
asnBOOL VehicleStatus::operator== (const asntype& obj) const
{
  const VehicleStatus* object = asnDCast(const VehicleStatus*,&obj);
  if(object == (VehicleStatus*)0) return asnFALSE;
  if(asnGetPresence(object->optionalField,asn_basicVehicleStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_basicVehicleStatus) != asnFALSE)
    {
      if((this->basicVehicleStatus == (BasicVehicleStatus *) asnBNULL) || (object->basicVehicleStatus == (BasicVehicleStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->basicVehicleStatus) == *object->basicVehicleStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_basicVehicleStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_lockStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_lockStatus) != asnFALSE)
    {
      if((this->lockStatus == (LockStatus *) asnBNULL) || (object->lockStatus == (LockStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->lockStatus) == *object->lockStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_lockStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_maintenanceStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_maintenanceStatus) != asnFALSE)
    {
      if((this->maintenanceStatus == (MaintenanceStatus *) asnBNULL) || (object->maintenanceStatus == (MaintenanceStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->maintenanceStatus) == *object->maintenanceStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_maintenanceStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_runningStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_runningStatus) != asnFALSE)
    {
      if((this->runningStatus == (RunningStatus *) asnBNULL) || (object->runningStatus == (RunningStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->runningStatus) == *object->runningStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_runningStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_climateStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_climateStatus) != asnFALSE)
    {
      if((this->climateStatus == (ClimateStatus *) asnBNULL) || (object->climateStatus == (ClimateStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->climateStatus) == *object->climateStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_climateStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_electricStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_electricStatus) != asnFALSE)
    {
      if((this->electricStatus == (ElectricStatus *) asnBNULL) || (object->electricStatus == (ElectricStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->electricStatus) == *object->electricStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_electricStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_pollutionStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_pollutionStatus) != asnFALSE)
    {
      if((this->pollutionStatus == (PollutionStatus *) asnBNULL) || (object->pollutionStatus == (PollutionStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->pollutionStatus) == *object->pollutionStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_pollutionStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_temStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_temStatus) != asnFALSE)
    {
      if((this->temStatus == (TEMStatus *) asnBNULL) || (object->temStatus == (TEMStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->temStatus) == *object->temStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_temStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_carConfig) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_carConfig) != asnFALSE)
    {
      if((this->carConfig == (CarConfig *) asnBNULL) || (object->carConfig == (CarConfig *) asnBNULL))
        return asnFALSE;
      if((*(this->carConfig) == *object->carConfig) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_carConfig) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_additionalStatus) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_additionalStatus) != asnFALSE)
    {
      if((this->additionalStatus == (AdditionalStatus *) asnBNULL) || (object->additionalStatus == (AdditionalStatus *) asnBNULL))
        return asnFALSE;
      if((*(this->additionalStatus) == *object->additionalStatus) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_additionalStatus) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_msd) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_msd) != asnFALSE)
    {
      if((this->msd == (OEMMSD *) asnBNULL) || (object->msd == (OEMMSD *) asnBNULL))
        return asnFALSE;
      if((*(this->msd) == *object->msd) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_msd) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_VehicleStatus__diagnostics) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_VehicleStatus__diagnostics) != asnFALSE)
    {
      if((this->diagnostics == object->diagnostics) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_VehicleStatus__diagnostics) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_theftNotification) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_theftNotification) != asnFALSE)
    {
      if((this->theftNotification == (TheftNotification *) asnBNULL) || (object->theftNotification == (TheftNotification *) asnBNULL))
        return asnFALSE;
      if((*(this->theftNotification) == *object->theftNotification) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_theftNotification) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  if(asnGetPresence(object->optionalField,asn_notification) != asnFALSE)
  {
    if(asnGetPresence(optionalField,asn_notification) != asnFALSE)
    {
      if((this->notification == (Notification *) asnBNULL) || (object->notification == (Notification *) asnBNULL))
        return asnFALSE;
      if((*(this->notification) == *object->notification) == asnFALSE)
        return asnFALSE;
    }
    else
    {
      return asnFALSE;
    }
  }
  else
  {
    if(asnGetPresence(optionalField,asn_notification) != asnFALSE)
    {
      return asnFALSE;
    }
  }
  return asnTRUE;
}

#endif // asnCodOpCmp

}
