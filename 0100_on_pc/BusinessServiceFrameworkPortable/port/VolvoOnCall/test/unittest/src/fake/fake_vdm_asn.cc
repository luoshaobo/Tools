#include <asn.h>template<typename T>T* create(){ T*  obj =  new T();  obj->optional.value = new asnbyte[100]; return obj;}RequestBody::RequestBody(){}void RequestBody::operator=(const RequestBody&){}RequestBody::RequestBody(const RequestBody& object){}RequestBody::~RequestBody() {}asntype *RequestBody:: __create(){ return create<RequestBody>(); }            ServiceData::ServiceData(){}void ServiceData::operator=(const ServiceData&){}ServiceData::ServiceData(const ServiceData& object){}ServiceData::~ServiceData() {}asntype *ServiceData:: __create(){ return create<ServiceData>(); }//VehicleStatusVehicleStatus::VehicleStatus(){}void VehicleStatus::operator=(const VehicleStatus&){}VehicleStatus::VehicleStatus(const VehicleStatus& object){}VehicleStatus::~VehicleStatus() {}asntype *VehicleStatus:: __create(){ return create<VehicleStatus>(); }// TEMStatusTEMStatus::TEMStatus(){}void TEMStatus::operator=(const TEMStatus&){}TEMStatus::TEMStatus(const TEMStatus& object){}TEMStatus::~TEMStatus() {}asntype *TEMStatus:: __create(){ return create<TEMStatus>(); }// NetworkAccessStatusNetworkAccessStatus::NetworkAccessStatus(){}void NetworkAccessStatus::operator=(const NetworkAccessStatus&){}NetworkAccessStatus::NetworkAccessStatus(const NetworkAccessStatus& object){}NetworkAccessStatus::~NetworkAccessStatus() {}asntype *NetworkAccessStatus:: __create(){ return create<NetworkAccessStatus>(); }// SIMInfoSIMInfo::SIMInfo(){}void SIMInfo::operator=(const SIMInfo&){}SIMInfo::SIMInfo(const SIMInfo& object){}SIMInfo::~SIMInfo() {}asntype *SIMInfo:: __create(){ return create<SIMInfo>(); }// SIMInfoVDServiceRequest::VDServiceRequest(){}void VDServiceRequest::operator=(const VDServiceRequest&){}VDServiceRequest::VDServiceRequest(const VDServiceRequest& object){}VDServiceRequest::~VDServiceRequest() {}asntype *VDServiceRequest:: __create(){  return create<VDServiceRequest>(); }asnTOCTypeAssignment asnZOCTypeAssignment[]={};