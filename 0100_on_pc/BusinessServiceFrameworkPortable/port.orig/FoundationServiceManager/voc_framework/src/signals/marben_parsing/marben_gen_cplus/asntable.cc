/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

asntable.cc: C++ API runtime tables

Generated by ASNSDK TCE-C++ ASN.1 Compiler v6.0 - REF_8.55 - REF_8.41

===========================================================================
*/

/**@file
 * C++ API runtime tables
 */

#include <asn.h>
asnTOCTypeAssignment asnZOCTypeAssignment[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[0])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[404],// xerTag : RequestBody
#endif
//     "RequestBody",// typeReference
    (asnValueCreator)RequestBody::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[1])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[400],// xerTag : ServiceData
#endif
//     "ServiceData",// typeReference
    (asnValueCreator)ServiceData::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*2*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[2])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[385],// xerTag : ServiceTrigger
#endif
//     "ServiceTrigger",// typeReference
    (asnValueCreator)ServiceTrigger::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*3*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[380],// xerTag : TimeStamp
#endif
//     "TimeStamp",// typeReference
    (asnValueCreator)TimeStamp::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*4*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[4])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[117],// xerTag : ServiceParameter
#endif
//     "ServiceParameter",// typeReference
    (asnValueCreator)ServiceParameter::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*5*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[5])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[376],// xerTag : ServiceResult
#endif
//     "ServiceResult",// typeReference
    (asnValueCreator)ServiceResult::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*6*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[6])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[373],// xerTag : Error
#endif
//     "Error",// typeReference
    (asnValueCreator)Error::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*7*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[7])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[370],// xerTag : ServiceStatus
#endif
//     "ServiceStatus",// typeReference
    (asnValueCreator)ServiceStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*8*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPPRChoice,&asnZPRChoice[0])),// type
#ifdef asnCodFBER
    &asnZOGTag[3],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[368],// xerTag : GeneralMessage
#endif
//     "GeneralMessage",// typeReference
    (asnValueCreator)GeneralMessage::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(GeneralMessage, value), // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*9*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[8])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[365],// xerTag : PointOfInterest
#endif
//     "PointOfInterest",// typeReference
    (asnValueCreator)PointOfInterest::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*10*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[9])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[93],// xerTag : Position
#endif
//     "Position",// typeReference
    (asnValueCreator)Position::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*11*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[10])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[356],// xerTag : ContactInfo
#endif
//     "ContactInfo",// typeReference
    (asnValueCreator)ContactInfo::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*12*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[11])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[351],// xerTag : PostAddress
#endif
//     "PostAddress",// typeReference
    (asnValueCreator)PostAddress::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*13*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[12])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[344],// xerTag : Configuration
#endif
//     "Configuration",// typeReference
    (asnValueCreator)Configuration::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*14*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[13])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[341],// xerTag : ConfigurationItem
#endif
//     "ConfigurationItem",// typeReference
    (asnValueCreator)ConfigurationItem::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*15*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[14])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[339],// xerTag : VehicleStatus
#endif
//     "VehicleStatus",// typeReference
    (asnValueCreator)VehicleStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*16*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[15])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[332],// xerTag : BasicVehicleStatus
#endif
//     "BasicVehicleStatus",// typeReference
    (asnValueCreator)BasicVehicleStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*17*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[16])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[324],// xerTag : AdditionalVehicleStatus
#endif
//     "AdditionalVehicleStatus",// typeReference
    (asnValueCreator)AdditionalVehicleStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*18*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[17])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[313],// xerTag : ConfigurationAndIdentity
#endif
//     "ConfigurationAndIdentity",// typeReference
    (asnValueCreator)ConfigurationAndIdentity::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*19*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[18])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[312],// xerTag : DrivingSafetyStatus
#endif
//     "DrivingSafetyStatus",// typeReference
    (asnValueCreator)DrivingSafetyStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*20*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[19])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[287],// xerTag : MaintenanceStatus
#endif
//     "MaintenanceStatus",// typeReference
    (asnValueCreator)MaintenanceStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*21*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[20])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[270],// xerTag : BatteryStatus
#endif
//     "BatteryStatus",// typeReference
    (asnValueCreator)BatteryStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*22*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[21])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[262],// xerTag : RunningStatus
#endif
//     "RunningStatus",// typeReference
    (asnValueCreator)RunningStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*23*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[22])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[248],// xerTag : ClimateStatus
#endif
//     "ClimateStatus",// typeReference
    (asnValueCreator)ClimateStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*24*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[23])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[218],// xerTag : DrivingBehaviourStatus
#endif
//     "DrivingBehaviourStatus",// typeReference
    (asnValueCreator)DrivingBehaviourStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*25*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[24])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[211],// xerTag : PollutionStatus
#endif
//     "PollutionStatus",// typeReference
    (asnValueCreator)PollutionStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*26*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[2])),// type
#ifdef asnCodFBER
    &asnZOGTag[32],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[208],// xerTag : EcuWarningMessages
#endif
//     "EcuWarningMessages",// typeReference
    (asnValueCreator)EcuWarningMessages::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(EcuWarningMessages, value), // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*27*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[25])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[166],// xerTag : GenericVehicleSignal
#endif
//     "GenericVehicleSignal",// typeReference
    (asnValueCreator)GenericVehicleSignal::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*28*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[26])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[200],// xerTag : ElectricVehicleStatus
#endif
//     "ElectricVehicleStatus",// typeReference
    (asnValueCreator)ElectricVehicleStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*29*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[27])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[179],// xerTag : CarConfig
#endif
//     "CarConfig",// typeReference
    (asnValueCreator)CarConfig::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*30*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[28])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[175],// xerTag : OEMMSD
#endif
//     "OEMMSD",// typeReference
    (asnValueCreator)OEMMSD::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*31*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[29])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[165],// xerTag : TEMStatus
#endif
//     "TEMStatus",// typeReference
    (asnValueCreator)TEMStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*32*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[30])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[124],// xerTag : ECUDiagnostic
#endif
//     "ECUDiagnostic",// typeReference
    (asnValueCreator)ECUDiagnostic::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*33*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[31])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[141],// xerTag : DiagnosticTroubleCode
#endif
//     "DiagnosticTroubleCode",// typeReference
    (asnValueCreator)DiagnosticTroubleCode::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*34*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[32])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[132],// xerTag : NetworkAccessStatus
#endif
//     "NetworkAccessStatus",// typeReference
    (asnValueCreator)NetworkAccessStatus::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*35*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[33])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[129],// xerTag : SIMInfo
#endif
//     "SIMInfo",// typeReference
    (asnValueCreator)SIMInfo::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*36*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[6])),// type
#ifdef asnCodFBER
    &asnZOGTag[32],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[125],// xerTag : ECUDiagnostics
#endif
//     "ECUDiagnostics",// typeReference
    (asnValueCreator)ECUDiagnostics::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ECUDiagnostics, value), // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*37*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[34])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[123],// xerTag : TheftNotification
#endif
//     "TheftNotification",// typeReference
    (asnValueCreator)TheftNotification::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*38*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[35])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[121],// xerTag : Notification
#endif
//     "Notification",// typeReference
    (asnValueCreator)Notification::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*39*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[36])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[116],// xerTag : OTA
#endif
//     "OTA",// typeReference
    (asnValueCreator)OTA::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*40*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[37])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[111],// xerTag : Trip
#endif
//     "Trip",// typeReference
    (asnValueCreator)Trip::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*41*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[38])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[81],// xerTag : TrackPoint
#endif
//     "TrackPoint",// typeReference
    (asnValueCreator)TrackPoint::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*42*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[39])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[92],// xerTag : TripFragment
#endif
//     "TripFragment",// typeReference
    (asnValueCreator)TripFragment::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*43*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[40])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[80],// xerTag : NEVServiceData
#endif
//     "NEVServiceData",// typeReference
    (asnValueCreator)NEVServiceData::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*44*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPPRChoice,&asnZPRChoice[1])),// type
#ifdef asnCodFBER
    &asnZOGTag[3],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[67],// xerTag : NEVDRVehiclePosition
#endif
//     "NEVDRVehiclePosition",// typeReference
    (asnValueCreator)NEVDRVehiclePosition::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDRVehiclePosition, value), // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*45*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[41])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[64],// xerTag : NEVDRPositionData
#endif
//     "NEVDRPositionData",// typeReference
    (asnValueCreator)NEVDRPositionData::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*46*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[42])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[54],// xerTag : NEVCoordinatesLongLat
#endif
//     "NEVCoordinatesLongLat",// typeReference
    (asnValueCreator)NEVCoordinatesLongLat::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*47*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[43])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[51],// xerTag : NEVDateTime
#endif
//     "NEVDateTime",// typeReference
    (asnValueCreator)NEVDateTime::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*48*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPPRChoice,&asnZPRChoice[2])),// type
#ifdef asnCodFBER
    &asnZOGTag[3],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[36],// xerTag : EcuData
#endif
//     "EcuData",// typeReference
    (asnValueCreator)EcuData::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(EcuData, value), // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*49*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[44])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[34],// xerTag : ECUData
#endif
//     "ECUData",// typeReference
    (asnValueCreator)ECUData::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*50*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[45])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[30],// xerTag : DIDData
#endif
//     "DIDData",// typeReference
    (asnValueCreator)DIDData::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*51*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[46])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[29],// xerTag : DTCData
#endif
//     "DTCData",// typeReference
    (asnValueCreator)DTCData::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*52*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[47])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[26],// xerTag : EventRule
#endif
//     "EventRule",// typeReference
    (asnValueCreator)EventRule::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*53*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[48])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[19],// xerTag : RuleCondition
#endif
//     "RuleCondition",// typeReference
    (asnValueCreator)RuleCondition::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*54*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[49])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[17],// xerTag : EventAction
#endif
//     "EventAction",// typeReference
    (asnValueCreator)EventAction::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*55*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[50])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[14],// xerTag : RequestHeader
#endif
//     "RequestHeader",// typeReference
    (asnValueCreator)RequestHeader::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    },
  /*56*/ {
    asnRCast(asnOBJECTTp,&asnGOCTypeAssignment),
    asnCCast(asnPNAAbstractSyntax,&asnZNAAbstractSyntax[0]),// abstractSyntax
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[51])),// type
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[2],// xerTag : VDServiceRequest
#endif
//     "VDServiceRequest",// typeReference
    (asnValueCreator)VDServiceRequest::__create,// apiValueCreator
#ifdef asnNonPodOffsetof
    0, // apiValueOffset
#else
    0, // apiValueOffset
#endif
#ifdef asnCodFBER
    1 // tagCount
#endif
    }
};
asnTOIBoolean asnZOIBoolean[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGOIBoolean),
//     (asnPQUReference)0,// constraint
//     "ACKRequired",// typeReference
//     0, // constraintCount
    asnFALSE// isConstraintExtensible
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGOIBoolean),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE// isConstraintExtensible
    }
};
asnTOFByte asnZOFByte[]=
{
  /*0*/ (asnbyte)'\x86',
  /*1*/ (asnbyte)'\x85',
  /*2*/ (asnbyte)'\x81',
  /*3*/ (asnbyte)'\x80',
  /*4*/ (asnbyte)'\x84',
  /*5*/ (asnbyte)'\x83',
  /*6*/ (asnbyte)'\x82',
  /*7*/ (asnbyte)'\x8e',
  /*8*/ (asnbyte)'\x88',
  /*9*/ (asnbyte)'\x87',
  /*10*/ (asnbyte)'\x8d',
  /*11*/ (asnbyte)'\x8c',
  /*12*/ (asnbyte)'\x8b',
  /*13*/ (asnbyte)'\x8a',
  /*14*/ (asnbyte)'\x89',
  /*15*/ (asnbyte)'\x8f',
  /*16*/ (asnbyte)'\x93',
  /*17*/ (asnbyte)'\x92',
  /*18*/ (asnbyte)'\x91',
  /*19*/ (asnbyte)'\x90',
  /*20*/ (asnbyte)'\x9c',
  /*21*/ (asnbyte)'\x9b',
  /*22*/ (asnbyte)'\x9a',
  /*23*/ (asnbyte)'\x99',
  /*24*/ (asnbyte)'\x98',
  /*25*/ (asnbyte)'\x97',
  /*26*/ (asnbyte)'\x96',
  /*27*/ (asnbyte)'\x95',
  /*28*/ (asnbyte)'\x94',
  /*29*/ (asnbyte)'\x10',
  /*30*/ (asnbyte)'\x11',
  /*31*/ (asnbyte)'\x62',
  /*32*/ (asnbyte)'\x6f',
  /*33*/ (asnbyte)'\x64',
  /*34*/ (asnbyte)'\x79',
  /*35*/ (asnbyte)'\x68',
  /*36*/ (asnbyte)'\x65',
  /*37*/ (asnbyte)'\x61',
  /*38*/ (asnbyte)'\x64',
  /*39*/ (asnbyte)'\x65',
  /*40*/ (asnbyte)'\x72',
  /*41*/ (asnbyte)'\x56',
  /*42*/ (asnbyte)'\x44',
  /*43*/ (asnbyte)'\x53',
  /*44*/ (asnbyte)'\x65',
  /*45*/ (asnbyte)'\x72',
  /*46*/ (asnbyte)'\x76',
  /*47*/ (asnbyte)'\x69',
  /*48*/ (asnbyte)'\x63',
  /*49*/ (asnbyte)'\x65',
  /*50*/ (asnbyte)'\x52',
  /*51*/ (asnbyte)'\x65',
  /*52*/ (asnbyte)'\x71',
  /*53*/ (asnbyte)'\x75',
  /*54*/ (asnbyte)'\x65',
  /*55*/ (asnbyte)'\x73',
  /*56*/ (asnbyte)'\x74',
  /*57*/ (asnbyte)'\x61',
  /*58*/ (asnbyte)'\x63',
  /*59*/ (asnbyte)'\x6b',
  /*60*/ (asnbyte)'\x73',
  /*61*/ (asnbyte)'\x65',
  /*62*/ (asnbyte)'\x72',
  /*63*/ (asnbyte)'\x76',
  /*64*/ (asnbyte)'\x69',
  /*65*/ (asnbyte)'\x63',
  /*66*/ (asnbyte)'\x65',
  /*67*/ (asnbyte)'\x52',
  /*68*/ (asnbyte)'\x65',
  /*69*/ (asnbyte)'\x71',
  /*70*/ (asnbyte)'\x75',
  /*71*/ (asnbyte)'\x65',
  /*72*/ (asnbyte)'\x73',
  /*73*/ (asnbyte)'\x74',
  /*74*/ (asnbyte)'\x63',
  /*75*/ (asnbyte)'\x76',
  /*76*/ (asnbyte)'\x63',
  /*77*/ (asnbyte)'\x65',
  /*78*/ (asnbyte)'\x63',
  /*79*/ (asnbyte)'\x75',
  /*80*/ (asnbyte)'\x61',
  /*81*/ (asnbyte)'\x63',
  /*82*/ (asnbyte)'\x6b',
  /*83*/ (asnbyte)'\x52',
  /*84*/ (asnbyte)'\x65',
  /*85*/ (asnbyte)'\x71',
  /*86*/ (asnbyte)'\x75',
  /*87*/ (asnbyte)'\x69',
  /*88*/ (asnbyte)'\x72',
  /*89*/ (asnbyte)'\x65',
  /*90*/ (asnbyte)'\x64',
  /*91*/ (asnbyte)'\x72',
  /*92*/ (asnbyte)'\x65',
  /*93*/ (asnbyte)'\x71',
  /*94*/ (asnbyte)'\x75',
  /*95*/ (asnbyte)'\x65',
  /*96*/ (asnbyte)'\x73',
  /*97*/ (asnbyte)'\x74',
  /*98*/ (asnbyte)'\x54',
  /*99*/ (asnbyte)'\x79',
  /*100*/ (asnbyte)'\x70',
  /*101*/ (asnbyte)'\x65',
  /*102*/ (asnbyte)'\x6d',
  /*103*/ (asnbyte)'\x65',
  /*104*/ (asnbyte)'\x73',
  /*105*/ (asnbyte)'\x73',
  /*106*/ (asnbyte)'\x61',
  /*107*/ (asnbyte)'\x67',
  /*108*/ (asnbyte)'\x65',
  /*109*/ (asnbyte)'\x54',
  /*110*/ (asnbyte)'\x54',
  /*111*/ (asnbyte)'\x4c',
  /*112*/ (asnbyte)'\x63',
  /*113*/ (asnbyte)'\x72',
  /*114*/ (asnbyte)'\x65',
  /*115*/ (asnbyte)'\x61',
  /*116*/ (asnbyte)'\x74',
  /*117*/ (asnbyte)'\x6f',
  /*118*/ (asnbyte)'\x72',
  /*119*/ (asnbyte)'\x49',
  /*120*/ (asnbyte)'\x64',
  /*121*/ (asnbyte)'\x65',
  /*122*/ (asnbyte)'\x76',
  /*123*/ (asnbyte)'\x65',
  /*124*/ (asnbyte)'\x6e',
  /*125*/ (asnbyte)'\x74',
  /*126*/ (asnbyte)'\x49',
  /*127*/ (asnbyte)'\x64',
  /*128*/ (asnbyte)'\x74',
  /*129*/ (asnbyte)'\x69',
  /*130*/ (asnbyte)'\x6d',
  /*131*/ (asnbyte)'\x65',
  /*132*/ (asnbyte)'\x53',
  /*133*/ (asnbyte)'\x74',
  /*134*/ (asnbyte)'\x61',
  /*135*/ (asnbyte)'\x6d',
  /*136*/ (asnbyte)'\x70',
  /*137*/ (asnbyte)'\x72',
  /*138*/ (asnbyte)'\x65',
  /*139*/ (asnbyte)'\x71',
  /*140*/ (asnbyte)'\x75',
  /*141*/ (asnbyte)'\x65',
  /*142*/ (asnbyte)'\x73',
  /*143*/ (asnbyte)'\x74',
  /*144*/ (asnbyte)'\x69',
  /*145*/ (asnbyte)'\x64',
  /*146*/ (asnbyte)'\x52',
  /*147*/ (asnbyte)'\x65',
  /*148*/ (asnbyte)'\x71',
  /*149*/ (asnbyte)'\x75',
  /*150*/ (asnbyte)'\x65',
  /*151*/ (asnbyte)'\x73',
  /*152*/ (asnbyte)'\x74',
  /*153*/ (asnbyte)'\x48',
  /*154*/ (asnbyte)'\x65',
  /*155*/ (asnbyte)'\x61',
  /*156*/ (asnbyte)'\x64',
  /*157*/ (asnbyte)'\x65',
  /*158*/ (asnbyte)'\x72',
  /*159*/ (asnbyte)'\x6e',
  /*160*/ (asnbyte)'\x6f',
  /*161*/ (asnbyte)'\x74',
  /*162*/ (asnbyte)'\x69',
  /*163*/ (asnbyte)'\x66',
  /*164*/ (asnbyte)'\x79',
  /*165*/ (asnbyte)'\x49',
  /*166*/ (asnbyte)'\x6e',
  /*167*/ (asnbyte)'\x74',
  /*168*/ (asnbyte)'\x65',
  /*169*/ (asnbyte)'\x72',
  /*170*/ (asnbyte)'\x76',
  /*171*/ (asnbyte)'\x61',
  /*172*/ (asnbyte)'\x6c',
  /*173*/ (asnbyte)'\x74',
  /*174*/ (asnbyte)'\x72',
  /*175*/ (asnbyte)'\x69',
  /*176*/ (asnbyte)'\x67',
  /*177*/ (asnbyte)'\x67',
  /*178*/ (asnbyte)'\x65',
  /*179*/ (asnbyte)'\x72',
  /*180*/ (asnbyte)'\x54',
  /*181*/ (asnbyte)'\x69',
  /*182*/ (asnbyte)'\x6d',
  /*183*/ (asnbyte)'\x65',
  /*184*/ (asnbyte)'\x73',
  /*185*/ (asnbyte)'\x45',
  /*186*/ (asnbyte)'\x76',
  /*187*/ (asnbyte)'\x65',
  /*188*/ (asnbyte)'\x6e',
  /*189*/ (asnbyte)'\x74',
  /*190*/ (asnbyte)'\x41',
  /*191*/ (asnbyte)'\x63',
  /*192*/ (asnbyte)'\x74',
  /*193*/ (asnbyte)'\x69',
  /*194*/ (asnbyte)'\x6f',
  /*195*/ (asnbyte)'\x6e',
  /*196*/ (asnbyte)'\x63',
  /*197*/ (asnbyte)'\x6f',
  /*198*/ (asnbyte)'\x6e',
  /*199*/ (asnbyte)'\x64',
  /*200*/ (asnbyte)'\x69',
  /*201*/ (asnbyte)'\x74',
  /*202*/ (asnbyte)'\x69',
  /*203*/ (asnbyte)'\x6f',
  /*204*/ (asnbyte)'\x6e',
  /*205*/ (asnbyte)'\x52',
  /*206*/ (asnbyte)'\x75',
  /*207*/ (asnbyte)'\x6c',
  /*208*/ (asnbyte)'\x65',
  /*209*/ (asnbyte)'\x43',
  /*210*/ (asnbyte)'\x6f',
  /*211*/ (asnbyte)'\x6e',
  /*212*/ (asnbyte)'\x64',
  /*213*/ (asnbyte)'\x69',
  /*214*/ (asnbyte)'\x74',
  /*215*/ (asnbyte)'\x69',
  /*216*/ (asnbyte)'\x6f',
  /*217*/ (asnbyte)'\x6e',
  /*218*/ (asnbyte)'\x61',
  /*219*/ (asnbyte)'\x63',
  /*220*/ (asnbyte)'\x74',
  /*221*/ (asnbyte)'\x69',
  /*222*/ (asnbyte)'\x6f',
  /*223*/ (asnbyte)'\x6e',
  /*224*/ (asnbyte)'\x69',
  /*225*/ (asnbyte)'\x6e',
  /*226*/ (asnbyte)'\x74',
  /*227*/ (asnbyte)'\x65',
  /*228*/ (asnbyte)'\x72',
  /*229*/ (asnbyte)'\x76',
  /*230*/ (asnbyte)'\x61',
  /*231*/ (asnbyte)'\x6c',
  /*232*/ (asnbyte)'\x63',
  /*233*/ (asnbyte)'\x6f',
  /*234*/ (asnbyte)'\x6e',
  /*235*/ (asnbyte)'\x64',
  /*236*/ (asnbyte)'\x69',
  /*237*/ (asnbyte)'\x74',
  /*238*/ (asnbyte)'\x69',
  /*239*/ (asnbyte)'\x6f',
  /*240*/ (asnbyte)'\x6e',
  /*241*/ (asnbyte)'\x73',
  /*242*/ (asnbyte)'\x65',
  /*243*/ (asnbyte)'\x6e',
  /*244*/ (asnbyte)'\x64',
  /*245*/ (asnbyte)'\x54',
  /*246*/ (asnbyte)'\x69',
  /*247*/ (asnbyte)'\x6d',
  /*248*/ (asnbyte)'\x65',
  /*249*/ (asnbyte)'\x73',
  /*250*/ (asnbyte)'\x74',
  /*251*/ (asnbyte)'\x61',
  /*252*/ (asnbyte)'\x72',
  /*253*/ (asnbyte)'\x74',
  /*254*/ (asnbyte)'\x54',
  /*255*/ (asnbyte)'\x69',
  /*256*/ (asnbyte)'\x6d',
  /*257*/ (asnbyte)'\x65',
  /*258*/ (asnbyte)'\x72',
  /*259*/ (asnbyte)'\x75',
  /*260*/ (asnbyte)'\x6c',
  /*261*/ (asnbyte)'\x65',
  /*262*/ (asnbyte)'\x49',
  /*263*/ (asnbyte)'\x64',
  /*264*/ (asnbyte)'\x45',
  /*265*/ (asnbyte)'\x76',
  /*266*/ (asnbyte)'\x65',
  /*267*/ (asnbyte)'\x6e',
  /*268*/ (asnbyte)'\x74',
  /*269*/ (asnbyte)'\x52',
  /*270*/ (asnbyte)'\x75',
  /*271*/ (asnbyte)'\x6c',
  /*272*/ (asnbyte)'\x65',
  /*273*/ (asnbyte)'\x64',
  /*274*/ (asnbyte)'\x61',
  /*275*/ (asnbyte)'\x74',
  /*276*/ (asnbyte)'\x61',
  /*277*/ (asnbyte)'\x69',
  /*278*/ (asnbyte)'\x64',
  /*279*/ (asnbyte)'\x44',
  /*280*/ (asnbyte)'\x54',
  /*281*/ (asnbyte)'\x43',
  /*282*/ (asnbyte)'\x44',
  /*283*/ (asnbyte)'\x61',
  /*284*/ (asnbyte)'\x74',
  /*285*/ (asnbyte)'\x61',
  /*286*/ (asnbyte)'\x44',
  /*287*/ (asnbyte)'\x49',
  /*288*/ (asnbyte)'\x44',
  /*289*/ (asnbyte)'\x44',
  /*290*/ (asnbyte)'\x61',
  /*291*/ (asnbyte)'\x74',
  /*292*/ (asnbyte)'\x61',
  /*293*/ (asnbyte)'\x64',
  /*294*/ (asnbyte)'\x74',
  /*295*/ (asnbyte)'\x63',
  /*296*/ (asnbyte)'\x44',
  /*297*/ (asnbyte)'\x61',
  /*298*/ (asnbyte)'\x74',
  /*299*/ (asnbyte)'\x61',
  /*300*/ (asnbyte)'\x64',
  /*301*/ (asnbyte)'\x69',
  /*302*/ (asnbyte)'\x64',
  /*303*/ (asnbyte)'\x44',
  /*304*/ (asnbyte)'\x61',
  /*305*/ (asnbyte)'\x74',
  /*306*/ (asnbyte)'\x61',
  /*307*/ (asnbyte)'\x64',
  /*308*/ (asnbyte)'\x69',
  /*309*/ (asnbyte)'\x61',
  /*310*/ (asnbyte)'\x67',
  /*311*/ (asnbyte)'\x6e',
  /*312*/ (asnbyte)'\x6f',
  /*313*/ (asnbyte)'\x73',
  /*314*/ (asnbyte)'\x74',
  /*315*/ (asnbyte)'\x69',
  /*316*/ (asnbyte)'\x63',
  /*317*/ (asnbyte)'\x4e',
  /*318*/ (asnbyte)'\x75',
  /*319*/ (asnbyte)'\x6d',
  /*320*/ (asnbyte)'\x62',
  /*321*/ (asnbyte)'\x65',
  /*322*/ (asnbyte)'\x72',
  /*323*/ (asnbyte)'\x45',
  /*324*/ (asnbyte)'\x43',
  /*325*/ (asnbyte)'\x55',
  /*326*/ (asnbyte)'\x44',
  /*327*/ (asnbyte)'\x61',
  /*328*/ (asnbyte)'\x74',
  /*329*/ (asnbyte)'\x61',
  /*330*/ (asnbyte)'\x6e',
  /*331*/ (asnbyte)'\x6f',
  /*332*/ (asnbyte)'\x44',
  /*333*/ (asnbyte)'\x69',
  /*334*/ (asnbyte)'\x61',
  /*335*/ (asnbyte)'\x67',
  /*336*/ (asnbyte)'\x44',
  /*337*/ (asnbyte)'\x61',
  /*338*/ (asnbyte)'\x74',
  /*339*/ (asnbyte)'\x61',
  /*340*/ (asnbyte)'\x45',
  /*341*/ (asnbyte)'\x63',
  /*342*/ (asnbyte)'\x75',
  /*343*/ (asnbyte)'\x44',
  /*344*/ (asnbyte)'\x61',
  /*345*/ (asnbyte)'\x74',
  /*346*/ (asnbyte)'\x61',
  /*347*/ (asnbyte)'\x64',
  /*348*/ (asnbyte)'\x72',
  /*349*/ (asnbyte)'\x4d',
  /*350*/ (asnbyte)'\x61',
  /*351*/ (asnbyte)'\x70',
  /*352*/ (asnbyte)'\x4d',
  /*353*/ (asnbyte)'\x61',
  /*354*/ (asnbyte)'\x74',
  /*355*/ (asnbyte)'\x63',
  /*356*/ (asnbyte)'\x68',
  /*357*/ (asnbyte)'\x65',
  /*358*/ (asnbyte)'\x64',
  /*359*/ (asnbyte)'\x64',
  /*360*/ (asnbyte)'\x72',
  /*361*/ (asnbyte)'\x4e',
  /*362*/ (asnbyte)'\x6f',
  /*363*/ (asnbyte)'\x4d',
  /*364*/ (asnbyte)'\x61',
  /*365*/ (asnbyte)'\x70',
  /*366*/ (asnbyte)'\x4d',
  /*367*/ (asnbyte)'\x61',
  /*368*/ (asnbyte)'\x74',
  /*369*/ (asnbyte)'\x63',
  /*370*/ (asnbyte)'\x68',
  /*371*/ (asnbyte)'\x6e',
  /*372*/ (asnbyte)'\x6f',
  /*373*/ (asnbyte)'\x44',
  /*374*/ (asnbyte)'\x72',
  /*375*/ (asnbyte)'\x73',
  /*376*/ (asnbyte)'\x74',
  /*377*/ (asnbyte)'\x61',
  /*378*/ (asnbyte)'\x72',
  /*379*/ (asnbyte)'\x74',
  /*380*/ (asnbyte)'\x75',
  /*381*/ (asnbyte)'\x70',
  /*382*/ (asnbyte)'\x4d',
  /*383*/ (asnbyte)'\x6f',
  /*384*/ (asnbyte)'\x64',
  /*385*/ (asnbyte)'\x65',
  /*386*/ (asnbyte)'\x66',
  /*387*/ (asnbyte)'\x69',
  /*388*/ (asnbyte)'\x78',
  /*389*/ (asnbyte)'\x33',
  /*390*/ (asnbyte)'\x44',
  /*391*/ (asnbyte)'\x66',
  /*392*/ (asnbyte)'\x69',
  /*393*/ (asnbyte)'\x78',
  /*394*/ (asnbyte)'\x32',
  /*395*/ (asnbyte)'\x44',
  /*396*/ (asnbyte)'\x6e',
  /*397*/ (asnbyte)'\x6f',
  /*398*/ (asnbyte)'\x46',
  /*399*/ (asnbyte)'\x69',
  /*400*/ (asnbyte)'\x78',
  /*401*/ (asnbyte)'\x6e',
  /*402*/ (asnbyte)'\x6f',
  /*403*/ (asnbyte)'\x74',
  /*404*/ (asnbyte)'\x41',
  /*405*/ (asnbyte)'\x76',
  /*406*/ (asnbyte)'\x61',
  /*407*/ (asnbyte)'\x69',
  /*408*/ (asnbyte)'\x6c',
  /*409*/ (asnbyte)'\x61',
  /*410*/ (asnbyte)'\x62',
  /*411*/ (asnbyte)'\x6c',
  /*412*/ (asnbyte)'\x65',
  /*413*/ (asnbyte)'\x73',
  /*414*/ (asnbyte)'\x65',
  /*415*/ (asnbyte)'\x63',
  /*416*/ (asnbyte)'\x6f',
  /*417*/ (asnbyte)'\x6e',
  /*418*/ (asnbyte)'\x64',
  /*419*/ (asnbyte)'\x6d',
  /*420*/ (asnbyte)'\x69',
  /*421*/ (asnbyte)'\x6e',
  /*422*/ (asnbyte)'\x75',
  /*423*/ (asnbyte)'\x74',
  /*424*/ (asnbyte)'\x65',
  /*425*/ (asnbyte)'\x68',
  /*426*/ (asnbyte)'\x6f',
  /*427*/ (asnbyte)'\x75',
  /*428*/ (asnbyte)'\x72',
  /*429*/ (asnbyte)'\x64',
  /*430*/ (asnbyte)'\x61',
  /*431*/ (asnbyte)'\x79',
  /*432*/ (asnbyte)'\x6d',
  /*433*/ (asnbyte)'\x6f',
  /*434*/ (asnbyte)'\x6e',
  /*435*/ (asnbyte)'\x74',
  /*436*/ (asnbyte)'\x68',
  /*437*/ (asnbyte)'\x79',
  /*438*/ (asnbyte)'\x65',
  /*439*/ (asnbyte)'\x61',
  /*440*/ (asnbyte)'\x72',
  /*441*/ (asnbyte)'\x4e',
  /*442*/ (asnbyte)'\x45',
  /*443*/ (asnbyte)'\x56',
  /*444*/ (asnbyte)'\x44',
  /*445*/ (asnbyte)'\x61',
  /*446*/ (asnbyte)'\x74',
  /*447*/ (asnbyte)'\x65',
  /*448*/ (asnbyte)'\x54',
  /*449*/ (asnbyte)'\x69',
  /*450*/ (asnbyte)'\x6d',
  /*451*/ (asnbyte)'\x65',
  /*452*/ (asnbyte)'\x6c',
  /*453*/ (asnbyte)'\x61',
  /*454*/ (asnbyte)'\x74',
  /*455*/ (asnbyte)'\x69',
  /*456*/ (asnbyte)'\x74',
  /*457*/ (asnbyte)'\x75',
  /*458*/ (asnbyte)'\x64',
  /*459*/ (asnbyte)'\x65',
  /*460*/ (asnbyte)'\x6c',
  /*461*/ (asnbyte)'\x6f',
  /*462*/ (asnbyte)'\x6e',
  /*463*/ (asnbyte)'\x67',
  /*464*/ (asnbyte)'\x69',
  /*465*/ (asnbyte)'\x74',
  /*466*/ (asnbyte)'\x75',
  /*467*/ (asnbyte)'\x64',
  /*468*/ (asnbyte)'\x65',
  /*469*/ (asnbyte)'\x4e',
  /*470*/ (asnbyte)'\x45',
  /*471*/ (asnbyte)'\x56',
  /*472*/ (asnbyte)'\x43',
  /*473*/ (asnbyte)'\x6f',
  /*474*/ (asnbyte)'\x6f',
  /*475*/ (asnbyte)'\x72',
  /*476*/ (asnbyte)'\x64',
  /*477*/ (asnbyte)'\x69',
  /*478*/ (asnbyte)'\x6e',
  /*479*/ (asnbyte)'\x61',
  /*480*/ (asnbyte)'\x74',
  /*481*/ (asnbyte)'\x65',
  /*482*/ (asnbyte)'\x73',
  /*483*/ (asnbyte)'\x4c',
  /*484*/ (asnbyte)'\x6f',
  /*485*/ (asnbyte)'\x6e',
  /*486*/ (asnbyte)'\x67',
  /*487*/ (asnbyte)'\x4c',
  /*488*/ (asnbyte)'\x61',
  /*489*/ (asnbyte)'\x74',
  /*490*/ (asnbyte)'\x64',
  /*491*/ (asnbyte)'\x72',
  /*492*/ (asnbyte)'\x44',
  /*493*/ (asnbyte)'\x69',
  /*494*/ (asnbyte)'\x73',
  /*495*/ (asnbyte)'\x74',
  /*496*/ (asnbyte)'\x61',
  /*497*/ (asnbyte)'\x6e',
  /*498*/ (asnbyte)'\x63',
  /*499*/ (asnbyte)'\x65',
  /*500*/ (asnbyte)'\x64',
  /*501*/ (asnbyte)'\x72',
  /*502*/ (asnbyte)'\x54',
  /*503*/ (asnbyte)'\x79',
  /*504*/ (asnbyte)'\x70',
  /*505*/ (asnbyte)'\x65',
  /*506*/ (asnbyte)'\x66',
  /*507*/ (asnbyte)'\x69',
  /*508*/ (asnbyte)'\x78',
  /*509*/ (asnbyte)'\x54',
  /*510*/ (asnbyte)'\x79',
  /*511*/ (asnbyte)'\x70',
  /*512*/ (asnbyte)'\x65',
  /*513*/ (asnbyte)'\x66',
  /*514*/ (asnbyte)'\x69',
  /*515*/ (asnbyte)'\x78',
  /*516*/ (asnbyte)'\x54',
  /*517*/ (asnbyte)'\x69',
  /*518*/ (asnbyte)'\x6d',
  /*519*/ (asnbyte)'\x65',
  /*520*/ (asnbyte)'\x6e',
  /*521*/ (asnbyte)'\x75',
  /*522*/ (asnbyte)'\x6d',
  /*523*/ (asnbyte)'\x53',
  /*524*/ (asnbyte)'\x61',
  /*525*/ (asnbyte)'\x74',
  /*526*/ (asnbyte)'\x68',
  /*527*/ (asnbyte)'\x64',
  /*528*/ (asnbyte)'\x6f',
  /*529*/ (asnbyte)'\x70',
  /*530*/ (asnbyte)'\x58',
  /*531*/ (asnbyte)'\x31',
  /*532*/ (asnbyte)'\x30',
  /*533*/ (asnbyte)'\x73',
  /*534*/ (asnbyte)'\x70',
  /*535*/ (asnbyte)'\x65',
  /*536*/ (asnbyte)'\x65',
  /*537*/ (asnbyte)'\x64',
  /*538*/ (asnbyte)'\x4b',
  /*539*/ (asnbyte)'\x6d',
  /*540*/ (asnbyte)'\x70',
  /*541*/ (asnbyte)'\x68',
  /*542*/ (asnbyte)'\x68',
  /*543*/ (asnbyte)'\x65',
  /*544*/ (asnbyte)'\x61',
  /*545*/ (asnbyte)'\x64',
  /*546*/ (asnbyte)'\x69',
  /*547*/ (asnbyte)'\x6e',
  /*548*/ (asnbyte)'\x67',
  /*549*/ (asnbyte)'\x6c',
  /*550*/ (asnbyte)'\x6f',
  /*551*/ (asnbyte)'\x6e',
  /*552*/ (asnbyte)'\x67',
  /*553*/ (asnbyte)'\x4c',
  /*554*/ (asnbyte)'\x61',
  /*555*/ (asnbyte)'\x74',
  /*556*/ (asnbyte)'\x4e',
  /*557*/ (asnbyte)'\x45',
  /*558*/ (asnbyte)'\x56',
  /*559*/ (asnbyte)'\x44',
  /*560*/ (asnbyte)'\x52',
  /*561*/ (asnbyte)'\x50',
  /*562*/ (asnbyte)'\x6f',
  /*563*/ (asnbyte)'\x73',
  /*564*/ (asnbyte)'\x69',
  /*565*/ (asnbyte)'\x74',
  /*566*/ (asnbyte)'\x69',
  /*567*/ (asnbyte)'\x6f',
  /*568*/ (asnbyte)'\x6e',
  /*569*/ (asnbyte)'\x44',
  /*570*/ (asnbyte)'\x61',
  /*571*/ (asnbyte)'\x74',
  /*572*/ (asnbyte)'\x61',
  /*573*/ (asnbyte)'\x64',
  /*574*/ (asnbyte)'\x72',
  /*575*/ (asnbyte)'\x50',
  /*576*/ (asnbyte)'\x6f',
  /*577*/ (asnbyte)'\x73',
  /*578*/ (asnbyte)'\x69',
  /*579*/ (asnbyte)'\x74',
  /*580*/ (asnbyte)'\x69',
  /*581*/ (asnbyte)'\x6f',
  /*582*/ (asnbyte)'\x6e',
  /*583*/ (asnbyte)'\x6e',
  /*584*/ (asnbyte)'\x6f',
  /*585*/ (asnbyte)'\x56',
  /*586*/ (asnbyte)'\x61',
  /*587*/ (asnbyte)'\x6c',
  /*588*/ (asnbyte)'\x69',
  /*589*/ (asnbyte)'\x64',
  /*590*/ (asnbyte)'\x44',
  /*591*/ (asnbyte)'\x61',
  /*592*/ (asnbyte)'\x74',
  /*593*/ (asnbyte)'\x61',
  /*594*/ (asnbyte)'\x4e',
  /*595*/ (asnbyte)'\x45',
  /*596*/ (asnbyte)'\x56',
  /*597*/ (asnbyte)'\x44',
  /*598*/ (asnbyte)'\x52',
  /*599*/ (asnbyte)'\x56',
  /*600*/ (asnbyte)'\x65',
  /*601*/ (asnbyte)'\x68',
  /*602*/ (asnbyte)'\x69',
  /*603*/ (asnbyte)'\x63',
  /*604*/ (asnbyte)'\x6c',
  /*605*/ (asnbyte)'\x65',
  /*606*/ (asnbyte)'\x50',
  /*607*/ (asnbyte)'\x6f',
  /*608*/ (asnbyte)'\x73',
  /*609*/ (asnbyte)'\x69',
  /*610*/ (asnbyte)'\x74',
  /*611*/ (asnbyte)'\x69',
  /*612*/ (asnbyte)'\x6f',
  /*613*/ (asnbyte)'\x6e',
  /*614*/ (asnbyte)'\x64',
  /*615*/ (asnbyte)'\x69',
  /*616*/ (asnbyte)'\x73',
  /*617*/ (asnbyte)'\x61',
  /*618*/ (asnbyte)'\x62',
  /*619*/ (asnbyte)'\x6c',
  /*620*/ (asnbyte)'\x65',
  /*621*/ (asnbyte)'\x52',
  /*622*/ (asnbyte)'\x6d',
  /*623*/ (asnbyte)'\x73',
  /*624*/ (asnbyte)'\x54',
  /*625*/ (asnbyte)'\x72',
  /*626*/ (asnbyte)'\x67',
  /*627*/ (asnbyte)'\x63',
  /*628*/ (asnbyte)'\x68',
  /*629*/ (asnbyte)'\x61',
  /*630*/ (asnbyte)'\x72',
  /*631*/ (asnbyte)'\x67',
  /*632*/ (asnbyte)'\x65',
  /*633*/ (asnbyte)'\x53',
  /*634*/ (asnbyte)'\x74',
  /*635*/ (asnbyte)'\x6f',
  /*636*/ (asnbyte)'\x70',
  /*637*/ (asnbyte)'\x54',
  /*638*/ (asnbyte)'\x72',
  /*639*/ (asnbyte)'\x67',
  /*640*/ (asnbyte)'\x63',
  /*641*/ (asnbyte)'\x68',
  /*642*/ (asnbyte)'\x61',
  /*643*/ (asnbyte)'\x72',
  /*644*/ (asnbyte)'\x67',
  /*645*/ (asnbyte)'\x65',
  /*646*/ (asnbyte)'\x53',
  /*647*/ (asnbyte)'\x74',
  /*648*/ (asnbyte)'\x61',
  /*649*/ (asnbyte)'\x72',
  /*650*/ (asnbyte)'\x74',
  /*651*/ (asnbyte)'\x54',
  /*652*/ (asnbyte)'\x72',
  /*653*/ (asnbyte)'\x67',
  /*654*/ (asnbyte)'\x75',
  /*655*/ (asnbyte)'\x6d',
  /*656*/ (asnbyte)'\x43',
  /*657*/ (asnbyte)'\x68',
  /*658*/ (asnbyte)'\x61',
  /*659*/ (asnbyte)'\x6e',
  /*660*/ (asnbyte)'\x67',
  /*661*/ (asnbyte)'\x65',
  /*662*/ (asnbyte)'\x54',
  /*663*/ (asnbyte)'\x72',
  /*664*/ (asnbyte)'\x67',
  /*665*/ (asnbyte)'\x70',
  /*666*/ (asnbyte)'\x65',
  /*667*/ (asnbyte)'\x72',
  /*668*/ (asnbyte)'\x69',
  /*669*/ (asnbyte)'\x6f',
  /*670*/ (asnbyte)'\x64',
  /*671*/ (asnbyte)'\x69',
  /*672*/ (asnbyte)'\x63',
  /*673*/ (asnbyte)'\x54',
  /*674*/ (asnbyte)'\x72',
  /*675*/ (asnbyte)'\x67',
  /*676*/ (asnbyte)'\x65',
  /*677*/ (asnbyte)'\x63',
  /*678*/ (asnbyte)'\x75',
  /*679*/ (asnbyte)'\x44',
  /*680*/ (asnbyte)'\x61',
  /*681*/ (asnbyte)'\x74',
  /*682*/ (asnbyte)'\x61',
  /*683*/ (asnbyte)'\x70',
  /*684*/ (asnbyte)'\x6f',
  /*685*/ (asnbyte)'\x73',
  /*686*/ (asnbyte)'\x69',
  /*687*/ (asnbyte)'\x74',
  /*688*/ (asnbyte)'\x69',
  /*689*/ (asnbyte)'\x6f',
  /*690*/ (asnbyte)'\x6e',
  /*691*/ (asnbyte)'\x6d',
  /*692*/ (asnbyte)'\x61',
  /*693*/ (asnbyte)'\x49',
  /*694*/ (asnbyte)'\x44',
  /*695*/ (asnbyte)'\x6d',
  /*696*/ (asnbyte)'\x64',
  /*697*/ (asnbyte)'\x70',
  /*698*/ (asnbyte)'\x49',
  /*699*/ (asnbyte)'\x44',
  /*700*/ (asnbyte)'\x72',
  /*701*/ (asnbyte)'\x76',
  /*702*/ (asnbyte)'\x64',
  /*703*/ (asnbyte)'\x63',
  /*704*/ (asnbyte)'\x54',
  /*705*/ (asnbyte)'\x72',
  /*706*/ (asnbyte)'\x69',
  /*707*/ (asnbyte)'\x67',
  /*708*/ (asnbyte)'\x67',
  /*709*/ (asnbyte)'\x65',
  /*710*/ (asnbyte)'\x72',
  /*711*/ (asnbyte)'\x43',
  /*712*/ (asnbyte)'\x6f',
  /*713*/ (asnbyte)'\x6e',
  /*714*/ (asnbyte)'\x64',
  /*715*/ (asnbyte)'\x69',
  /*716*/ (asnbyte)'\x74',
  /*717*/ (asnbyte)'\x69',
  /*718*/ (asnbyte)'\x6f',
  /*719*/ (asnbyte)'\x6e',
  /*720*/ (asnbyte)'\x74',
  /*721*/ (asnbyte)'\x65',
  /*722*/ (asnbyte)'\x73',
  /*723*/ (asnbyte)'\x74',
  /*724*/ (asnbyte)'\x56',
  /*725*/ (asnbyte)'\x65',
  /*726*/ (asnbyte)'\x68',
  /*727*/ (asnbyte)'\x69',
  /*728*/ (asnbyte)'\x63',
  /*729*/ (asnbyte)'\x6c',
  /*730*/ (asnbyte)'\x65',
  /*731*/ (asnbyte)'\x76',
  /*732*/ (asnbyte)'\x65',
  /*733*/ (asnbyte)'\x68',
  /*734*/ (asnbyte)'\x69',
  /*735*/ (asnbyte)'\x63',
  /*736*/ (asnbyte)'\x6c',
  /*737*/ (asnbyte)'\x65',
  /*738*/ (asnbyte)'\x56',
  /*739*/ (asnbyte)'\x69',
  /*740*/ (asnbyte)'\x6e',
  /*741*/ (asnbyte)'\x4e',
  /*742*/ (asnbyte)'\x45',
  /*743*/ (asnbyte)'\x56',
  /*744*/ (asnbyte)'\x53',
  /*745*/ (asnbyte)'\x65',
  /*746*/ (asnbyte)'\x72',
  /*747*/ (asnbyte)'\x76',
  /*748*/ (asnbyte)'\x69',
  /*749*/ (asnbyte)'\x63',
  /*750*/ (asnbyte)'\x65',
  /*751*/ (asnbyte)'\x44',
  /*752*/ (asnbyte)'\x61',
  /*753*/ (asnbyte)'\x74',
  /*754*/ (asnbyte)'\x61',
  /*755*/ (asnbyte)'\x54',
  /*756*/ (asnbyte)'\x72',
  /*757*/ (asnbyte)'\x61',
  /*758*/ (asnbyte)'\x63',
  /*759*/ (asnbyte)'\x6b',
  /*760*/ (asnbyte)'\x50',
  /*761*/ (asnbyte)'\x6f',
  /*762*/ (asnbyte)'\x69',
  /*763*/ (asnbyte)'\x6e',
  /*764*/ (asnbyte)'\x74',
  /*765*/ (asnbyte)'\x65',
  /*766*/ (asnbyte)'\x6e',
  /*767*/ (asnbyte)'\x64',
  /*768*/ (asnbyte)'\x45',
  /*769*/ (asnbyte)'\x6c',
  /*770*/ (asnbyte)'\x65',
  /*771*/ (asnbyte)'\x63',
  /*772*/ (asnbyte)'\x74',
  /*773*/ (asnbyte)'\x72',
  /*774*/ (asnbyte)'\x69',
  /*775*/ (asnbyte)'\x63',
  /*776*/ (asnbyte)'\x52',
  /*777*/ (asnbyte)'\x65',
  /*778*/ (asnbyte)'\x67',
  /*779*/ (asnbyte)'\x65',
  /*780*/ (asnbyte)'\x6e',
  /*781*/ (asnbyte)'\x65',
  /*782*/ (asnbyte)'\x72',
  /*783*/ (asnbyte)'\x61',
  /*784*/ (asnbyte)'\x74',
  /*785*/ (asnbyte)'\x69',
  /*786*/ (asnbyte)'\x6f',
  /*787*/ (asnbyte)'\x6e',
  /*788*/ (asnbyte)'\x65',
  /*789*/ (asnbyte)'\x6e',
  /*790*/ (asnbyte)'\x64',
  /*791*/ (asnbyte)'\x45',
  /*792*/ (asnbyte)'\x6c',
  /*793*/ (asnbyte)'\x65',
  /*794*/ (asnbyte)'\x63',
  /*795*/ (asnbyte)'\x74',
  /*796*/ (asnbyte)'\x72',
  /*797*/ (asnbyte)'\x69',
  /*798*/ (asnbyte)'\x63',
  /*799*/ (asnbyte)'\x43',
  /*800*/ (asnbyte)'\x6f',
  /*801*/ (asnbyte)'\x6e',
  /*802*/ (asnbyte)'\x73',
  /*803*/ (asnbyte)'\x75',
  /*804*/ (asnbyte)'\x6d',
  /*805*/ (asnbyte)'\x70',
  /*806*/ (asnbyte)'\x74',
  /*807*/ (asnbyte)'\x69',
  /*808*/ (asnbyte)'\x6f',
  /*809*/ (asnbyte)'\x6e',
  /*810*/ (asnbyte)'\x65',
  /*811*/ (asnbyte)'\x6e',
  /*812*/ (asnbyte)'\x64',
  /*813*/ (asnbyte)'\x46',
  /*814*/ (asnbyte)'\x75',
  /*815*/ (asnbyte)'\x65',
  /*816*/ (asnbyte)'\x6c',
  /*817*/ (asnbyte)'\x4c',
  /*818*/ (asnbyte)'\x65',
  /*819*/ (asnbyte)'\x76',
  /*820*/ (asnbyte)'\x65',
  /*821*/ (asnbyte)'\x6c',
  /*822*/ (asnbyte)'\x65',
  /*823*/ (asnbyte)'\x6e',
  /*824*/ (asnbyte)'\x64',
  /*825*/ (asnbyte)'\x4f',
  /*826*/ (asnbyte)'\x64',
  /*827*/ (asnbyte)'\x6f',
  /*828*/ (asnbyte)'\x6d',
  /*829*/ (asnbyte)'\x65',
  /*830*/ (asnbyte)'\x74',
  /*831*/ (asnbyte)'\x65',
  /*832*/ (asnbyte)'\x72',
  /*833*/ (asnbyte)'\x65',
  /*834*/ (asnbyte)'\x6e',
  /*835*/ (asnbyte)'\x64',
  /*836*/ (asnbyte)'\x50',
  /*837*/ (asnbyte)'\x6f',
  /*838*/ (asnbyte)'\x73',
  /*839*/ (asnbyte)'\x69',
  /*840*/ (asnbyte)'\x74',
  /*841*/ (asnbyte)'\x69',
  /*842*/ (asnbyte)'\x6f',
  /*843*/ (asnbyte)'\x6e',
  /*844*/ (asnbyte)'\x73',
  /*845*/ (asnbyte)'\x74',
  /*846*/ (asnbyte)'\x61',
  /*847*/ (asnbyte)'\x72',
  /*848*/ (asnbyte)'\x74',
  /*849*/ (asnbyte)'\x45',
  /*850*/ (asnbyte)'\x6c',
  /*851*/ (asnbyte)'\x65',
  /*852*/ (asnbyte)'\x63',
  /*853*/ (asnbyte)'\x74',
  /*854*/ (asnbyte)'\x72',
  /*855*/ (asnbyte)'\x69',
  /*856*/ (asnbyte)'\x63',
  /*857*/ (asnbyte)'\x52',
  /*858*/ (asnbyte)'\x65',
  /*859*/ (asnbyte)'\x67',
  /*860*/ (asnbyte)'\x65',
  /*861*/ (asnbyte)'\x6e',
  /*862*/ (asnbyte)'\x65',
  /*863*/ (asnbyte)'\x72',
  /*864*/ (asnbyte)'\x61',
  /*865*/ (asnbyte)'\x74',
  /*866*/ (asnbyte)'\x69',
  /*867*/ (asnbyte)'\x6f',
  /*868*/ (asnbyte)'\x6e',
  /*869*/ (asnbyte)'\x73',
  /*870*/ (asnbyte)'\x74',
  /*871*/ (asnbyte)'\x61',
  /*872*/ (asnbyte)'\x72',
  /*873*/ (asnbyte)'\x74',
  /*874*/ (asnbyte)'\x45',
  /*875*/ (asnbyte)'\x6c',
  /*876*/ (asnbyte)'\x65',
  /*877*/ (asnbyte)'\x63',
  /*878*/ (asnbyte)'\x74',
  /*879*/ (asnbyte)'\x72',
  /*880*/ (asnbyte)'\x69',
  /*881*/ (asnbyte)'\x63',
  /*882*/ (asnbyte)'\x43',
  /*883*/ (asnbyte)'\x6f',
  /*884*/ (asnbyte)'\x6e',
  /*885*/ (asnbyte)'\x73',
  /*886*/ (asnbyte)'\x75',
  /*887*/ (asnbyte)'\x6d',
  /*888*/ (asnbyte)'\x70',
  /*889*/ (asnbyte)'\x74',
  /*890*/ (asnbyte)'\x69',
  /*891*/ (asnbyte)'\x6f',
  /*892*/ (asnbyte)'\x6e',
  /*893*/ (asnbyte)'\x73',
  /*894*/ (asnbyte)'\x74',
  /*895*/ (asnbyte)'\x61',
  /*896*/ (asnbyte)'\x72',
  /*897*/ (asnbyte)'\x74',
  /*898*/ (asnbyte)'\x46',
  /*899*/ (asnbyte)'\x75',
  /*900*/ (asnbyte)'\x65',
  /*901*/ (asnbyte)'\x6c',
  /*902*/ (asnbyte)'\x4c',
  /*903*/ (asnbyte)'\x65',
  /*904*/ (asnbyte)'\x76',
  /*905*/ (asnbyte)'\x65',
  /*906*/ (asnbyte)'\x6c',
  /*907*/ (asnbyte)'\x73',
  /*908*/ (asnbyte)'\x74',
  /*909*/ (asnbyte)'\x61',
  /*910*/ (asnbyte)'\x72',
  /*911*/ (asnbyte)'\x74',
  /*912*/ (asnbyte)'\x4f',
  /*913*/ (asnbyte)'\x64',
  /*914*/ (asnbyte)'\x6f',
  /*915*/ (asnbyte)'\x6d',
  /*916*/ (asnbyte)'\x65',
  /*917*/ (asnbyte)'\x74',
  /*918*/ (asnbyte)'\x65',
  /*919*/ (asnbyte)'\x72',
  /*920*/ (asnbyte)'\x73',
  /*921*/ (asnbyte)'\x74',
  /*922*/ (asnbyte)'\x61',
  /*923*/ (asnbyte)'\x72',
  /*924*/ (asnbyte)'\x74',
  /*925*/ (asnbyte)'\x50',
  /*926*/ (asnbyte)'\x6f',
  /*927*/ (asnbyte)'\x73',
  /*928*/ (asnbyte)'\x69',
  /*929*/ (asnbyte)'\x74',
  /*930*/ (asnbyte)'\x69',
  /*931*/ (asnbyte)'\x6f',
  /*932*/ (asnbyte)'\x6e',
  /*933*/ (asnbyte)'\x54',
  /*934*/ (asnbyte)'\x72',
  /*935*/ (asnbyte)'\x69',
  /*936*/ (asnbyte)'\x70',
  /*937*/ (asnbyte)'\x46',
  /*938*/ (asnbyte)'\x72',
  /*939*/ (asnbyte)'\x61',
  /*940*/ (asnbyte)'\x67',
  /*941*/ (asnbyte)'\x6d',
  /*942*/ (asnbyte)'\x65',
  /*943*/ (asnbyte)'\x6e',
  /*944*/ (asnbyte)'\x74',
  /*945*/ (asnbyte)'\x50',
  /*946*/ (asnbyte)'\x6f',
  /*947*/ (asnbyte)'\x73',
  /*948*/ (asnbyte)'\x69',
  /*949*/ (asnbyte)'\x74',
  /*950*/ (asnbyte)'\x69',
  /*951*/ (asnbyte)'\x6f',
  /*952*/ (asnbyte)'\x6e',
  /*953*/ (asnbyte)'\x65',
  /*954*/ (asnbyte)'\x6c',
  /*955*/ (asnbyte)'\x65',
  /*956*/ (asnbyte)'\x63',
  /*957*/ (asnbyte)'\x74',
  /*958*/ (asnbyte)'\x72',
  /*959*/ (asnbyte)'\x69',
  /*960*/ (asnbyte)'\x63',
  /*961*/ (asnbyte)'\x52',
  /*962*/ (asnbyte)'\x65',
  /*963*/ (asnbyte)'\x67',
  /*964*/ (asnbyte)'\x65',
  /*965*/ (asnbyte)'\x6e',
  /*966*/ (asnbyte)'\x65',
  /*967*/ (asnbyte)'\x72',
  /*968*/ (asnbyte)'\x61',
  /*969*/ (asnbyte)'\x74',
  /*970*/ (asnbyte)'\x69',
  /*971*/ (asnbyte)'\x6f',
  /*972*/ (asnbyte)'\x6e',
  /*973*/ (asnbyte)'\x53',
  /*974*/ (asnbyte)'\x69',
  /*975*/ (asnbyte)'\x6e',
  /*976*/ (asnbyte)'\x63',
  /*977*/ (asnbyte)'\x65',
  /*978*/ (asnbyte)'\x4c',
  /*979*/ (asnbyte)'\x61',
  /*980*/ (asnbyte)'\x73',
  /*981*/ (asnbyte)'\x74',
  /*982*/ (asnbyte)'\x53',
  /*983*/ (asnbyte)'\x61',
  /*984*/ (asnbyte)'\x6d',
  /*985*/ (asnbyte)'\x70',
  /*986*/ (asnbyte)'\x6c',
  /*987*/ (asnbyte)'\x65',
  /*988*/ (asnbyte)'\x65',
  /*989*/ (asnbyte)'\x6c',
  /*990*/ (asnbyte)'\x65',
  /*991*/ (asnbyte)'\x63',
  /*992*/ (asnbyte)'\x74',
  /*993*/ (asnbyte)'\x72',
  /*994*/ (asnbyte)'\x69',
  /*995*/ (asnbyte)'\x63',
  /*996*/ (asnbyte)'\x43',
  /*997*/ (asnbyte)'\x6f',
  /*998*/ (asnbyte)'\x6e',
  /*999*/ (asnbyte)'\x73',
  /*1000*/ (asnbyte)'\x75',
  /*1001*/ (asnbyte)'\x6d',
  /*1002*/ (asnbyte)'\x70',
  /*1003*/ (asnbyte)'\x74',
  /*1004*/ (asnbyte)'\x69',
  /*1005*/ (asnbyte)'\x6f',
  /*1006*/ (asnbyte)'\x6e',
  /*1007*/ (asnbyte)'\x53',
  /*1008*/ (asnbyte)'\x69',
  /*1009*/ (asnbyte)'\x6e',
  /*1010*/ (asnbyte)'\x63',
  /*1011*/ (asnbyte)'\x65',
  /*1012*/ (asnbyte)'\x4c',
  /*1013*/ (asnbyte)'\x61',
  /*1014*/ (asnbyte)'\x73',
  /*1015*/ (asnbyte)'\x74',
  /*1016*/ (asnbyte)'\x53',
  /*1017*/ (asnbyte)'\x61',
  /*1018*/ (asnbyte)'\x6d',
  /*1019*/ (asnbyte)'\x70',
  /*1020*/ (asnbyte)'\x6c',
  /*1021*/ (asnbyte)'\x65',
  /*1022*/ (asnbyte)'\x66',
  /*1023*/ (asnbyte)'\x75',
  /*1024*/ (asnbyte)'\x65',
  /*1025*/ (asnbyte)'\x6c',
  /*1026*/ (asnbyte)'\x43',
  /*1027*/ (asnbyte)'\x6f',
  /*1028*/ (asnbyte)'\x6e',
  /*1029*/ (asnbyte)'\x73',
  /*1030*/ (asnbyte)'\x75',
  /*1031*/ (asnbyte)'\x6d',
  /*1032*/ (asnbyte)'\x70',
  /*1033*/ (asnbyte)'\x74',
  /*1034*/ (asnbyte)'\x69',
  /*1035*/ (asnbyte)'\x6f',
  /*1036*/ (asnbyte)'\x6e',
  /*1037*/ (asnbyte)'\x53',
  /*1038*/ (asnbyte)'\x69',
  /*1039*/ (asnbyte)'\x6e',
  /*1040*/ (asnbyte)'\x63',
  /*1041*/ (asnbyte)'\x65',
  /*1042*/ (asnbyte)'\x4c',
  /*1043*/ (asnbyte)'\x61',
  /*1044*/ (asnbyte)'\x73',
  /*1045*/ (asnbyte)'\x74',
  /*1046*/ (asnbyte)'\x57',
  /*1047*/ (asnbyte)'\x61',
  /*1048*/ (asnbyte)'\x79',
  /*1049*/ (asnbyte)'\x70',
  /*1050*/ (asnbyte)'\x6f',
  /*1051*/ (asnbyte)'\x69',
  /*1052*/ (asnbyte)'\x6e',
  /*1053*/ (asnbyte)'\x74',
  /*1054*/ (asnbyte)'\x74',
  /*1055*/ (asnbyte)'\x72',
  /*1056*/ (asnbyte)'\x61',
  /*1057*/ (asnbyte)'\x76',
  /*1058*/ (asnbyte)'\x65',
  /*1059*/ (asnbyte)'\x6c',
  /*1060*/ (asnbyte)'\x44',
  /*1061*/ (asnbyte)'\x69',
  /*1062*/ (asnbyte)'\x73',
  /*1063*/ (asnbyte)'\x74',
  /*1064*/ (asnbyte)'\x61',
  /*1065*/ (asnbyte)'\x6e',
  /*1066*/ (asnbyte)'\x63',
  /*1067*/ (asnbyte)'\x65',
  /*1068*/ (asnbyte)'\x53',
  /*1069*/ (asnbyte)'\x69',
  /*1070*/ (asnbyte)'\x6e',
  /*1071*/ (asnbyte)'\x63',
  /*1072*/ (asnbyte)'\x65',
  /*1073*/ (asnbyte)'\x4c',
  /*1074*/ (asnbyte)'\x61',
  /*1075*/ (asnbyte)'\x73',
  /*1076*/ (asnbyte)'\x74',
  /*1077*/ (asnbyte)'\x57',
  /*1078*/ (asnbyte)'\x61',
  /*1079*/ (asnbyte)'\x79',
  /*1080*/ (asnbyte)'\x70',
  /*1081*/ (asnbyte)'\x6f',
  /*1082*/ (asnbyte)'\x69',
  /*1083*/ (asnbyte)'\x6e',
  /*1084*/ (asnbyte)'\x74',
  /*1085*/ (asnbyte)'\x6f',
  /*1086*/ (asnbyte)'\x64',
  /*1087*/ (asnbyte)'\x6f',
  /*1088*/ (asnbyte)'\x6d',
  /*1089*/ (asnbyte)'\x65',
  /*1090*/ (asnbyte)'\x74',
  /*1091*/ (asnbyte)'\x65',
  /*1092*/ (asnbyte)'\x72',
  /*1093*/ (asnbyte)'\x69',
  /*1094*/ (asnbyte)'\x73',
  /*1095*/ (asnbyte)'\x53',
  /*1096*/ (asnbyte)'\x56',
  /*1097*/ (asnbyte)'\x54',
  /*1098*/ (asnbyte)'\x64',
  /*1099*/ (asnbyte)'\x69',
  /*1100*/ (asnbyte)'\x72',
  /*1101*/ (asnbyte)'\x65',
  /*1102*/ (asnbyte)'\x63',
  /*1103*/ (asnbyte)'\x74',
  /*1104*/ (asnbyte)'\x69',
  /*1105*/ (asnbyte)'\x6f',
  /*1106*/ (asnbyte)'\x6e',
  /*1107*/ (asnbyte)'\x73',
  /*1108*/ (asnbyte)'\x70',
  /*1109*/ (asnbyte)'\x65',
  /*1110*/ (asnbyte)'\x65',
  /*1111*/ (asnbyte)'\x64',
  /*1112*/ (asnbyte)'\x73',
  /*1113*/ (asnbyte)'\x79',
  /*1114*/ (asnbyte)'\x73',
  /*1115*/ (asnbyte)'\x74',
  /*1116*/ (asnbyte)'\x65',
  /*1117*/ (asnbyte)'\x6d',
  /*1118*/ (asnbyte)'\x54',
  /*1119*/ (asnbyte)'\x69',
  /*1120*/ (asnbyte)'\x6d',
  /*1121*/ (asnbyte)'\x65',
  /*1122*/ (asnbyte)'\x65',
  /*1123*/ (asnbyte)'\x6c',
  /*1124*/ (asnbyte)'\x65',
  /*1125*/ (asnbyte)'\x63',
  /*1126*/ (asnbyte)'\x74',
  /*1127*/ (asnbyte)'\x72',
  /*1128*/ (asnbyte)'\x69',
  /*1129*/ (asnbyte)'\x63',
  /*1130*/ (asnbyte)'\x52',
  /*1131*/ (asnbyte)'\x65',
  /*1132*/ (asnbyte)'\x67',
  /*1133*/ (asnbyte)'\x65',
  /*1134*/ (asnbyte)'\x6e',
  /*1135*/ (asnbyte)'\x65',
  /*1136*/ (asnbyte)'\x72',
  /*1137*/ (asnbyte)'\x61',
  /*1138*/ (asnbyte)'\x74',
  /*1139*/ (asnbyte)'\x69',
  /*1140*/ (asnbyte)'\x6f',
  /*1141*/ (asnbyte)'\x6e',
  /*1142*/ (asnbyte)'\x65',
  /*1143*/ (asnbyte)'\x6c',
  /*1144*/ (asnbyte)'\x65',
  /*1145*/ (asnbyte)'\x63',
  /*1146*/ (asnbyte)'\x74',
  /*1147*/ (asnbyte)'\x72',
  /*1148*/ (asnbyte)'\x69',
  /*1149*/ (asnbyte)'\x63',
  /*1150*/ (asnbyte)'\x43',
  /*1151*/ (asnbyte)'\x6f',
  /*1152*/ (asnbyte)'\x6e',
  /*1153*/ (asnbyte)'\x73',
  /*1154*/ (asnbyte)'\x75',
  /*1155*/ (asnbyte)'\x6d',
  /*1156*/ (asnbyte)'\x70',
  /*1157*/ (asnbyte)'\x74',
  /*1158*/ (asnbyte)'\x69',
  /*1159*/ (asnbyte)'\x6f',
  /*1160*/ (asnbyte)'\x6e',
  /*1161*/ (asnbyte)'\x61',
  /*1162*/ (asnbyte)'\x76',
  /*1163*/ (asnbyte)'\x67',
  /*1164*/ (asnbyte)'\x53',
  /*1165*/ (asnbyte)'\x70',
  /*1166*/ (asnbyte)'\x65',
  /*1167*/ (asnbyte)'\x65',
  /*1168*/ (asnbyte)'\x64',
  /*1169*/ (asnbyte)'\x77',
  /*1170*/ (asnbyte)'\x61',
  /*1171*/ (asnbyte)'\x79',
  /*1172*/ (asnbyte)'\x70',
  /*1173*/ (asnbyte)'\x6f',
  /*1174*/ (asnbyte)'\x69',
  /*1175*/ (asnbyte)'\x6e',
  /*1176*/ (asnbyte)'\x74',
  /*1177*/ (asnbyte)'\x73',
  /*1178*/ (asnbyte)'\x74',
  /*1179*/ (asnbyte)'\x72',
  /*1180*/ (asnbyte)'\x61',
  /*1181*/ (asnbyte)'\x63',
  /*1182*/ (asnbyte)'\x6b',
  /*1183*/ (asnbyte)'\x70',
  /*1184*/ (asnbyte)'\x6f',
  /*1185*/ (asnbyte)'\x69',
  /*1186*/ (asnbyte)'\x6e',
  /*1187*/ (asnbyte)'\x74',
  /*1188*/ (asnbyte)'\x73',
  /*1189*/ (asnbyte)'\x74',
  /*1190*/ (asnbyte)'\x72',
  /*1191*/ (asnbyte)'\x61',
  /*1192*/ (asnbyte)'\x76',
  /*1193*/ (asnbyte)'\x65',
  /*1194*/ (asnbyte)'\x6c',
  /*1195*/ (asnbyte)'\x65',
  /*1196*/ (asnbyte)'\x64',
  /*1197*/ (asnbyte)'\x44',
  /*1198*/ (asnbyte)'\x69',
  /*1199*/ (asnbyte)'\x73',
  /*1200*/ (asnbyte)'\x74',
  /*1201*/ (asnbyte)'\x61',
  /*1202*/ (asnbyte)'\x6e',
  /*1203*/ (asnbyte)'\x63',
  /*1204*/ (asnbyte)'\x65',
  /*1205*/ (asnbyte)'\x66',
  /*1206*/ (asnbyte)'\x75',
  /*1207*/ (asnbyte)'\x65',
  /*1208*/ (asnbyte)'\x6c',
  /*1209*/ (asnbyte)'\x43',
  /*1210*/ (asnbyte)'\x6f',
  /*1211*/ (asnbyte)'\x6e',
  /*1212*/ (asnbyte)'\x73',
  /*1213*/ (asnbyte)'\x75',
  /*1214*/ (asnbyte)'\x6d',
  /*1215*/ (asnbyte)'\x70',
  /*1216*/ (asnbyte)'\x74',
  /*1217*/ (asnbyte)'\x69',
  /*1218*/ (asnbyte)'\x6f',
  /*1219*/ (asnbyte)'\x6e',
  /*1220*/ (asnbyte)'\x74',
  /*1221*/ (asnbyte)'\x72',
  /*1222*/ (asnbyte)'\x69',
  /*1223*/ (asnbyte)'\x70',
  /*1224*/ (asnbyte)'\x49',
  /*1225*/ (asnbyte)'\x64',
  /*1226*/ (asnbyte)'\x54',
  /*1227*/ (asnbyte)'\x72',
  /*1228*/ (asnbyte)'\x69',
  /*1229*/ (asnbyte)'\x70',
  /*1230*/ (asnbyte)'\x76',
  /*1231*/ (asnbyte)'\x65',
  /*1232*/ (asnbyte)'\x72',
  /*1233*/ (asnbyte)'\x69',
  /*1234*/ (asnbyte)'\x66',
  /*1235*/ (asnbyte)'\x69',
  /*1236*/ (asnbyte)'\x63',
  /*1237*/ (asnbyte)'\x61',
  /*1238*/ (asnbyte)'\x74',
  /*1239*/ (asnbyte)'\x69',
  /*1240*/ (asnbyte)'\x6f',
  /*1241*/ (asnbyte)'\x6e',
  /*1242*/ (asnbyte)'\x43',
  /*1243*/ (asnbyte)'\x6f',
  /*1244*/ (asnbyte)'\x64',
  /*1245*/ (asnbyte)'\x65',
  /*1246*/ (asnbyte)'\x64',
  /*1247*/ (asnbyte)'\x6f',
  /*1248*/ (asnbyte)'\x77',
  /*1249*/ (asnbyte)'\x6e',
  /*1250*/ (asnbyte)'\x6c',
  /*1251*/ (asnbyte)'\x6f',
  /*1252*/ (asnbyte)'\x61',
  /*1253*/ (asnbyte)'\x64',
  /*1254*/ (asnbyte)'\x55',
  /*1255*/ (asnbyte)'\x72',
  /*1256*/ (asnbyte)'\x6c',
  /*1257*/ (asnbyte)'\x73',
  /*1258*/ (asnbyte)'\x77',
  /*1259*/ (asnbyte)'\x56',
  /*1260*/ (asnbyte)'\x65',
  /*1261*/ (asnbyte)'\x72',
  /*1262*/ (asnbyte)'\x73',
  /*1263*/ (asnbyte)'\x69',
  /*1264*/ (asnbyte)'\x6f',
  /*1265*/ (asnbyte)'\x6e',
  /*1266*/ (asnbyte)'\x73',
  /*1267*/ (asnbyte)'\x77',
  /*1268*/ (asnbyte)'\x4d',
  /*1269*/ (asnbyte)'\x6f',
  /*1270*/ (asnbyte)'\x64',
  /*1271*/ (asnbyte)'\x65',
  /*1272*/ (asnbyte)'\x6c',
  /*1273*/ (asnbyte)'\x4f',
  /*1274*/ (asnbyte)'\x54',
  /*1275*/ (asnbyte)'\x41',
  /*1276*/ (asnbyte)'\x53',
  /*1277*/ (asnbyte)'\x65',
  /*1278*/ (asnbyte)'\x72',
  /*1279*/ (asnbyte)'\x76',
  /*1280*/ (asnbyte)'\x69',
  /*1281*/ (asnbyte)'\x63',
  /*1282*/ (asnbyte)'\x65',
  /*1283*/ (asnbyte)'\x50',
  /*1284*/ (asnbyte)'\x61',
  /*1285*/ (asnbyte)'\x72',
  /*1286*/ (asnbyte)'\x61',
  /*1287*/ (asnbyte)'\x6d',
  /*1288*/ (asnbyte)'\x65',
  /*1289*/ (asnbyte)'\x74',
  /*1290*/ (asnbyte)'\x65',
  /*1291*/ (asnbyte)'\x72',
  /*1292*/ (asnbyte)'\x70',
  /*1293*/ (asnbyte)'\x61',
  /*1294*/ (asnbyte)'\x72',
  /*1295*/ (asnbyte)'\x61',
  /*1296*/ (asnbyte)'\x6d',
  /*1297*/ (asnbyte)'\x65',
  /*1298*/ (asnbyte)'\x74',
  /*1299*/ (asnbyte)'\x65',
  /*1300*/ (asnbyte)'\x72',
  /*1301*/ (asnbyte)'\x73',
  /*1302*/ (asnbyte)'\x74',
  /*1303*/ (asnbyte)'\x69',
  /*1304*/ (asnbyte)'\x6d',
  /*1305*/ (asnbyte)'\x65',
  /*1306*/ (asnbyte)'\x72',
  /*1307*/ (asnbyte)'\x65',
  /*1308*/ (asnbyte)'\x61',
  /*1309*/ (asnbyte)'\x73',
  /*1310*/ (asnbyte)'\x6f',
  /*1311*/ (asnbyte)'\x6e',
  /*1312*/ (asnbyte)'\x4e',
  /*1313*/ (asnbyte)'\x6f',
  /*1314*/ (asnbyte)'\x74',
  /*1315*/ (asnbyte)'\x69',
  /*1316*/ (asnbyte)'\x66',
  /*1317*/ (asnbyte)'\x69',
  /*1318*/ (asnbyte)'\x63',
  /*1319*/ (asnbyte)'\x61',
  /*1320*/ (asnbyte)'\x74',
  /*1321*/ (asnbyte)'\x69',
  /*1322*/ (asnbyte)'\x6f',
  /*1323*/ (asnbyte)'\x6e',
  /*1324*/ (asnbyte)'\x61',
  /*1325*/ (asnbyte)'\x63',
  /*1326*/ (asnbyte)'\x74',
  /*1327*/ (asnbyte)'\x69',
  /*1328*/ (asnbyte)'\x76',
  /*1329*/ (asnbyte)'\x61',
  /*1330*/ (asnbyte)'\x74',
  /*1331*/ (asnbyte)'\x65',
  /*1332*/ (asnbyte)'\x64',
  /*1333*/ (asnbyte)'\x54',
  /*1334*/ (asnbyte)'\x68',
  /*1335*/ (asnbyte)'\x65',
  /*1336*/ (asnbyte)'\x66',
  /*1337*/ (asnbyte)'\x74',
  /*1338*/ (asnbyte)'\x4e',
  /*1339*/ (asnbyte)'\x6f',
  /*1340*/ (asnbyte)'\x74',
  /*1341*/ (asnbyte)'\x69',
  /*1342*/ (asnbyte)'\x66',
  /*1343*/ (asnbyte)'\x69',
  /*1344*/ (asnbyte)'\x63',
  /*1345*/ (asnbyte)'\x61',
  /*1346*/ (asnbyte)'\x74',
  /*1347*/ (asnbyte)'\x69',
  /*1348*/ (asnbyte)'\x6f',
  /*1349*/ (asnbyte)'\x6e',
  /*1350*/ (asnbyte)'\x45',
  /*1351*/ (asnbyte)'\x43',
  /*1352*/ (asnbyte)'\x55',
  /*1353*/ (asnbyte)'\x44',
  /*1354*/ (asnbyte)'\x69',
  /*1355*/ (asnbyte)'\x61',
  /*1356*/ (asnbyte)'\x67',
  /*1357*/ (asnbyte)'\x6e',
  /*1358*/ (asnbyte)'\x6f',
  /*1359*/ (asnbyte)'\x73',
  /*1360*/ (asnbyte)'\x74',
  /*1361*/ (asnbyte)'\x69',
  /*1362*/ (asnbyte)'\x63',
  /*1363*/ (asnbyte)'\x45',
  /*1364*/ (asnbyte)'\x43',
  /*1365*/ (asnbyte)'\x55',
  /*1366*/ (asnbyte)'\x44',
  /*1367*/ (asnbyte)'\x69',
  /*1368*/ (asnbyte)'\x61',
  /*1369*/ (asnbyte)'\x67',
  /*1370*/ (asnbyte)'\x6e',
  /*1371*/ (asnbyte)'\x6f',
  /*1372*/ (asnbyte)'\x73',
  /*1373*/ (asnbyte)'\x74',
  /*1374*/ (asnbyte)'\x69',
  /*1375*/ (asnbyte)'\x63',
  /*1376*/ (asnbyte)'\x73',
  /*1377*/ (asnbyte)'\x69',
  /*1378*/ (asnbyte)'\x63',
  /*1379*/ (asnbyte)'\x63',
  /*1380*/ (asnbyte)'\x49',
  /*1381*/ (asnbyte)'\x64',
  /*1382*/ (asnbyte)'\x69',
  /*1383*/ (asnbyte)'\x6d',
  /*1384*/ (asnbyte)'\x73',
  /*1385*/ (asnbyte)'\x69',
  /*1386*/ (asnbyte)'\x6d',
  /*1387*/ (asnbyte)'\x73',
  /*1388*/ (asnbyte)'\x69',
  /*1389*/ (asnbyte)'\x73',
  /*1390*/ (asnbyte)'\x64',
  /*1391*/ (asnbyte)'\x6e',
  /*1392*/ (asnbyte)'\x53',
  /*1393*/ (asnbyte)'\x49',
  /*1394*/ (asnbyte)'\x4d',
  /*1395*/ (asnbyte)'\x49',
  /*1396*/ (asnbyte)'\x6e',
  /*1397*/ (asnbyte)'\x66',
  /*1398*/ (asnbyte)'\x6f',
  /*1399*/ (asnbyte)'\x6d',
  /*1400*/ (asnbyte)'\x6f',
  /*1401*/ (asnbyte)'\x62',
  /*1402*/ (asnbyte)'\x69',
  /*1403*/ (asnbyte)'\x6c',
  /*1404*/ (asnbyte)'\x65',
  /*1405*/ (asnbyte)'\x4e',
  /*1406*/ (asnbyte)'\x65',
  /*1407*/ (asnbyte)'\x74',
  /*1408*/ (asnbyte)'\x77',
  /*1409*/ (asnbyte)'\x6f',
  /*1410*/ (asnbyte)'\x72',
  /*1411*/ (asnbyte)'\x6b',
  /*1412*/ (asnbyte)'\x73',
  /*1413*/ (asnbyte)'\x69',
  /*1414*/ (asnbyte)'\x6d',
  /*1415*/ (asnbyte)'\x49',
  /*1416*/ (asnbyte)'\x6e',
  /*1417*/ (asnbyte)'\x66',
  /*1418*/ (asnbyte)'\x6f',
  /*1419*/ (asnbyte)'\x4e',
  /*1420*/ (asnbyte)'\x65',
  /*1421*/ (asnbyte)'\x74',
  /*1422*/ (asnbyte)'\x77',
  /*1423*/ (asnbyte)'\x6f',
  /*1424*/ (asnbyte)'\x72',
  /*1425*/ (asnbyte)'\x6b',
  /*1426*/ (asnbyte)'\x41',
  /*1427*/ (asnbyte)'\x63',
  /*1428*/ (asnbyte)'\x63',
  /*1429*/ (asnbyte)'\x65',
  /*1430*/ (asnbyte)'\x73',
  /*1431*/ (asnbyte)'\x73',
  /*1432*/ (asnbyte)'\x53',
  /*1433*/ (asnbyte)'\x74',
  /*1434*/ (asnbyte)'\x61',
  /*1435*/ (asnbyte)'\x74',
  /*1436*/ (asnbyte)'\x75',
  /*1437*/ (asnbyte)'\x73',
  /*1438*/ (asnbyte)'\x66',
  /*1439*/ (asnbyte)'\x69',
  /*1440*/ (asnbyte)'\x72',
  /*1441*/ (asnbyte)'\x73',
  /*1442*/ (asnbyte)'\x74',
  /*1443*/ (asnbyte)'\x46',
  /*1444*/ (asnbyte)'\x61',
  /*1445*/ (asnbyte)'\x69',
  /*1446*/ (asnbyte)'\x6c',
  /*1447*/ (asnbyte)'\x75',
  /*1448*/ (asnbyte)'\x72',
  /*1449*/ (asnbyte)'\x65',
  /*1450*/ (asnbyte)'\x56',
  /*1451*/ (asnbyte)'\x65',
  /*1452*/ (asnbyte)'\x68',
  /*1453*/ (asnbyte)'\x69',
  /*1454*/ (asnbyte)'\x63',
  /*1455*/ (asnbyte)'\x6c',
  /*1456*/ (asnbyte)'\x65',
  /*1457*/ (asnbyte)'\x53',
  /*1458*/ (asnbyte)'\x70',
  /*1459*/ (asnbyte)'\x65',
  /*1460*/ (asnbyte)'\x65',
  /*1461*/ (asnbyte)'\x64',
  /*1462*/ (asnbyte)'\x66',
  /*1463*/ (asnbyte)'\x69',
  /*1464*/ (asnbyte)'\x72',
  /*1465*/ (asnbyte)'\x73',
  /*1466*/ (asnbyte)'\x74',
  /*1467*/ (asnbyte)'\x46',
  /*1468*/ (asnbyte)'\x61',
  /*1469*/ (asnbyte)'\x69',
  /*1470*/ (asnbyte)'\x6c',
  /*1471*/ (asnbyte)'\x75',
  /*1472*/ (asnbyte)'\x72',
  /*1473*/ (asnbyte)'\x65',
  /*1474*/ (asnbyte)'\x42',
  /*1475*/ (asnbyte)'\x61',
  /*1476*/ (asnbyte)'\x74',
  /*1477*/ (asnbyte)'\x74',
  /*1478*/ (asnbyte)'\x65',
  /*1479*/ (asnbyte)'\x72',
  /*1480*/ (asnbyte)'\x79',
  /*1481*/ (asnbyte)'\x56',
  /*1482*/ (asnbyte)'\x6f',
  /*1483*/ (asnbyte)'\x6c',
  /*1484*/ (asnbyte)'\x74',
  /*1485*/ (asnbyte)'\x61',
  /*1486*/ (asnbyte)'\x67',
  /*1487*/ (asnbyte)'\x65',
  /*1488*/ (asnbyte)'\x66',
  /*1489*/ (asnbyte)'\x69',
  /*1490*/ (asnbyte)'\x72',
  /*1491*/ (asnbyte)'\x73',
  /*1492*/ (asnbyte)'\x74',
  /*1493*/ (asnbyte)'\x46',
  /*1494*/ (asnbyte)'\x61',
  /*1495*/ (asnbyte)'\x69',
  /*1496*/ (asnbyte)'\x6c',
  /*1497*/ (asnbyte)'\x75',
  /*1498*/ (asnbyte)'\x72',
  /*1499*/ (asnbyte)'\x65',
  /*1500*/ (asnbyte)'\x4f',
  /*1501*/ (asnbyte)'\x64',
  /*1502*/ (asnbyte)'\x6f',
  /*1503*/ (asnbyte)'\x6d',
  /*1504*/ (asnbyte)'\x65',
  /*1505*/ (asnbyte)'\x74',
  /*1506*/ (asnbyte)'\x65',
  /*1507*/ (asnbyte)'\x72',
  /*1508*/ (asnbyte)'\x66',
  /*1509*/ (asnbyte)'\x69',
  /*1510*/ (asnbyte)'\x72',
  /*1511*/ (asnbyte)'\x74',
  /*1512*/ (asnbyte)'\x46',
  /*1513*/ (asnbyte)'\x61',
  /*1514*/ (asnbyte)'\x69',
  /*1515*/ (asnbyte)'\x6c',
  /*1516*/ (asnbyte)'\x6c',
  /*1517*/ (asnbyte)'\x61',
  /*1518*/ (asnbyte)'\x73',
  /*1519*/ (asnbyte)'\x74',
  /*1520*/ (asnbyte)'\x46',
  /*1521*/ (asnbyte)'\x61',
  /*1522*/ (asnbyte)'\x69',
  /*1523*/ (asnbyte)'\x6c',
  /*1524*/ (asnbyte)'\x66',
  /*1525*/ (asnbyte)'\x61',
  /*1526*/ (asnbyte)'\x69',
  /*1527*/ (asnbyte)'\x6c',
  /*1528*/ (asnbyte)'\x75',
  /*1529*/ (asnbyte)'\x72',
  /*1530*/ (asnbyte)'\x65',
  /*1531*/ (asnbyte)'\x43',
  /*1532*/ (asnbyte)'\x6f',
  /*1533*/ (asnbyte)'\x75',
  /*1534*/ (asnbyte)'\x6e',
  /*1535*/ (asnbyte)'\x74',
  /*1536*/ (asnbyte)'\x73',
  /*1537*/ (asnbyte)'\x74',
  /*1538*/ (asnbyte)'\x61',
  /*1539*/ (asnbyte)'\x74',
  /*1540*/ (asnbyte)'\x75',
  /*1541*/ (asnbyte)'\x73',
  /*1542*/ (asnbyte)'\x64',
  /*1543*/ (asnbyte)'\x74',
  /*1544*/ (asnbyte)'\x63',
  /*1545*/ (asnbyte)'\x44',
  /*1546*/ (asnbyte)'\x69',
  /*1547*/ (asnbyte)'\x61',
  /*1548*/ (asnbyte)'\x67',
  /*1549*/ (asnbyte)'\x6e',
  /*1550*/ (asnbyte)'\x6f',
  /*1551*/ (asnbyte)'\x73',
  /*1552*/ (asnbyte)'\x74',
  /*1553*/ (asnbyte)'\x69',
  /*1554*/ (asnbyte)'\x63',
  /*1555*/ (asnbyte)'\x54',
  /*1556*/ (asnbyte)'\x72',
  /*1557*/ (asnbyte)'\x6f',
  /*1558*/ (asnbyte)'\x75',
  /*1559*/ (asnbyte)'\x62',
  /*1560*/ (asnbyte)'\x6c',
  /*1561*/ (asnbyte)'\x65',
  /*1562*/ (asnbyte)'\x43',
  /*1563*/ (asnbyte)'\x6f',
  /*1564*/ (asnbyte)'\x64',
  /*1565*/ (asnbyte)'\x65',
  /*1566*/ (asnbyte)'\x65',
  /*1567*/ (asnbyte)'\x78',
  /*1568*/ (asnbyte)'\x63',
  /*1569*/ (asnbyte)'\x65',
  /*1570*/ (asnbyte)'\x70',
  /*1571*/ (asnbyte)'\x74',
  /*1572*/ (asnbyte)'\x69',
  /*1573*/ (asnbyte)'\x6f',
  /*1574*/ (asnbyte)'\x6e',
  /*1575*/ (asnbyte)'\x43',
  /*1576*/ (asnbyte)'\x6f',
  /*1577*/ (asnbyte)'\x64',
  /*1578*/ (asnbyte)'\x65',
  /*1579*/ (asnbyte)'\x64',
  /*1580*/ (asnbyte)'\x74',
  /*1581*/ (asnbyte)'\x63',
  /*1582*/ (asnbyte)'\x73',
  /*1583*/ (asnbyte)'\x64',
  /*1584*/ (asnbyte)'\x69',
  /*1585*/ (asnbyte)'\x61',
  /*1586*/ (asnbyte)'\x67',
  /*1587*/ (asnbyte)'\x6e',
  /*1588*/ (asnbyte)'\x6f',
  /*1589*/ (asnbyte)'\x73',
  /*1590*/ (asnbyte)'\x74',
  /*1591*/ (asnbyte)'\x69',
  /*1592*/ (asnbyte)'\x63',
  /*1593*/ (asnbyte)'\x52',
  /*1594*/ (asnbyte)'\x65',
  /*1595*/ (asnbyte)'\x73',
  /*1596*/ (asnbyte)'\x75',
  /*1597*/ (asnbyte)'\x6c',
  /*1598*/ (asnbyte)'\x74',
  /*1599*/ (asnbyte)'\x65',
  /*1600*/ (asnbyte)'\x63',
  /*1601*/ (asnbyte)'\x75',
  /*1602*/ (asnbyte)'\x49',
  /*1603*/ (asnbyte)'\x44',
  /*1604*/ (asnbyte)'\x6f',
  /*1605*/ (asnbyte)'\x66',
  /*1606*/ (asnbyte)'\x66',
  /*1607*/ (asnbyte)'\x73',
  /*1608*/ (asnbyte)'\x6c',
  /*1609*/ (asnbyte)'\x65',
  /*1610*/ (asnbyte)'\x65',
  /*1611*/ (asnbyte)'\x70',
  /*1612*/ (asnbyte)'\x2d',
  /*1613*/ (asnbyte)'\x70',
  /*1614*/ (asnbyte)'\x6f',
  /*1615*/ (asnbyte)'\x6c',
  /*1616*/ (asnbyte)'\x6c',
  /*1617*/ (asnbyte)'\x73',
  /*1618*/ (asnbyte)'\x74',
  /*1619*/ (asnbyte)'\x61',
  /*1620*/ (asnbyte)'\x6e',
  /*1621*/ (asnbyte)'\x64',
  /*1622*/ (asnbyte)'\x62',
  /*1623*/ (asnbyte)'\x79',
  /*1624*/ (asnbyte)'\x6e',
  /*1625*/ (asnbyte)'\x6f',
  /*1626*/ (asnbyte)'\x72',
  /*1627*/ (asnbyte)'\x6d',
  /*1628*/ (asnbyte)'\x61',
  /*1629*/ (asnbyte)'\x6c',
  /*1630*/ (asnbyte)'\x6d',
  /*1631*/ (asnbyte)'\x63',
  /*1632*/ (asnbyte)'\x75',
  /*1633*/ (asnbyte)'\x56',
  /*1634*/ (asnbyte)'\x65',
  /*1635*/ (asnbyte)'\x72',
  /*1636*/ (asnbyte)'\x73',
  /*1637*/ (asnbyte)'\x69',
  /*1638*/ (asnbyte)'\x6f',
  /*1639*/ (asnbyte)'\x6e',
  /*1640*/ (asnbyte)'\x6d',
  /*1641*/ (asnbyte)'\x70',
  /*1642*/ (asnbyte)'\x75',
  /*1643*/ (asnbyte)'\x56',
  /*1644*/ (asnbyte)'\x65',
  /*1645*/ (asnbyte)'\x72',
  /*1646*/ (asnbyte)'\x73',
  /*1647*/ (asnbyte)'\x69',
  /*1648*/ (asnbyte)'\x6f',
  /*1649*/ (asnbyte)'\x6e',
  /*1650*/ (asnbyte)'\x68',
  /*1651*/ (asnbyte)'\x77',
  /*1652*/ (asnbyte)'\x56',
  /*1653*/ (asnbyte)'\x65',
  /*1654*/ (asnbyte)'\x72',
  /*1655*/ (asnbyte)'\x73',
  /*1656*/ (asnbyte)'\x69',
  /*1657*/ (asnbyte)'\x6f',
  /*1658*/ (asnbyte)'\x6e',
  /*1659*/ (asnbyte)'\x69',
  /*1660*/ (asnbyte)'\x6d',
  /*1661*/ (asnbyte)'\x65',
  /*1662*/ (asnbyte)'\x69',
  /*1663*/ (asnbyte)'\x63',
  /*1664*/ (asnbyte)'\x6f',
  /*1665*/ (asnbyte)'\x6d',
  /*1666*/ (asnbyte)'\x70',
  /*1667*/ (asnbyte)'\x6c',
  /*1668*/ (asnbyte)'\x65',
  /*1669*/ (asnbyte)'\x74',
  /*1670*/ (asnbyte)'\x65',
  /*1671*/ (asnbyte)'\x45',
  /*1672*/ (asnbyte)'\x43',
  /*1673*/ (asnbyte)'\x55',
  /*1674*/ (asnbyte)'\x50',
  /*1675*/ (asnbyte)'\x61',
  /*1676*/ (asnbyte)'\x72',
  /*1677*/ (asnbyte)'\x74',
  /*1678*/ (asnbyte)'\x4e',
  /*1679*/ (asnbyte)'\x75',
  /*1680*/ (asnbyte)'\x6d',
  /*1681*/ (asnbyte)'\x62',
  /*1682*/ (asnbyte)'\x65',
  /*1683*/ (asnbyte)'\x72',
  /*1684*/ (asnbyte)'\x73',
  /*1685*/ (asnbyte)'\x73',
  /*1686*/ (asnbyte)'\x65',
  /*1687*/ (asnbyte)'\x72',
  /*1688*/ (asnbyte)'\x69',
  /*1689*/ (asnbyte)'\x61',
  /*1690*/ (asnbyte)'\x6c',
  /*1691*/ (asnbyte)'\x4e',
  /*1692*/ (asnbyte)'\x75',
  /*1693*/ (asnbyte)'\x6d',
  /*1694*/ (asnbyte)'\x62',
  /*1695*/ (asnbyte)'\x65',
  /*1696*/ (asnbyte)'\x72',
  /*1697*/ (asnbyte)'\x6e',
  /*1698*/ (asnbyte)'\x65',
  /*1699*/ (asnbyte)'\x74',
  /*1700*/ (asnbyte)'\x77',
  /*1701*/ (asnbyte)'\x6f',
  /*1702*/ (asnbyte)'\x72',
  /*1703*/ (asnbyte)'\x6b',
  /*1704*/ (asnbyte)'\x41',
  /*1705*/ (asnbyte)'\x63',
  /*1706*/ (asnbyte)'\x63',
  /*1707*/ (asnbyte)'\x65',
  /*1708*/ (asnbyte)'\x73',
  /*1709*/ (asnbyte)'\x73',
  /*1710*/ (asnbyte)'\x53',
  /*1711*/ (asnbyte)'\x74',
  /*1712*/ (asnbyte)'\x61',
  /*1713*/ (asnbyte)'\x74',
  /*1714*/ (asnbyte)'\x75',
  /*1715*/ (asnbyte)'\x73',
  /*1716*/ (asnbyte)'\x64',
  /*1717*/ (asnbyte)'\x69',
  /*1718*/ (asnbyte)'\x61',
  /*1719*/ (asnbyte)'\x67',
  /*1720*/ (asnbyte)'\x6e',
  /*1721*/ (asnbyte)'\x6f',
  /*1722*/ (asnbyte)'\x73',
  /*1723*/ (asnbyte)'\x74',
  /*1724*/ (asnbyte)'\x69',
  /*1725*/ (asnbyte)'\x63',
  /*1726*/ (asnbyte)'\x73',
  /*1727*/ (asnbyte)'\x68',
  /*1728*/ (asnbyte)'\x65',
  /*1729*/ (asnbyte)'\x61',
  /*1730*/ (asnbyte)'\x6c',
  /*1731*/ (asnbyte)'\x74',
  /*1732*/ (asnbyte)'\x68',
  /*1733*/ (asnbyte)'\x53',
  /*1734*/ (asnbyte)'\x74',
  /*1735*/ (asnbyte)'\x61',
  /*1736*/ (asnbyte)'\x74',
  /*1737*/ (asnbyte)'\x75',
  /*1738*/ (asnbyte)'\x73',
  /*1739*/ (asnbyte)'\x73',
  /*1740*/ (asnbyte)'\x65',
  /*1741*/ (asnbyte)'\x72',
  /*1742*/ (asnbyte)'\x76',
  /*1743*/ (asnbyte)'\x69',
  /*1744*/ (asnbyte)'\x63',
  /*1745*/ (asnbyte)'\x65',
  /*1746*/ (asnbyte)'\x50',
  /*1747*/ (asnbyte)'\x72',
  /*1748*/ (asnbyte)'\x6f',
  /*1749*/ (asnbyte)'\x76',
  /*1750*/ (asnbyte)'\x69',
  /*1751*/ (asnbyte)'\x73',
  /*1752*/ (asnbyte)'\x6f',
  /*1753*/ (asnbyte)'\x6e',
  /*1754*/ (asnbyte)'\x65',
  /*1755*/ (asnbyte)'\x64',
  /*1756*/ (asnbyte)'\x73',
  /*1757*/ (asnbyte)'\x6c',
  /*1758*/ (asnbyte)'\x65',
  /*1759*/ (asnbyte)'\x65',
  /*1760*/ (asnbyte)'\x70',
  /*1761*/ (asnbyte)'\x43',
  /*1762*/ (asnbyte)'\x79',
  /*1763*/ (asnbyte)'\x63',
  /*1764*/ (asnbyte)'\x6c',
  /*1765*/ (asnbyte)'\x65',
  /*1766*/ (asnbyte)'\x4e',
  /*1767*/ (asnbyte)'\x65',
  /*1768*/ (asnbyte)'\x78',
  /*1769*/ (asnbyte)'\x74',
  /*1770*/ (asnbyte)'\x57',
  /*1771*/ (asnbyte)'\x61',
  /*1772*/ (asnbyte)'\x6b',
  /*1773*/ (asnbyte)'\x65',
  /*1774*/ (asnbyte)'\x75',
  /*1775*/ (asnbyte)'\x70',
  /*1776*/ (asnbyte)'\x54',
  /*1777*/ (asnbyte)'\x69',
  /*1778*/ (asnbyte)'\x6d',
  /*1779*/ (asnbyte)'\x65',
  /*1780*/ (asnbyte)'\x70',
  /*1781*/ (asnbyte)'\x6f',
  /*1782*/ (asnbyte)'\x77',
  /*1783*/ (asnbyte)'\x65',
  /*1784*/ (asnbyte)'\x72',
  /*1785*/ (asnbyte)'\x4d',
  /*1786*/ (asnbyte)'\x6f',
  /*1787*/ (asnbyte)'\x64',
  /*1788*/ (asnbyte)'\x65',
  /*1789*/ (asnbyte)'\x62',
  /*1790*/ (asnbyte)'\x61',
  /*1791*/ (asnbyte)'\x63',
  /*1792*/ (asnbyte)'\x6b',
  /*1793*/ (asnbyte)'\x75',
  /*1794*/ (asnbyte)'\x70',
  /*1795*/ (asnbyte)'\x42',
  /*1796*/ (asnbyte)'\x61',
  /*1797*/ (asnbyte)'\x74',
  /*1798*/ (asnbyte)'\x74',
  /*1799*/ (asnbyte)'\x65',
  /*1800*/ (asnbyte)'\x72',
  /*1801*/ (asnbyte)'\x79',
  /*1802*/ (asnbyte)'\x70',
  /*1803*/ (asnbyte)'\x6f',
  /*1804*/ (asnbyte)'\x77',
  /*1805*/ (asnbyte)'\x65',
  /*1806*/ (asnbyte)'\x72',
  /*1807*/ (asnbyte)'\x53',
  /*1808*/ (asnbyte)'\x6f',
  /*1809*/ (asnbyte)'\x75',
  /*1810*/ (asnbyte)'\x72',
  /*1811*/ (asnbyte)'\x63',
  /*1812*/ (asnbyte)'\x65',
  /*1813*/ (asnbyte)'\x76',
  /*1814*/ (asnbyte)'\x69',
  /*1815*/ (asnbyte)'\x6e',
  /*1816*/ (asnbyte)'\x54',
  /*1817*/ (asnbyte)'\x45',
  /*1818*/ (asnbyte)'\x4d',
  /*1819*/ (asnbyte)'\x53',
  /*1820*/ (asnbyte)'\x74',
  /*1821*/ (asnbyte)'\x61',
  /*1822*/ (asnbyte)'\x74',
  /*1823*/ (asnbyte)'\x75',
  /*1824*/ (asnbyte)'\x73',
  /*1825*/ (asnbyte)'\x47',
  /*1826*/ (asnbyte)'\x65',
  /*1827*/ (asnbyte)'\x6e',
  /*1828*/ (asnbyte)'\x65',
  /*1829*/ (asnbyte)'\x72',
  /*1830*/ (asnbyte)'\x69',
  /*1831*/ (asnbyte)'\x63',
  /*1832*/ (asnbyte)'\x56',
  /*1833*/ (asnbyte)'\x65',
  /*1834*/ (asnbyte)'\x68',
  /*1835*/ (asnbyte)'\x69',
  /*1836*/ (asnbyte)'\x63',
  /*1837*/ (asnbyte)'\x6c',
  /*1838*/ (asnbyte)'\x65',
  /*1839*/ (asnbyte)'\x53',
  /*1840*/ (asnbyte)'\x69',
  /*1841*/ (asnbyte)'\x67',
  /*1842*/ (asnbyte)'\x6e',
  /*1843*/ (asnbyte)'\x61',
  /*1844*/ (asnbyte)'\x6c',
  /*1845*/ (asnbyte)'\x73',
  /*1846*/ (asnbyte)'\x69',
  /*1847*/ (asnbyte)'\x67',
  /*1848*/ (asnbyte)'\x6e',
  /*1849*/ (asnbyte)'\x61',
  /*1850*/ (asnbyte)'\x6c',
  /*1851*/ (asnbyte)'\x73',
  /*1852*/ (asnbyte)'\x73',
  /*1853*/ (asnbyte)'\x70',
  /*1854*/ (asnbyte)'\x65',
  /*1855*/ (asnbyte)'\x65',
  /*1856*/ (asnbyte)'\x64',
  /*1857*/ (asnbyte)'\x56',
  /*1858*/ (asnbyte)'\x61',
  /*1859*/ (asnbyte)'\x6c',
  /*1860*/ (asnbyte)'\x69',
  /*1861*/ (asnbyte)'\x64',
  /*1862*/ (asnbyte)'\x69',
  /*1863*/ (asnbyte)'\x74',
  /*1864*/ (asnbyte)'\x79',
  /*1865*/ (asnbyte)'\x72',
  /*1866*/ (asnbyte)'\x65',
  /*1867*/ (asnbyte)'\x63',
  /*1868*/ (asnbyte)'\x65',
  /*1869*/ (asnbyte)'\x6e',
  /*1870*/ (asnbyte)'\x74',
  /*1871*/ (asnbyte)'\x50',
  /*1872*/ (asnbyte)'\x6f',
  /*1873*/ (asnbyte)'\x73',
  /*1874*/ (asnbyte)'\x69',
  /*1875*/ (asnbyte)'\x74',
  /*1876*/ (asnbyte)'\x69',
  /*1877*/ (asnbyte)'\x6f',
  /*1878*/ (asnbyte)'\x6e',
  /*1879*/ (asnbyte)'\x73',
  /*1880*/ (asnbyte)'\x6e',
  /*1881*/ (asnbyte)'\x75',
  /*1882*/ (asnbyte)'\x6d',
  /*1883*/ (asnbyte)'\x62',
  /*1884*/ (asnbyte)'\x65',
  /*1885*/ (asnbyte)'\x72',
  /*1886*/ (asnbyte)'\x4f',
  /*1887*/ (asnbyte)'\x66',
  /*1888*/ (asnbyte)'\x50',
  /*1889*/ (asnbyte)'\x61',
  /*1890*/ (asnbyte)'\x73',
  /*1891*/ (asnbyte)'\x73',
  /*1892*/ (asnbyte)'\x65',
  /*1893*/ (asnbyte)'\x6e',
  /*1894*/ (asnbyte)'\x67',
  /*1895*/ (asnbyte)'\x65',
  /*1896*/ (asnbyte)'\x72',
  /*1897*/ (asnbyte)'\x73',
  /*1898*/ (asnbyte)'\x66',
  /*1899*/ (asnbyte)'\x75',
  /*1900*/ (asnbyte)'\x65',
  /*1901*/ (asnbyte)'\x6c',
  /*1902*/ (asnbyte)'\x54',
  /*1903*/ (asnbyte)'\x79',
  /*1904*/ (asnbyte)'\x70',
  /*1905*/ (asnbyte)'\x65',
  /*1906*/ (asnbyte)'\x76',
  /*1907*/ (asnbyte)'\x65',
  /*1908*/ (asnbyte)'\x68',
  /*1909*/ (asnbyte)'\x69',
  /*1910*/ (asnbyte)'\x63',
  /*1911*/ (asnbyte)'\x6c',
  /*1912*/ (asnbyte)'\x65',
  /*1913*/ (asnbyte)'\x54',
  /*1914*/ (asnbyte)'\x79',
  /*1915*/ (asnbyte)'\x70',
  /*1916*/ (asnbyte)'\x65',
  /*1917*/ (asnbyte)'\x74',
  /*1918*/ (asnbyte)'\x65',
  /*1919*/ (asnbyte)'\x73',
  /*1920*/ (asnbyte)'\x74',
  /*1921*/ (asnbyte)'\x43',
  /*1922*/ (asnbyte)'\x61',
  /*1923*/ (asnbyte)'\x6c',
  /*1924*/ (asnbyte)'\x6c',
  /*1925*/ (asnbyte)'\x61',
  /*1926*/ (asnbyte)'\x75',
  /*1927*/ (asnbyte)'\x74',
  /*1928*/ (asnbyte)'\x6f',
  /*1929*/ (asnbyte)'\x6d',
  /*1930*/ (asnbyte)'\x61',
  /*1931*/ (asnbyte)'\x74',
  /*1932*/ (asnbyte)'\x69',
  /*1933*/ (asnbyte)'\x63',
  /*1934*/ (asnbyte)'\x41',
  /*1935*/ (asnbyte)'\x63',
  /*1936*/ (asnbyte)'\x74',
  /*1937*/ (asnbyte)'\x69',
  /*1938*/ (asnbyte)'\x76',
  /*1939*/ (asnbyte)'\x61',
  /*1940*/ (asnbyte)'\x74',
  /*1941*/ (asnbyte)'\x69',
  /*1942*/ (asnbyte)'\x6f',
  /*1943*/ (asnbyte)'\x6e',
  /*1944*/ (asnbyte)'\x4f',
  /*1945*/ (asnbyte)'\x45',
  /*1946*/ (asnbyte)'\x4d',
  /*1947*/ (asnbyte)'\x4d',
  /*1948*/ (asnbyte)'\x53',
  /*1949*/ (asnbyte)'\x44',
  /*1950*/ (asnbyte)'\x68',
  /*1951*/ (asnbyte)'\x65',
  /*1952*/ (asnbyte)'\x61',
  /*1953*/ (asnbyte)'\x74',
  /*1954*/ (asnbyte)'\x65',
  /*1955*/ (asnbyte)'\x64',
  /*1956*/ (asnbyte)'\x53',
  /*1957*/ (asnbyte)'\x74',
  /*1958*/ (asnbyte)'\x65',
  /*1959*/ (asnbyte)'\x65',
  /*1960*/ (asnbyte)'\x72',
  /*1961*/ (asnbyte)'\x69',
  /*1962*/ (asnbyte)'\x6e',
  /*1963*/ (asnbyte)'\x67',
  /*1964*/ (asnbyte)'\x57',
  /*1965*/ (asnbyte)'\x68',
  /*1966*/ (asnbyte)'\x65',
  /*1967*/ (asnbyte)'\x65',
  /*1968*/ (asnbyte)'\x6c',
  /*1969*/ (asnbyte)'\x70',
  /*1970*/ (asnbyte)'\x61',
  /*1971*/ (asnbyte)'\x72',
  /*1972*/ (asnbyte)'\x6b',
  /*1973*/ (asnbyte)'\x69',
  /*1974*/ (asnbyte)'\x6e',
  /*1975*/ (asnbyte)'\x67',
  /*1976*/ (asnbyte)'\x43',
  /*1977*/ (asnbyte)'\x6c',
  /*1978*/ (asnbyte)'\x69',
  /*1979*/ (asnbyte)'\x6d',
  /*1980*/ (asnbyte)'\x61',
  /*1981*/ (asnbyte)'\x74',
  /*1982*/ (asnbyte)'\x65',
  /*1983*/ (asnbyte)'\x4c',
  /*1984*/ (asnbyte)'\x65',
  /*1985*/ (asnbyte)'\x76',
  /*1986*/ (asnbyte)'\x65',
  /*1987*/ (asnbyte)'\x6c',
  /*1988*/ (asnbyte)'\x68',
  /*1989*/ (asnbyte)'\x65',
  /*1990*/ (asnbyte)'\x61',
  /*1991*/ (asnbyte)'\x74',
  /*1992*/ (asnbyte)'\x65',
  /*1993*/ (asnbyte)'\x64',
  /*1994*/ (asnbyte)'\x46',
  /*1995*/ (asnbyte)'\x72',
  /*1996*/ (asnbyte)'\x6f',
  /*1997*/ (asnbyte)'\x6e',
  /*1998*/ (asnbyte)'\x74',
  /*1999*/ (asnbyte)'\x53',
  /*2000*/ (asnbyte)'\x65',
  /*2001*/ (asnbyte)'\x61',
  /*2002*/ (asnbyte)'\x74',
  /*2003*/ (asnbyte)'\x73',
  /*2004*/ (asnbyte)'\x43',
  /*2005*/ (asnbyte)'\x61',
  /*2006*/ (asnbyte)'\x72',
  /*2007*/ (asnbyte)'\x43',
  /*2008*/ (asnbyte)'\x6f',
  /*2009*/ (asnbyte)'\x6e',
  /*2010*/ (asnbyte)'\x66',
  /*2011*/ (asnbyte)'\x69',
  /*2012*/ (asnbyte)'\x67',
  /*2013*/ (asnbyte)'\x63',
  /*2014*/ (asnbyte)'\x68',
  /*2015*/ (asnbyte)'\x61',
  /*2016*/ (asnbyte)'\x72',
  /*2017*/ (asnbyte)'\x67',
  /*2018*/ (asnbyte)'\x65',
  /*2019*/ (asnbyte)'\x53',
  /*2020*/ (asnbyte)'\x74',
  /*2021*/ (asnbyte)'\x73',
  /*2022*/ (asnbyte)'\x61',
  /*2023*/ (asnbyte)'\x76',
  /*2024*/ (asnbyte)'\x65',
  /*2025*/ (asnbyte)'\x72',
  /*2026*/ (asnbyte)'\x50',
  /*2027*/ (asnbyte)'\x6f',
  /*2028*/ (asnbyte)'\x77',
  /*2029*/ (asnbyte)'\x65',
  /*2030*/ (asnbyte)'\x72',
  /*2031*/ (asnbyte)'\x43',
  /*2032*/ (asnbyte)'\x6f',
  /*2033*/ (asnbyte)'\x6e',
  /*2034*/ (asnbyte)'\x73',
  /*2035*/ (asnbyte)'\x75',
  /*2036*/ (asnbyte)'\x6d',
  /*2037*/ (asnbyte)'\x70',
  /*2038*/ (asnbyte)'\x74',
  /*2039*/ (asnbyte)'\x69',
  /*2040*/ (asnbyte)'\x6f',
  /*2041*/ (asnbyte)'\x6e',
  /*2042*/ (asnbyte)'\x70',
  /*2043*/ (asnbyte)'\x74',
  /*2044*/ (asnbyte)'\x52',
  /*2045*/ (asnbyte)'\x65',
  /*2046*/ (asnbyte)'\x61',
  /*2047*/ (asnbyte)'\x64',
  /*2048*/ (asnbyte)'\x79',
  /*2049*/ (asnbyte)'\x63',
  /*2050*/ (asnbyte)'\x68',
  /*2051*/ (asnbyte)'\x61',
  /*2052*/ (asnbyte)'\x72',
  /*2053*/ (asnbyte)'\x67',
  /*2054*/ (asnbyte)'\x65',
  /*2055*/ (asnbyte)'\x48',
  /*2056*/ (asnbyte)'\x76',
  /*2057*/ (asnbyte)'\x53',
  /*2058*/ (asnbyte)'\x74',
  /*2059*/ (asnbyte)'\x73',
  /*2060*/ (asnbyte)'\x65',
  /*2061*/ (asnbyte)'\x6d',
  /*2062*/ (asnbyte)'\x73',
  /*2063*/ (asnbyte)'\x43',
  /*2064*/ (asnbyte)'\x42',
  /*2065*/ (asnbyte)'\x52',
  /*2066*/ (asnbyte)'\x65',
  /*2067*/ (asnbyte)'\x6d',
  /*2068*/ (asnbyte)'\x61',
  /*2069*/ (asnbyte)'\x69',
  /*2070*/ (asnbyte)'\x6e',
  /*2071*/ (asnbyte)'\x69',
  /*2072*/ (asnbyte)'\x6e',
  /*2073*/ (asnbyte)'\x67',
  /*2074*/ (asnbyte)'\x4c',
  /*2075*/ (asnbyte)'\x69',
  /*2076*/ (asnbyte)'\x66',
  /*2077*/ (asnbyte)'\x65',
  /*2078*/ (asnbyte)'\x65',
  /*2079*/ (asnbyte)'\x6d',
  /*2080*/ (asnbyte)'\x73',
  /*2081*/ (asnbyte)'\x42',
  /*2082*/ (asnbyte)'\x4d',
  /*2083*/ (asnbyte)'\x53',
  /*2084*/ (asnbyte)'\x4c',
  /*2085*/ (asnbyte)'\x42',
  /*2086*/ (asnbyte)'\x75',
  /*2087*/ (asnbyte)'\x69',
  /*2088*/ (asnbyte)'\x6c',
  /*2089*/ (asnbyte)'\x64',
  /*2090*/ (asnbyte)'\x53',
  /*2091*/ (asnbyte)'\x77',
  /*2092*/ (asnbyte)'\x56',
  /*2093*/ (asnbyte)'\x65',
  /*2094*/ (asnbyte)'\x72',
  /*2095*/ (asnbyte)'\x73',
  /*2096*/ (asnbyte)'\x69',
  /*2097*/ (asnbyte)'\x6f',
  /*2098*/ (asnbyte)'\x6e',
  /*2099*/ (asnbyte)'\x65',
  /*2100*/ (asnbyte)'\x6d',
  /*2101*/ (asnbyte)'\x73',
  /*2102*/ (asnbyte)'\x34',
  /*2103*/ (asnbyte)'\x38',
  /*2104*/ (asnbyte)'\x76',
  /*2105*/ (asnbyte)'\x50',
  /*2106*/ (asnbyte)'\x61',
  /*2107*/ (asnbyte)'\x63',
  /*2108*/ (asnbyte)'\x6b',
  /*2109*/ (asnbyte)'\x54',
  /*2110*/ (asnbyte)'\x65',
  /*2111*/ (asnbyte)'\x6d',
  /*2112*/ (asnbyte)'\x70',
  /*2113*/ (asnbyte)'\x32',
  /*2114*/ (asnbyte)'\x65',
  /*2115*/ (asnbyte)'\x6d',
  /*2116*/ (asnbyte)'\x73',
  /*2117*/ (asnbyte)'\x34',
  /*2118*/ (asnbyte)'\x38',
  /*2119*/ (asnbyte)'\x76',
  /*2120*/ (asnbyte)'\x50',
  /*2121*/ (asnbyte)'\x61',
  /*2122*/ (asnbyte)'\x63',
  /*2123*/ (asnbyte)'\x6b',
  /*2124*/ (asnbyte)'\x54',
  /*2125*/ (asnbyte)'\x65',
  /*2126*/ (asnbyte)'\x6d',
  /*2127*/ (asnbyte)'\x70',
  /*2128*/ (asnbyte)'\x31',
  /*2129*/ (asnbyte)'\x65',
  /*2130*/ (asnbyte)'\x6d',
  /*2131*/ (asnbyte)'\x73',
  /*2132*/ (asnbyte)'\x4f',
  /*2133*/ (asnbyte)'\x56',
  /*2134*/ (asnbyte)'\x50',
  /*2135*/ (asnbyte)'\x41',
  /*2136*/ (asnbyte)'\x63',
  /*2137*/ (asnbyte)'\x74',
  /*2138*/ (asnbyte)'\x69',
  /*2139*/ (asnbyte)'\x76',
  /*2140*/ (asnbyte)'\x65',
  /*2141*/ (asnbyte)'\x65',
  /*2142*/ (asnbyte)'\x6d',
  /*2143*/ (asnbyte)'\x73',
  /*2144*/ (asnbyte)'\x52',
  /*2145*/ (asnbyte)'\x42',
  /*2146*/ (asnbyte)'\x53',
  /*2147*/ (asnbyte)'\x4d',
  /*2148*/ (asnbyte)'\x6f',
  /*2149*/ (asnbyte)'\x64',
  /*2150*/ (asnbyte)'\x65',
  /*2151*/ (asnbyte)'\x44',
  /*2152*/ (asnbyte)'\x69',
  /*2153*/ (asnbyte)'\x73',
  /*2154*/ (asnbyte)'\x70',
  /*2155*/ (asnbyte)'\x6c',
  /*2156*/ (asnbyte)'\x61',
  /*2157*/ (asnbyte)'\x79',
  /*2158*/ (asnbyte)'\x65',
  /*2159*/ (asnbyte)'\x6d',
  /*2160*/ (asnbyte)'\x73',
  /*2161*/ (asnbyte)'\x48',
  /*2162*/ (asnbyte)'\x56',
  /*2163*/ (asnbyte)'\x52',
  /*2164*/ (asnbyte)'\x42',
  /*2165*/ (asnbyte)'\x53',
  /*2166*/ (asnbyte)'\x45',
  /*2167*/ (asnbyte)'\x72',
  /*2168*/ (asnbyte)'\x72',
  /*2169*/ (asnbyte)'\x6f',
  /*2170*/ (asnbyte)'\x72',
  /*2171*/ (asnbyte)'\x65',
  /*2172*/ (asnbyte)'\x6d',
  /*2173*/ (asnbyte)'\x73',
  /*2174*/ (asnbyte)'\x34',
  /*2175*/ (asnbyte)'\x38',
  /*2176*/ (asnbyte)'\x56',
  /*2177*/ (asnbyte)'\x53',
  /*2178*/ (asnbyte)'\x4f',
  /*2179*/ (asnbyte)'\x43',
  /*2180*/ (asnbyte)'\x64',
  /*2181*/ (asnbyte)'\x69',
  /*2182*/ (asnbyte)'\x73',
  /*2183*/ (asnbyte)'\x74',
  /*2184*/ (asnbyte)'\x61',
  /*2185*/ (asnbyte)'\x6e',
  /*2186*/ (asnbyte)'\x63',
  /*2187*/ (asnbyte)'\x65',
  /*2188*/ (asnbyte)'\x54',
  /*2189*/ (asnbyte)'\x6f',
  /*2190*/ (asnbyte)'\x45',
  /*2191*/ (asnbyte)'\x6d',
  /*2192*/ (asnbyte)'\x70',
  /*2193*/ (asnbyte)'\x74',
  /*2194*/ (asnbyte)'\x79',
  /*2195*/ (asnbyte)'\x4f',
  /*2196*/ (asnbyte)'\x6e',
  /*2197*/ (asnbyte)'\x42',
  /*2198*/ (asnbyte)'\x61',
  /*2199*/ (asnbyte)'\x74',
  /*2200*/ (asnbyte)'\x74',
  /*2201*/ (asnbyte)'\x65',
  /*2202*/ (asnbyte)'\x72',
  /*2203*/ (asnbyte)'\x79',
  /*2204*/ (asnbyte)'\x4f',
  /*2205*/ (asnbyte)'\x6e',
  /*2206*/ (asnbyte)'\x6c',
  /*2207*/ (asnbyte)'\x79',
  /*2208*/ (asnbyte)'\x63',
  /*2209*/ (asnbyte)'\x68',
  /*2210*/ (asnbyte)'\x61',
  /*2211*/ (asnbyte)'\x72',
  /*2212*/ (asnbyte)'\x67',
  /*2213*/ (asnbyte)'\x65',
  /*2214*/ (asnbyte)'\x72',
  /*2215*/ (asnbyte)'\x53',
  /*2216*/ (asnbyte)'\x74',
  /*2217*/ (asnbyte)'\x61',
  /*2218*/ (asnbyte)'\x74',
  /*2219*/ (asnbyte)'\x65',
  /*2220*/ (asnbyte)'\x73',
  /*2221*/ (asnbyte)'\x74',
  /*2222*/ (asnbyte)'\x61',
  /*2223*/ (asnbyte)'\x74',
  /*2224*/ (asnbyte)'\x75',
  /*2225*/ (asnbyte)'\x73',
  /*2226*/ (asnbyte)'\x4f',
  /*2227*/ (asnbyte)'\x66',
  /*2228*/ (asnbyte)'\x43',
  /*2229*/ (asnbyte)'\x68',
  /*2230*/ (asnbyte)'\x61',
  /*2231*/ (asnbyte)'\x72',
  /*2232*/ (asnbyte)'\x67',
  /*2233*/ (asnbyte)'\x65',
  /*2234*/ (asnbyte)'\x72',
  /*2235*/ (asnbyte)'\x43',
  /*2236*/ (asnbyte)'\x6f',
  /*2237*/ (asnbyte)'\x6e',
  /*2238*/ (asnbyte)'\x6e',
  /*2239*/ (asnbyte)'\x65',
  /*2240*/ (asnbyte)'\x63',
  /*2241*/ (asnbyte)'\x74',
  /*2242*/ (asnbyte)'\x69',
  /*2243*/ (asnbyte)'\x6f',
  /*2244*/ (asnbyte)'\x6e',
  /*2245*/ (asnbyte)'\x74',
  /*2246*/ (asnbyte)'\x69',
  /*2247*/ (asnbyte)'\x6d',
  /*2248*/ (asnbyte)'\x65',
  /*2249*/ (asnbyte)'\x54',
  /*2250*/ (asnbyte)'\x6f',
  /*2251*/ (asnbyte)'\x46',
  /*2252*/ (asnbyte)'\x75',
  /*2253*/ (asnbyte)'\x6c',
  /*2254*/ (asnbyte)'\x6c',
  /*2255*/ (asnbyte)'\x79',
  /*2256*/ (asnbyte)'\x43',
  /*2257*/ (asnbyte)'\x68',
  /*2258*/ (asnbyte)'\x61',
  /*2259*/ (asnbyte)'\x72',
  /*2260*/ (asnbyte)'\x67',
  /*2261*/ (asnbyte)'\x65',
  /*2262*/ (asnbyte)'\x64',
  /*2263*/ (asnbyte)'\x63',
  /*2264*/ (asnbyte)'\x68',
  /*2265*/ (asnbyte)'\x61',
  /*2266*/ (asnbyte)'\x72',
  /*2267*/ (asnbyte)'\x67',
  /*2268*/ (asnbyte)'\x65',
  /*2269*/ (asnbyte)'\x4c',
  /*2270*/ (asnbyte)'\x65',
  /*2271*/ (asnbyte)'\x76',
  /*2272*/ (asnbyte)'\x65',
  /*2273*/ (asnbyte)'\x6c',
  /*2274*/ (asnbyte)'\x73',
  /*2275*/ (asnbyte)'\x74',
  /*2276*/ (asnbyte)'\x61',
  /*2277*/ (asnbyte)'\x74',
  /*2278*/ (asnbyte)'\x65',
  /*2279*/ (asnbyte)'\x4f',
  /*2280*/ (asnbyte)'\x66',
  /*2281*/ (asnbyte)'\x43',
  /*2282*/ (asnbyte)'\x68',
  /*2283*/ (asnbyte)'\x61',
  /*2284*/ (asnbyte)'\x72',
  /*2285*/ (asnbyte)'\x67',
  /*2286*/ (asnbyte)'\x65',
  /*2287*/ (asnbyte)'\x69',
  /*2288*/ (asnbyte)'\x73',
  /*2289*/ (asnbyte)'\x50',
  /*2290*/ (asnbyte)'\x6c',
  /*2291*/ (asnbyte)'\x75',
  /*2292*/ (asnbyte)'\x67',
  /*2293*/ (asnbyte)'\x67',
  /*2294*/ (asnbyte)'\x65',
  /*2295*/ (asnbyte)'\x64',
  /*2296*/ (asnbyte)'\x49',
  /*2297*/ (asnbyte)'\x6e',
  /*2298*/ (asnbyte)'\x69',
  /*2299*/ (asnbyte)'\x73',
  /*2300*/ (asnbyte)'\x43',
  /*2301*/ (asnbyte)'\x68',
  /*2302*/ (asnbyte)'\x61',
  /*2303*/ (asnbyte)'\x72',
  /*2304*/ (asnbyte)'\x67',
  /*2305*/ (asnbyte)'\x69',
  /*2306*/ (asnbyte)'\x6e',
  /*2307*/ (asnbyte)'\x67',
  /*2308*/ (asnbyte)'\x45',
  /*2309*/ (asnbyte)'\x6c',
  /*2310*/ (asnbyte)'\x65',
  /*2311*/ (asnbyte)'\x63',
  /*2312*/ (asnbyte)'\x74',
  /*2313*/ (asnbyte)'\x72',
  /*2314*/ (asnbyte)'\x69',
  /*2315*/ (asnbyte)'\x63',
  /*2316*/ (asnbyte)'\x56',
  /*2317*/ (asnbyte)'\x65',
  /*2318*/ (asnbyte)'\x68',
  /*2319*/ (asnbyte)'\x69',
  /*2320*/ (asnbyte)'\x63',
  /*2321*/ (asnbyte)'\x6c',
  /*2322*/ (asnbyte)'\x65',
  /*2323*/ (asnbyte)'\x53',
  /*2324*/ (asnbyte)'\x74',
  /*2325*/ (asnbyte)'\x61',
  /*2326*/ (asnbyte)'\x74',
  /*2327*/ (asnbyte)'\x75',
  /*2328*/ (asnbyte)'\x73',
  /*2329*/ (asnbyte)'\x64',
  /*2330*/ (asnbyte)'\x61',
  /*2331*/ (asnbyte)'\x74',
  /*2332*/ (asnbyte)'\x61',
  /*2333*/ (asnbyte)'\x56',
  /*2334*/ (asnbyte)'\x61',
  /*2335*/ (asnbyte)'\x6c',
  /*2336*/ (asnbyte)'\x74',
  /*2337*/ (asnbyte)'\x69',
  /*2338*/ (asnbyte)'\x6d',
  /*2339*/ (asnbyte)'\x65',
  /*2340*/ (asnbyte)'\x73',
  /*2341*/ (asnbyte)'\x74',
  /*2342*/ (asnbyte)'\x61',
  /*2343*/ (asnbyte)'\x6d',
  /*2344*/ (asnbyte)'\x70',
  /*2345*/ (asnbyte)'\x56',
  /*2346*/ (asnbyte)'\x61',
  /*2347*/ (asnbyte)'\x6c',
  /*2348*/ (asnbyte)'\x62',
  /*2349*/ (asnbyte)'\x6f',
  /*2350*/ (asnbyte)'\x6f',
  /*2351*/ (asnbyte)'\x6c',
  /*2352*/ (asnbyte)'\x56',
  /*2353*/ (asnbyte)'\x61',
  /*2354*/ (asnbyte)'\x6c',
  /*2355*/ (asnbyte)'\x73',
  /*2356*/ (asnbyte)'\x74',
  /*2357*/ (asnbyte)'\x72',
  /*2358*/ (asnbyte)'\x69',
  /*2359*/ (asnbyte)'\x6e',
  /*2360*/ (asnbyte)'\x67',
  /*2361*/ (asnbyte)'\x56',
  /*2362*/ (asnbyte)'\x61',
  /*2363*/ (asnbyte)'\x6c',
  /*2364*/ (asnbyte)'\x76',
  /*2365*/ (asnbyte)'\x61',
  /*2366*/ (asnbyte)'\x6c',
  /*2367*/ (asnbyte)'\x75',
  /*2368*/ (asnbyte)'\x65',
  /*2369*/ (asnbyte)'\x63',
  /*2370*/ (asnbyte)'\x6f',
  /*2371*/ (asnbyte)'\x6c',
  /*2372*/ (asnbyte)'\x6c',
  /*2373*/ (asnbyte)'\x65',
  /*2374*/ (asnbyte)'\x63',
  /*2375*/ (asnbyte)'\x74',
  /*2376*/ (asnbyte)'\x54',
  /*2377*/ (asnbyte)'\x69',
  /*2378*/ (asnbyte)'\x6d',
  /*2379*/ (asnbyte)'\x65',
  /*2380*/ (asnbyte)'\x6b',
  /*2381*/ (asnbyte)'\x65',
  /*2382*/ (asnbyte)'\x79',
  /*2383*/ (asnbyte)'\x45',
  /*2384*/ (asnbyte)'\x63',
  /*2385*/ (asnbyte)'\x75',
  /*2386*/ (asnbyte)'\x57',
  /*2387*/ (asnbyte)'\x61',
  /*2388*/ (asnbyte)'\x72',
  /*2389*/ (asnbyte)'\x6e',
  /*2390*/ (asnbyte)'\x69',
  /*2391*/ (asnbyte)'\x6e',
  /*2392*/ (asnbyte)'\x67',
  /*2393*/ (asnbyte)'\x4d',
  /*2394*/ (asnbyte)'\x65',
  /*2395*/ (asnbyte)'\x73',
  /*2396*/ (asnbyte)'\x73',
  /*2397*/ (asnbyte)'\x61',
  /*2398*/ (asnbyte)'\x67',
  /*2399*/ (asnbyte)'\x65',
  /*2400*/ (asnbyte)'\x73',
  /*2401*/ (asnbyte)'\x65',
  /*2402*/ (asnbyte)'\x78',
  /*2403*/ (asnbyte)'\x74',
  /*2404*/ (asnbyte)'\x65',
  /*2405*/ (asnbyte)'\x72',
  /*2406*/ (asnbyte)'\x69',
  /*2407*/ (asnbyte)'\x6f',
  /*2408*/ (asnbyte)'\x72',
  /*2409*/ (asnbyte)'\x50',
  /*2410*/ (asnbyte)'\x4d',
  /*2411*/ (asnbyte)'\x32',
  /*2412*/ (asnbyte)'\x35',
  /*2413*/ (asnbyte)'\x69',
  /*2414*/ (asnbyte)'\x6e',
  /*2415*/ (asnbyte)'\x74',
  /*2416*/ (asnbyte)'\x65',
  /*2417*/ (asnbyte)'\x72',
  /*2418*/ (asnbyte)'\x69',
  /*2419*/ (asnbyte)'\x6f',
  /*2420*/ (asnbyte)'\x72',
  /*2421*/ (asnbyte)'\x50',
  /*2422*/ (asnbyte)'\x4d',
  /*2423*/ (asnbyte)'\x32',
  /*2424*/ (asnbyte)'\x35',
  /*2425*/ (asnbyte)'\x50',
  /*2426*/ (asnbyte)'\x6f',
  /*2427*/ (asnbyte)'\x6c',
  /*2428*/ (asnbyte)'\x6c',
  /*2429*/ (asnbyte)'\x75',
  /*2430*/ (asnbyte)'\x74',
  /*2431*/ (asnbyte)'\x69',
  /*2432*/ (asnbyte)'\x6f',
  /*2433*/ (asnbyte)'\x6e',
  /*2434*/ (asnbyte)'\x53',
  /*2435*/ (asnbyte)'\x74',
  /*2436*/ (asnbyte)'\x61',
  /*2437*/ (asnbyte)'\x74',
  /*2438*/ (asnbyte)'\x75',
  /*2439*/ (asnbyte)'\x73',
  /*2440*/ (asnbyte)'\x63',
  /*2441*/ (asnbyte)'\x72',
  /*2442*/ (asnbyte)'\x75',
  /*2443*/ (asnbyte)'\x69',
  /*2444*/ (asnbyte)'\x73',
  /*2445*/ (asnbyte)'\x65',
  /*2446*/ (asnbyte)'\x43',
  /*2447*/ (asnbyte)'\x6f',
  /*2448*/ (asnbyte)'\x6e',
  /*2449*/ (asnbyte)'\x74',
  /*2450*/ (asnbyte)'\x72',
  /*2451*/ (asnbyte)'\x6f',
  /*2452*/ (asnbyte)'\x6c',
  /*2453*/ (asnbyte)'\x53',
  /*2454*/ (asnbyte)'\x74',
  /*2455*/ (asnbyte)'\x61',
  /*2456*/ (asnbyte)'\x74',
  /*2457*/ (asnbyte)'\x75',
  /*2458*/ (asnbyte)'\x73',
  /*2459*/ (asnbyte)'\x74',
  /*2460*/ (asnbyte)'\x72',
  /*2461*/ (asnbyte)'\x61',
  /*2462*/ (asnbyte)'\x6e',
  /*2463*/ (asnbyte)'\x73',
  /*2464*/ (asnbyte)'\x69',
  /*2465*/ (asnbyte)'\x6d',
  /*2466*/ (asnbyte)'\x69',
  /*2467*/ (asnbyte)'\x73',
  /*2468*/ (asnbyte)'\x73',
  /*2469*/ (asnbyte)'\x69',
  /*2470*/ (asnbyte)'\x6f',
  /*2471*/ (asnbyte)'\x6e',
  /*2472*/ (asnbyte)'\x47',
  /*2473*/ (asnbyte)'\x65',
  /*2474*/ (asnbyte)'\x61',
  /*2475*/ (asnbyte)'\x72',
  /*2476*/ (asnbyte)'\x50',
  /*2477*/ (asnbyte)'\x6f',
  /*2478*/ (asnbyte)'\x73',
  /*2479*/ (asnbyte)'\x74',
  /*2480*/ (asnbyte)'\x69',
  /*2481*/ (asnbyte)'\x6f',
  /*2482*/ (asnbyte)'\x6e',
  /*2483*/ (asnbyte)'\x65',
  /*2484*/ (asnbyte)'\x6e',
  /*2485*/ (asnbyte)'\x67',
  /*2486*/ (asnbyte)'\x69',
  /*2487*/ (asnbyte)'\x6e',
  /*2488*/ (asnbyte)'\x65',
  /*2489*/ (asnbyte)'\x53',
  /*2490*/ (asnbyte)'\x70',
  /*2491*/ (asnbyte)'\x65',
  /*2492*/ (asnbyte)'\x65',
  /*2493*/ (asnbyte)'\x64',
  /*2494*/ (asnbyte)'\x56',
  /*2495*/ (asnbyte)'\x61',
  /*2496*/ (asnbyte)'\x6c',
  /*2497*/ (asnbyte)'\x69',
  /*2498*/ (asnbyte)'\x64',
  /*2499*/ (asnbyte)'\x69',
  /*2500*/ (asnbyte)'\x74',
  /*2501*/ (asnbyte)'\x79',
  /*2502*/ (asnbyte)'\x65',
  /*2503*/ (asnbyte)'\x6e',
  /*2504*/ (asnbyte)'\x67',
  /*2505*/ (asnbyte)'\x69',
  /*2506*/ (asnbyte)'\x6e',
  /*2507*/ (asnbyte)'\x65',
  /*2508*/ (asnbyte)'\x53',
  /*2509*/ (asnbyte)'\x70',
  /*2510*/ (asnbyte)'\x65',
  /*2511*/ (asnbyte)'\x65',
  /*2512*/ (asnbyte)'\x64',
  /*2513*/ (asnbyte)'\x62',
  /*2514*/ (asnbyte)'\x72',
  /*2515*/ (asnbyte)'\x61',
  /*2516*/ (asnbyte)'\x6b',
  /*2517*/ (asnbyte)'\x65',
  /*2518*/ (asnbyte)'\x50',
  /*2519*/ (asnbyte)'\x65',
  /*2520*/ (asnbyte)'\x64',
  /*2521*/ (asnbyte)'\x61',
  /*2522*/ (asnbyte)'\x6c',
  /*2523*/ (asnbyte)'\x44',
  /*2524*/ (asnbyte)'\x65',
  /*2525*/ (asnbyte)'\x70',
  /*2526*/ (asnbyte)'\x72',
  /*2527*/ (asnbyte)'\x65',
  /*2528*/ (asnbyte)'\x73',
  /*2529*/ (asnbyte)'\x73',
  /*2530*/ (asnbyte)'\x65',
  /*2531*/ (asnbyte)'\x64',
  /*2532*/ (asnbyte)'\x56',
  /*2533*/ (asnbyte)'\x61',
  /*2534*/ (asnbyte)'\x6c',
  /*2535*/ (asnbyte)'\x69',
  /*2536*/ (asnbyte)'\x64',
  /*2537*/ (asnbyte)'\x69',
  /*2538*/ (asnbyte)'\x74',
  /*2539*/ (asnbyte)'\x79',
  /*2540*/ (asnbyte)'\x62',
  /*2541*/ (asnbyte)'\x72',
  /*2542*/ (asnbyte)'\x61',
  /*2543*/ (asnbyte)'\x6b',
  /*2544*/ (asnbyte)'\x65',
  /*2545*/ (asnbyte)'\x50',
  /*2546*/ (asnbyte)'\x65',
  /*2547*/ (asnbyte)'\x64',
  /*2548*/ (asnbyte)'\x61',
  /*2549*/ (asnbyte)'\x6c',
  /*2550*/ (asnbyte)'\x44',
  /*2551*/ (asnbyte)'\x65',
  /*2552*/ (asnbyte)'\x70',
  /*2553*/ (asnbyte)'\x72',
  /*2554*/ (asnbyte)'\x65',
  /*2555*/ (asnbyte)'\x73',
  /*2556*/ (asnbyte)'\x73',
  /*2557*/ (asnbyte)'\x65',
  /*2558*/ (asnbyte)'\x64',
  /*2559*/ (asnbyte)'\x44',
  /*2560*/ (asnbyte)'\x72',
  /*2561*/ (asnbyte)'\x69',
  /*2562*/ (asnbyte)'\x76',
  /*2563*/ (asnbyte)'\x69',
  /*2564*/ (asnbyte)'\x6e',
  /*2565*/ (asnbyte)'\x67',
  /*2566*/ (asnbyte)'\x42',
  /*2567*/ (asnbyte)'\x65',
  /*2568*/ (asnbyte)'\x68',
  /*2569*/ (asnbyte)'\x61',
  /*2570*/ (asnbyte)'\x76',
  /*2571*/ (asnbyte)'\x69',
  /*2572*/ (asnbyte)'\x6f',
  /*2573*/ (asnbyte)'\x75',
  /*2574*/ (asnbyte)'\x72',
  /*2575*/ (asnbyte)'\x53',
  /*2576*/ (asnbyte)'\x74',
  /*2577*/ (asnbyte)'\x61',
  /*2578*/ (asnbyte)'\x74',
  /*2579*/ (asnbyte)'\x75',
  /*2580*/ (asnbyte)'\x73',
  /*2581*/ (asnbyte)'\x72',
  /*2582*/ (asnbyte)'\x6c',
  /*2583*/ (asnbyte)'\x56',
  /*2584*/ (asnbyte)'\x65',
  /*2585*/ (asnbyte)'\x6e',
  /*2586*/ (asnbyte)'\x74',
  /*2587*/ (asnbyte)'\x53',
  /*2588*/ (asnbyte)'\x74',
  /*2589*/ (asnbyte)'\x73',
  /*2590*/ (asnbyte)'\x72',
  /*2591*/ (asnbyte)'\x72',
  /*2592*/ (asnbyte)'\x56',
  /*2593*/ (asnbyte)'\x65',
  /*2594*/ (asnbyte)'\x6e',
  /*2595*/ (asnbyte)'\x74',
  /*2596*/ (asnbyte)'\x53',
  /*2597*/ (asnbyte)'\x74',
  /*2598*/ (asnbyte)'\x73',
  /*2599*/ (asnbyte)'\x70',
  /*2600*/ (asnbyte)'\x61',
  /*2601*/ (asnbyte)'\x73',
  /*2602*/ (asnbyte)'\x73',
  /*2603*/ (asnbyte)'\x56',
  /*2604*/ (asnbyte)'\x65',
  /*2605*/ (asnbyte)'\x6e',
  /*2606*/ (asnbyte)'\x74',
  /*2607*/ (asnbyte)'\x53',
  /*2608*/ (asnbyte)'\x74',
  /*2609*/ (asnbyte)'\x73',
  /*2610*/ (asnbyte)'\x64',
  /*2611*/ (asnbyte)'\x72',
  /*2612*/ (asnbyte)'\x76',
  /*2613*/ (asnbyte)'\x56',
  /*2614*/ (asnbyte)'\x65',
  /*2615*/ (asnbyte)'\x6e',
  /*2616*/ (asnbyte)'\x74',
  /*2617*/ (asnbyte)'\x53',
  /*2618*/ (asnbyte)'\x74',
  /*2619*/ (asnbyte)'\x73',
  /*2620*/ (asnbyte)'\x72',
  /*2621*/ (asnbyte)'\x72',
  /*2622*/ (asnbyte)'\x48',
  /*2623*/ (asnbyte)'\x65',
  /*2624*/ (asnbyte)'\x61',
  /*2625*/ (asnbyte)'\x74',
  /*2626*/ (asnbyte)'\x69',
  /*2627*/ (asnbyte)'\x6e',
  /*2628*/ (asnbyte)'\x67',
  /*2629*/ (asnbyte)'\x53',
  /*2630*/ (asnbyte)'\x74',
  /*2631*/ (asnbyte)'\x73',
  /*2632*/ (asnbyte)'\x72',
  /*2633*/ (asnbyte)'\x6c',
  /*2634*/ (asnbyte)'\x48',
  /*2635*/ (asnbyte)'\x65',
  /*2636*/ (asnbyte)'\x61',
  /*2637*/ (asnbyte)'\x74',
  /*2638*/ (asnbyte)'\x69',
  /*2639*/ (asnbyte)'\x6e',
  /*2640*/ (asnbyte)'\x67',
  /*2641*/ (asnbyte)'\x53',
  /*2642*/ (asnbyte)'\x74',
  /*2643*/ (asnbyte)'\x73',
  /*2644*/ (asnbyte)'\x70',
  /*2645*/ (asnbyte)'\x61',
  /*2646*/ (asnbyte)'\x73',
  /*2647*/ (asnbyte)'\x73',
  /*2648*/ (asnbyte)'\x48',
  /*2649*/ (asnbyte)'\x65',
  /*2650*/ (asnbyte)'\x61',
  /*2651*/ (asnbyte)'\x74',
  /*2652*/ (asnbyte)'\x69',
  /*2653*/ (asnbyte)'\x6e',
  /*2654*/ (asnbyte)'\x67',
  /*2655*/ (asnbyte)'\x53',
  /*2656*/ (asnbyte)'\x74',
  /*2657*/ (asnbyte)'\x73',
  /*2658*/ (asnbyte)'\x64',
  /*2659*/ (asnbyte)'\x72',
  /*2660*/ (asnbyte)'\x76',
  /*2661*/ (asnbyte)'\x48',
  /*2662*/ (asnbyte)'\x65',
  /*2663*/ (asnbyte)'\x61',
  /*2664*/ (asnbyte)'\x74',
  /*2665*/ (asnbyte)'\x53',
  /*2666*/ (asnbyte)'\x74',
  /*2667*/ (asnbyte)'\x73',
  /*2668*/ (asnbyte)'\x77',
  /*2669*/ (asnbyte)'\x69',
  /*2670*/ (asnbyte)'\x6e',
  /*2671*/ (asnbyte)'\x43',
  /*2672*/ (asnbyte)'\x6c',
  /*2673*/ (asnbyte)'\x6f',
  /*2674*/ (asnbyte)'\x73',
  /*2675*/ (asnbyte)'\x65',
  /*2676*/ (asnbyte)'\x52',
  /*2677*/ (asnbyte)'\x65',
  /*2678*/ (asnbyte)'\x6d',
  /*2679*/ (asnbyte)'\x69',
  /*2680*/ (asnbyte)'\x6e',
  /*2681*/ (asnbyte)'\x64',
  /*2682*/ (asnbyte)'\x65',
  /*2683*/ (asnbyte)'\x72',
  /*2684*/ (asnbyte)'\x61',
  /*2685*/ (asnbyte)'\x69',
  /*2686*/ (asnbyte)'\x72',
  /*2687*/ (asnbyte)'\x43',
  /*2688*/ (asnbyte)'\x6c',
  /*2689*/ (asnbyte)'\x65',
  /*2690*/ (asnbyte)'\x61',
  /*2691*/ (asnbyte)'\x6e',
  /*2692*/ (asnbyte)'\x53',
  /*2693*/ (asnbyte)'\x74',
  /*2694*/ (asnbyte)'\x73',
  /*2695*/ (asnbyte)'\x70',
  /*2696*/ (asnbyte)'\x72',
  /*2697*/ (asnbyte)'\x65',
  /*2698*/ (asnbyte)'\x43',
  /*2699*/ (asnbyte)'\x6c',
  /*2700*/ (asnbyte)'\x69',
  /*2701*/ (asnbyte)'\x6d',
  /*2702*/ (asnbyte)'\x61',
  /*2703*/ (asnbyte)'\x74',
  /*2704*/ (asnbyte)'\x65',
  /*2705*/ (asnbyte)'\x41',
  /*2706*/ (asnbyte)'\x63',
  /*2707*/ (asnbyte)'\x74',
  /*2708*/ (asnbyte)'\x69',
  /*2709*/ (asnbyte)'\x76',
  /*2710*/ (asnbyte)'\x65',
  /*2711*/ (asnbyte)'\x65',
  /*2712*/ (asnbyte)'\x78',
  /*2713*/ (asnbyte)'\x74',
  /*2714*/ (asnbyte)'\x65',
  /*2715*/ (asnbyte)'\x72',
  /*2716*/ (asnbyte)'\x69',
  /*2717*/ (asnbyte)'\x6f',
  /*2718*/ (asnbyte)'\x72',
  /*2719*/ (asnbyte)'\x54',
  /*2720*/ (asnbyte)'\x65',
  /*2721*/ (asnbyte)'\x6d',
  /*2722*/ (asnbyte)'\x70',
  /*2723*/ (asnbyte)'\x56',
  /*2724*/ (asnbyte)'\x61',
  /*2725*/ (asnbyte)'\x6c',
  /*2726*/ (asnbyte)'\x69',
  /*2727*/ (asnbyte)'\x64',
  /*2728*/ (asnbyte)'\x69',
  /*2729*/ (asnbyte)'\x74',
  /*2730*/ (asnbyte)'\x79',
  /*2731*/ (asnbyte)'\x65',
  /*2732*/ (asnbyte)'\x78',
  /*2733*/ (asnbyte)'\x74',
  /*2734*/ (asnbyte)'\x65',
  /*2735*/ (asnbyte)'\x72',
  /*2736*/ (asnbyte)'\x69',
  /*2737*/ (asnbyte)'\x6f',
  /*2738*/ (asnbyte)'\x72',
  /*2739*/ (asnbyte)'\x54',
  /*2740*/ (asnbyte)'\x65',
  /*2741*/ (asnbyte)'\x6d',
  /*2742*/ (asnbyte)'\x70',
  /*2743*/ (asnbyte)'\x69',
  /*2744*/ (asnbyte)'\x6e',
  /*2745*/ (asnbyte)'\x74',
  /*2746*/ (asnbyte)'\x65',
  /*2747*/ (asnbyte)'\x72',
  /*2748*/ (asnbyte)'\x69',
  /*2749*/ (asnbyte)'\x6f',
  /*2750*/ (asnbyte)'\x72',
  /*2751*/ (asnbyte)'\x54',
  /*2752*/ (asnbyte)'\x65',
  /*2753*/ (asnbyte)'\x6d',
  /*2754*/ (asnbyte)'\x70',
  /*2755*/ (asnbyte)'\x77',
  /*2756*/ (asnbyte)'\x69',
  /*2757*/ (asnbyte)'\x6e',
  /*2758*/ (asnbyte)'\x50',
  /*2759*/ (asnbyte)'\x6f',
  /*2760*/ (asnbyte)'\x73',
  /*2761*/ (asnbyte)'\x50',
  /*2762*/ (asnbyte)'\x61',
  /*2763*/ (asnbyte)'\x73',
  /*2764*/ (asnbyte)'\x73',
  /*2765*/ (asnbyte)'\x65',
  /*2766*/ (asnbyte)'\x6e',
  /*2767*/ (asnbyte)'\x67',
  /*2768*/ (asnbyte)'\x65',
  /*2769*/ (asnbyte)'\x72',
  /*2770*/ (asnbyte)'\x52',
  /*2771*/ (asnbyte)'\x65',
  /*2772*/ (asnbyte)'\x61',
  /*2773*/ (asnbyte)'\x72',
  /*2774*/ (asnbyte)'\x77',
  /*2775*/ (asnbyte)'\x69',
  /*2776*/ (asnbyte)'\x6e',
  /*2777*/ (asnbyte)'\x50',
  /*2778*/ (asnbyte)'\x6f',
  /*2779*/ (asnbyte)'\x73',
  /*2780*/ (asnbyte)'\x44',
  /*2781*/ (asnbyte)'\x72',
  /*2782*/ (asnbyte)'\x69',
  /*2783*/ (asnbyte)'\x76',
  /*2784*/ (asnbyte)'\x65',
  /*2785*/ (asnbyte)'\x72',
  /*2786*/ (asnbyte)'\x52',
  /*2787*/ (asnbyte)'\x65',
  /*2788*/ (asnbyte)'\x61',
  /*2789*/ (asnbyte)'\x72',
  /*2790*/ (asnbyte)'\x77',
  /*2791*/ (asnbyte)'\x69',
  /*2792*/ (asnbyte)'\x6e',
  /*2793*/ (asnbyte)'\x50',
  /*2794*/ (asnbyte)'\x6f',
  /*2795*/ (asnbyte)'\x73',
  /*2796*/ (asnbyte)'\x50',
  /*2797*/ (asnbyte)'\x61',
  /*2798*/ (asnbyte)'\x73',
  /*2799*/ (asnbyte)'\x73',
  /*2800*/ (asnbyte)'\x65',
  /*2801*/ (asnbyte)'\x6e',
  /*2802*/ (asnbyte)'\x67',
  /*2803*/ (asnbyte)'\x65',
  /*2804*/ (asnbyte)'\x72',
  /*2805*/ (asnbyte)'\x77',
  /*2806*/ (asnbyte)'\x69',
  /*2807*/ (asnbyte)'\x6e',
  /*2808*/ (asnbyte)'\x50',
  /*2809*/ (asnbyte)'\x6f',
  /*2810*/ (asnbyte)'\x73',
  /*2811*/ (asnbyte)'\x44',
  /*2812*/ (asnbyte)'\x72',
  /*2813*/ (asnbyte)'\x69',
  /*2814*/ (asnbyte)'\x76',
  /*2815*/ (asnbyte)'\x65',
  /*2816*/ (asnbyte)'\x72',
  /*2817*/ (asnbyte)'\x76',
  /*2818*/ (asnbyte)'\x65',
  /*2819*/ (asnbyte)'\x6e',
  /*2820*/ (asnbyte)'\x74',
  /*2821*/ (asnbyte)'\x69',
  /*2822*/ (asnbyte)'\x6c',
  /*2823*/ (asnbyte)'\x61',
  /*2824*/ (asnbyte)'\x74',
  /*2825*/ (asnbyte)'\x65',
  /*2826*/ (asnbyte)'\x53',
  /*2827*/ (asnbyte)'\x74',
  /*2828*/ (asnbyte)'\x61',
  /*2829*/ (asnbyte)'\x74',
  /*2830*/ (asnbyte)'\x75',
  /*2831*/ (asnbyte)'\x73',
  /*2832*/ (asnbyte)'\x73',
  /*2833*/ (asnbyte)'\x75',
  /*2834*/ (asnbyte)'\x6e',
  /*2835*/ (asnbyte)'\x72',
  /*2836*/ (asnbyte)'\x6f',
  /*2837*/ (asnbyte)'\x6f',
  /*2838*/ (asnbyte)'\x66',
  /*2839*/ (asnbyte)'\x4f',
  /*2840*/ (asnbyte)'\x70',
  /*2841*/ (asnbyte)'\x65',
  /*2842*/ (asnbyte)'\x6e',
  /*2843*/ (asnbyte)'\x53',
  /*2844*/ (asnbyte)'\x74',
  /*2845*/ (asnbyte)'\x61',
  /*2846*/ (asnbyte)'\x74',
  /*2847*/ (asnbyte)'\x75',
  /*2848*/ (asnbyte)'\x73',
  /*2849*/ (asnbyte)'\x56',
  /*2850*/ (asnbyte)'\x61',
  /*2851*/ (asnbyte)'\x6c',
  /*2852*/ (asnbyte)'\x69',
  /*2853*/ (asnbyte)'\x64',
  /*2854*/ (asnbyte)'\x69',
  /*2855*/ (asnbyte)'\x74',
  /*2856*/ (asnbyte)'\x79',
  /*2857*/ (asnbyte)'\x73',
  /*2858*/ (asnbyte)'\x75',
  /*2859*/ (asnbyte)'\x6e',
  /*2860*/ (asnbyte)'\x72',
  /*2861*/ (asnbyte)'\x6f',
  /*2862*/ (asnbyte)'\x6f',
  /*2863*/ (asnbyte)'\x66',
  /*2864*/ (asnbyte)'\x4f',
  /*2865*/ (asnbyte)'\x70',
  /*2866*/ (asnbyte)'\x65',
  /*2867*/ (asnbyte)'\x6e',
  /*2868*/ (asnbyte)'\x53',
  /*2869*/ (asnbyte)'\x74',
  /*2870*/ (asnbyte)'\x61',
  /*2871*/ (asnbyte)'\x74',
  /*2872*/ (asnbyte)'\x75',
  /*2873*/ (asnbyte)'\x73',
  /*2874*/ (asnbyte)'\x77',
  /*2875*/ (asnbyte)'\x69',
  /*2876*/ (asnbyte)'\x6e',
  /*2877*/ (asnbyte)'\x53',
  /*2878*/ (asnbyte)'\x74',
  /*2879*/ (asnbyte)'\x61',
  /*2880*/ (asnbyte)'\x74',
  /*2881*/ (asnbyte)'\x75',
  /*2882*/ (asnbyte)'\x73',
  /*2883*/ (asnbyte)'\x50',
  /*2884*/ (asnbyte)'\x61',
  /*2885*/ (asnbyte)'\x73',
  /*2886*/ (asnbyte)'\x73',
  /*2887*/ (asnbyte)'\x65',
  /*2888*/ (asnbyte)'\x6e',
  /*2889*/ (asnbyte)'\x67',
  /*2890*/ (asnbyte)'\x65',
  /*2891*/ (asnbyte)'\x72',
  /*2892*/ (asnbyte)'\x52',
  /*2893*/ (asnbyte)'\x65',
  /*2894*/ (asnbyte)'\x61',
  /*2895*/ (asnbyte)'\x72',
  /*2896*/ (asnbyte)'\x56',
  /*2897*/ (asnbyte)'\x61',
  /*2898*/ (asnbyte)'\x6c',
  /*2899*/ (asnbyte)'\x69',
  /*2900*/ (asnbyte)'\x64',
  /*2901*/ (asnbyte)'\x69',
  /*2902*/ (asnbyte)'\x74',
  /*2903*/ (asnbyte)'\x79',
  /*2904*/ (asnbyte)'\x77',
  /*2905*/ (asnbyte)'\x69',
  /*2906*/ (asnbyte)'\x6e',
  /*2907*/ (asnbyte)'\x53',
  /*2908*/ (asnbyte)'\x74',
  /*2909*/ (asnbyte)'\x61',
  /*2910*/ (asnbyte)'\x74',
  /*2911*/ (asnbyte)'\x75',
  /*2912*/ (asnbyte)'\x73',
  /*2913*/ (asnbyte)'\x50',
  /*2914*/ (asnbyte)'\x61',
  /*2915*/ (asnbyte)'\x73',
  /*2916*/ (asnbyte)'\x73',
  /*2917*/ (asnbyte)'\x65',
  /*2918*/ (asnbyte)'\x6e',
  /*2919*/ (asnbyte)'\x67',
  /*2920*/ (asnbyte)'\x65',
  /*2921*/ (asnbyte)'\x72',
  /*2922*/ (asnbyte)'\x52',
  /*2923*/ (asnbyte)'\x65',
  /*2924*/ (asnbyte)'\x61',
  /*2925*/ (asnbyte)'\x72',
  /*2926*/ (asnbyte)'\x77',
  /*2927*/ (asnbyte)'\x69',
  /*2928*/ (asnbyte)'\x6e',
  /*2929*/ (asnbyte)'\x53',
  /*2930*/ (asnbyte)'\x74',
  /*2931*/ (asnbyte)'\x61',
  /*2932*/ (asnbyte)'\x74',
  /*2933*/ (asnbyte)'\x75',
  /*2934*/ (asnbyte)'\x73',
  /*2935*/ (asnbyte)'\x44',
  /*2936*/ (asnbyte)'\x72',
  /*2937*/ (asnbyte)'\x69',
  /*2938*/ (asnbyte)'\x76',
  /*2939*/ (asnbyte)'\x65',
  /*2940*/ (asnbyte)'\x72',
  /*2941*/ (asnbyte)'\x52',
  /*2942*/ (asnbyte)'\x65',
  /*2943*/ (asnbyte)'\x61',
  /*2944*/ (asnbyte)'\x72',
  /*2945*/ (asnbyte)'\x56',
  /*2946*/ (asnbyte)'\x61',
  /*2947*/ (asnbyte)'\x6c',
  /*2948*/ (asnbyte)'\x69',
  /*2949*/ (asnbyte)'\x64',
  /*2950*/ (asnbyte)'\x69',
  /*2951*/ (asnbyte)'\x74',
  /*2952*/ (asnbyte)'\x79',
  /*2953*/ (asnbyte)'\x77',
  /*2954*/ (asnbyte)'\x69',
  /*2955*/ (asnbyte)'\x6e',
  /*2956*/ (asnbyte)'\x53',
  /*2957*/ (asnbyte)'\x74',
  /*2958*/ (asnbyte)'\x61',
  /*2959*/ (asnbyte)'\x74',
  /*2960*/ (asnbyte)'\x75',
  /*2961*/ (asnbyte)'\x73',
  /*2962*/ (asnbyte)'\x44',
  /*2963*/ (asnbyte)'\x72',
  /*2964*/ (asnbyte)'\x69',
  /*2965*/ (asnbyte)'\x76',
  /*2966*/ (asnbyte)'\x65',
  /*2967*/ (asnbyte)'\x72',
  /*2968*/ (asnbyte)'\x52',
  /*2969*/ (asnbyte)'\x65',
  /*2970*/ (asnbyte)'\x61',
  /*2971*/ (asnbyte)'\x72',
  /*2972*/ (asnbyte)'\x77',
  /*2973*/ (asnbyte)'\x69',
  /*2974*/ (asnbyte)'\x6e',
  /*2975*/ (asnbyte)'\x53',
  /*2976*/ (asnbyte)'\x74',
  /*2977*/ (asnbyte)'\x61',
  /*2978*/ (asnbyte)'\x74',
  /*2979*/ (asnbyte)'\x75',
  /*2980*/ (asnbyte)'\x73',
  /*2981*/ (asnbyte)'\x50',
  /*2982*/ (asnbyte)'\x61',
  /*2983*/ (asnbyte)'\x73',
  /*2984*/ (asnbyte)'\x73',
  /*2985*/ (asnbyte)'\x65',
  /*2986*/ (asnbyte)'\x6e',
  /*2987*/ (asnbyte)'\x67',
  /*2988*/ (asnbyte)'\x65',
  /*2989*/ (asnbyte)'\x72',
  /*2990*/ (asnbyte)'\x56',
  /*2991*/ (asnbyte)'\x61',
  /*2992*/ (asnbyte)'\x6c',
  /*2993*/ (asnbyte)'\x69',
  /*2994*/ (asnbyte)'\x64',
  /*2995*/ (asnbyte)'\x69',
  /*2996*/ (asnbyte)'\x74',
  /*2997*/ (asnbyte)'\x79',
  /*2998*/ (asnbyte)'\x77',
  /*2999*/ (asnbyte)'\x69',
  /*3000*/ (asnbyte)'\x6e',
  /*3001*/ (asnbyte)'\x53',
  /*3002*/ (asnbyte)'\x74',
  /*3003*/ (asnbyte)'\x61',
  /*3004*/ (asnbyte)'\x74',
  /*3005*/ (asnbyte)'\x75',
  /*3006*/ (asnbyte)'\x73',
  /*3007*/ (asnbyte)'\x50',
  /*3008*/ (asnbyte)'\x61',
  /*3009*/ (asnbyte)'\x73',
  /*3010*/ (asnbyte)'\x73',
  /*3011*/ (asnbyte)'\x65',
  /*3012*/ (asnbyte)'\x6e',
  /*3013*/ (asnbyte)'\x67',
  /*3014*/ (asnbyte)'\x65',
  /*3015*/ (asnbyte)'\x72',
  /*3016*/ (asnbyte)'\x77',
  /*3017*/ (asnbyte)'\x69',
  /*3018*/ (asnbyte)'\x6e',
  /*3019*/ (asnbyte)'\x53',
  /*3020*/ (asnbyte)'\x74',
  /*3021*/ (asnbyte)'\x61',
  /*3022*/ (asnbyte)'\x74',
  /*3023*/ (asnbyte)'\x75',
  /*3024*/ (asnbyte)'\x73',
  /*3025*/ (asnbyte)'\x44',
  /*3026*/ (asnbyte)'\x72',
  /*3027*/ (asnbyte)'\x69',
  /*3028*/ (asnbyte)'\x76',
  /*3029*/ (asnbyte)'\x65',
  /*3030*/ (asnbyte)'\x72',
  /*3031*/ (asnbyte)'\x56',
  /*3032*/ (asnbyte)'\x61',
  /*3033*/ (asnbyte)'\x6c',
  /*3034*/ (asnbyte)'\x69',
  /*3035*/ (asnbyte)'\x64',
  /*3036*/ (asnbyte)'\x69',
  /*3037*/ (asnbyte)'\x74',
  /*3038*/ (asnbyte)'\x79',
  /*3039*/ (asnbyte)'\x77',
  /*3040*/ (asnbyte)'\x69',
  /*3041*/ (asnbyte)'\x6e',
  /*3042*/ (asnbyte)'\x53',
  /*3043*/ (asnbyte)'\x74',
  /*3044*/ (asnbyte)'\x61',
  /*3045*/ (asnbyte)'\x74',
  /*3046*/ (asnbyte)'\x75',
  /*3047*/ (asnbyte)'\x73',
  /*3048*/ (asnbyte)'\x44',
  /*3049*/ (asnbyte)'\x72',
  /*3050*/ (asnbyte)'\x69',
  /*3051*/ (asnbyte)'\x76',
  /*3052*/ (asnbyte)'\x65',
  /*3053*/ (asnbyte)'\x72',
  /*3054*/ (asnbyte)'\x43',
  /*3055*/ (asnbyte)'\x6c',
  /*3056*/ (asnbyte)'\x69',
  /*3057*/ (asnbyte)'\x6d',
  /*3058*/ (asnbyte)'\x61',
  /*3059*/ (asnbyte)'\x74',
  /*3060*/ (asnbyte)'\x65',
  /*3061*/ (asnbyte)'\x53',
  /*3062*/ (asnbyte)'\x74',
  /*3063*/ (asnbyte)'\x61',
  /*3064*/ (asnbyte)'\x74',
  /*3065*/ (asnbyte)'\x75',
  /*3066*/ (asnbyte)'\x73',
  /*3067*/ (asnbyte)'\x62',
  /*3068*/ (asnbyte)'\x75',
  /*3069*/ (asnbyte)'\x6c',
  /*3070*/ (asnbyte)'\x62',
  /*3071*/ (asnbyte)'\x53',
  /*3072*/ (asnbyte)'\x74',
  /*3073*/ (asnbyte)'\x61',
  /*3074*/ (asnbyte)'\x74',
  /*3075*/ (asnbyte)'\x75',
  /*3076*/ (asnbyte)'\x73',
  /*3077*/ (asnbyte)'\x74',
  /*3078*/ (asnbyte)'\x72',
  /*3079*/ (asnbyte)'\x69',
  /*3080*/ (asnbyte)'\x70',
  /*3081*/ (asnbyte)'\x4d',
  /*3082*/ (asnbyte)'\x65',
  /*3083*/ (asnbyte)'\x74',
  /*3084*/ (asnbyte)'\x65',
  /*3085*/ (asnbyte)'\x72',
  /*3086*/ (asnbyte)'\x32',
  /*3087*/ (asnbyte)'\x74',
  /*3088*/ (asnbyte)'\x72',
  /*3089*/ (asnbyte)'\x69',
  /*3090*/ (asnbyte)'\x70',
  /*3091*/ (asnbyte)'\x4d',
  /*3092*/ (asnbyte)'\x65',
  /*3093*/ (asnbyte)'\x74',
  /*3094*/ (asnbyte)'\x65',
  /*3095*/ (asnbyte)'\x72',
  /*3096*/ (asnbyte)'\x31',
  /*3097*/ (asnbyte)'\x61',
  /*3098*/ (asnbyte)'\x76',
  /*3099*/ (asnbyte)'\x65',
  /*3100*/ (asnbyte)'\x46',
  /*3101*/ (asnbyte)'\x75',
  /*3102*/ (asnbyte)'\x65',
  /*3103*/ (asnbyte)'\x6c',
  /*3104*/ (asnbyte)'\x43',
  /*3105*/ (asnbyte)'\x6f',
  /*3106*/ (asnbyte)'\x6e',
  /*3107*/ (asnbyte)'\x73',
  /*3108*/ (asnbyte)'\x75',
  /*3109*/ (asnbyte)'\x6d',
  /*3110*/ (asnbyte)'\x70',
  /*3111*/ (asnbyte)'\x74',
  /*3112*/ (asnbyte)'\x69',
  /*3113*/ (asnbyte)'\x6f',
  /*3114*/ (asnbyte)'\x6e',
  /*3115*/ (asnbyte)'\x49',
  /*3116*/ (asnbyte)'\x6e',
  /*3117*/ (asnbyte)'\x4c',
  /*3118*/ (asnbyte)'\x61',
  /*3119*/ (asnbyte)'\x74',
  /*3120*/ (asnbyte)'\x65',
  /*3121*/ (asnbyte)'\x73',
  /*3122*/ (asnbyte)'\x74',
  /*3123*/ (asnbyte)'\x44',
  /*3124*/ (asnbyte)'\x72',
  /*3125*/ (asnbyte)'\x69',
  /*3126*/ (asnbyte)'\x76',
  /*3127*/ (asnbyte)'\x69',
  /*3128*/ (asnbyte)'\x6e',
  /*3129*/ (asnbyte)'\x67',
  /*3130*/ (asnbyte)'\x43',
  /*3131*/ (asnbyte)'\x79',
  /*3132*/ (asnbyte)'\x63',
  /*3133*/ (asnbyte)'\x6c',
  /*3134*/ (asnbyte)'\x65',
  /*3135*/ (asnbyte)'\x61',
  /*3136*/ (asnbyte)'\x76',
  /*3137*/ (asnbyte)'\x65',
  /*3138*/ (asnbyte)'\x46',
  /*3139*/ (asnbyte)'\x75',
  /*3140*/ (asnbyte)'\x65',
  /*3141*/ (asnbyte)'\x6c',
  /*3142*/ (asnbyte)'\x43',
  /*3143*/ (asnbyte)'\x6f',
  /*3144*/ (asnbyte)'\x6e',
  /*3145*/ (asnbyte)'\x73',
  /*3146*/ (asnbyte)'\x75',
  /*3147*/ (asnbyte)'\x6d',
  /*3148*/ (asnbyte)'\x70',
  /*3149*/ (asnbyte)'\x74',
  /*3150*/ (asnbyte)'\x69',
  /*3151*/ (asnbyte)'\x6f',
  /*3152*/ (asnbyte)'\x6e',
  /*3153*/ (asnbyte)'\x66',
  /*3154*/ (asnbyte)'\x75',
  /*3155*/ (asnbyte)'\x65',
  /*3156*/ (asnbyte)'\x6c',
  /*3157*/ (asnbyte)'\x4c',
  /*3158*/ (asnbyte)'\x65',
  /*3159*/ (asnbyte)'\x76',
  /*3160*/ (asnbyte)'\x65',
  /*3161*/ (asnbyte)'\x6c',
  /*3162*/ (asnbyte)'\x53',
  /*3163*/ (asnbyte)'\x74',
  /*3164*/ (asnbyte)'\x61',
  /*3165*/ (asnbyte)'\x74',
  /*3166*/ (asnbyte)'\x75',
  /*3167*/ (asnbyte)'\x73',
  /*3168*/ (asnbyte)'\x66',
  /*3169*/ (asnbyte)'\x75',
  /*3170*/ (asnbyte)'\x65',
  /*3171*/ (asnbyte)'\x6c',
  /*3172*/ (asnbyte)'\x4c',
  /*3173*/ (asnbyte)'\x65',
  /*3174*/ (asnbyte)'\x76',
  /*3175*/ (asnbyte)'\x65',
  /*3176*/ (asnbyte)'\x6c',
  /*3177*/ (asnbyte)'\x65',
  /*3178*/ (asnbyte)'\x6e',
  /*3179*/ (asnbyte)'\x67',
  /*3180*/ (asnbyte)'\x69',
  /*3181*/ (asnbyte)'\x6e',
  /*3182*/ (asnbyte)'\x65',
  /*3183*/ (asnbyte)'\x43',
  /*3184*/ (asnbyte)'\x6f',
  /*3185*/ (asnbyte)'\x6f',
  /*3186*/ (asnbyte)'\x6c',
  /*3187*/ (asnbyte)'\x61',
  /*3188*/ (asnbyte)'\x6e',
  /*3189*/ (asnbyte)'\x74',
  /*3190*/ (asnbyte)'\x4c',
  /*3191*/ (asnbyte)'\x65',
  /*3192*/ (asnbyte)'\x76',
  /*3193*/ (asnbyte)'\x65',
  /*3194*/ (asnbyte)'\x6c',
  /*3195*/ (asnbyte)'\x53',
  /*3196*/ (asnbyte)'\x74',
  /*3197*/ (asnbyte)'\x61',
  /*3198*/ (asnbyte)'\x74',
  /*3199*/ (asnbyte)'\x75',
  /*3200*/ (asnbyte)'\x73',
  /*3201*/ (asnbyte)'\x65',
  /*3202*/ (asnbyte)'\x6e',
  /*3203*/ (asnbyte)'\x67',
  /*3204*/ (asnbyte)'\x69',
  /*3205*/ (asnbyte)'\x6e',
  /*3206*/ (asnbyte)'\x65',
  /*3207*/ (asnbyte)'\x43',
  /*3208*/ (asnbyte)'\x6f',
  /*3209*/ (asnbyte)'\x6f',
  /*3210*/ (asnbyte)'\x6c',
  /*3211*/ (asnbyte)'\x61',
  /*3212*/ (asnbyte)'\x6e',
  /*3213*/ (asnbyte)'\x74',
  /*3214*/ (asnbyte)'\x54',
  /*3215*/ (asnbyte)'\x65',
  /*3216*/ (asnbyte)'\x6d',
  /*3217*/ (asnbyte)'\x70',
  /*3218*/ (asnbyte)'\x65',
  /*3219*/ (asnbyte)'\x72',
  /*3220*/ (asnbyte)'\x61',
  /*3221*/ (asnbyte)'\x74',
  /*3222*/ (asnbyte)'\x75',
  /*3223*/ (asnbyte)'\x72',
  /*3224*/ (asnbyte)'\x65',
  /*3225*/ (asnbyte)'\x56',
  /*3226*/ (asnbyte)'\x61',
  /*3227*/ (asnbyte)'\x6c',
  /*3228*/ (asnbyte)'\x69',
  /*3229*/ (asnbyte)'\x64',
  /*3230*/ (asnbyte)'\x69',
  /*3231*/ (asnbyte)'\x74',
  /*3232*/ (asnbyte)'\x79',
  /*3233*/ (asnbyte)'\x65',
  /*3234*/ (asnbyte)'\x6e',
  /*3235*/ (asnbyte)'\x67',
  /*3236*/ (asnbyte)'\x69',
  /*3237*/ (asnbyte)'\x6e',
  /*3238*/ (asnbyte)'\x65',
  /*3239*/ (asnbyte)'\x43',
  /*3240*/ (asnbyte)'\x6f',
  /*3241*/ (asnbyte)'\x6f',
  /*3242*/ (asnbyte)'\x6c',
  /*3243*/ (asnbyte)'\x61',
  /*3244*/ (asnbyte)'\x6e',
  /*3245*/ (asnbyte)'\x74',
  /*3246*/ (asnbyte)'\x54',
  /*3247*/ (asnbyte)'\x65',
  /*3248*/ (asnbyte)'\x6d',
  /*3249*/ (asnbyte)'\x70',
  /*3250*/ (asnbyte)'\x65',
  /*3251*/ (asnbyte)'\x72',
  /*3252*/ (asnbyte)'\x61',
  /*3253*/ (asnbyte)'\x74',
  /*3254*/ (asnbyte)'\x75',
  /*3255*/ (asnbyte)'\x72',
  /*3256*/ (asnbyte)'\x65',
  /*3257*/ (asnbyte)'\x65',
  /*3258*/ (asnbyte)'\x6e',
  /*3259*/ (asnbyte)'\x67',
  /*3260*/ (asnbyte)'\x69',
  /*3261*/ (asnbyte)'\x6e',
  /*3262*/ (asnbyte)'\x65',
  /*3263*/ (asnbyte)'\x4f',
  /*3264*/ (asnbyte)'\x69',
  /*3265*/ (asnbyte)'\x6c',
  /*3266*/ (asnbyte)'\x50',
  /*3267*/ (asnbyte)'\x72',
  /*3268*/ (asnbyte)'\x65',
  /*3269*/ (asnbyte)'\x73',
  /*3270*/ (asnbyte)'\x73',
  /*3271*/ (asnbyte)'\x75',
  /*3272*/ (asnbyte)'\x72',
  /*3273*/ (asnbyte)'\x65',
  /*3274*/ (asnbyte)'\x57',
  /*3275*/ (asnbyte)'\x61',
  /*3276*/ (asnbyte)'\x72',
  /*3277*/ (asnbyte)'\x6e',
  /*3278*/ (asnbyte)'\x69',
  /*3279*/ (asnbyte)'\x6e',
  /*3280*/ (asnbyte)'\x67',
  /*3281*/ (asnbyte)'\x65',
  /*3282*/ (asnbyte)'\x6e',
  /*3283*/ (asnbyte)'\x67',
  /*3284*/ (asnbyte)'\x69',
  /*3285*/ (asnbyte)'\x6e',
  /*3286*/ (asnbyte)'\x65',
  /*3287*/ (asnbyte)'\x4f',
  /*3288*/ (asnbyte)'\x69',
  /*3289*/ (asnbyte)'\x6c',
  /*3290*/ (asnbyte)'\x54',
  /*3291*/ (asnbyte)'\x65',
  /*3292*/ (asnbyte)'\x6d',
  /*3293*/ (asnbyte)'\x70',
  /*3294*/ (asnbyte)'\x65',
  /*3295*/ (asnbyte)'\x72',
  /*3296*/ (asnbyte)'\x61',
  /*3297*/ (asnbyte)'\x74',
  /*3298*/ (asnbyte)'\x75',
  /*3299*/ (asnbyte)'\x72',
  /*3300*/ (asnbyte)'\x65',
  /*3301*/ (asnbyte)'\x65',
  /*3302*/ (asnbyte)'\x6e',
  /*3303*/ (asnbyte)'\x67',
  /*3304*/ (asnbyte)'\x69',
  /*3305*/ (asnbyte)'\x6e',
  /*3306*/ (asnbyte)'\x65',
  /*3307*/ (asnbyte)'\x4f',
  /*3308*/ (asnbyte)'\x69',
  /*3309*/ (asnbyte)'\x6c',
  /*3310*/ (asnbyte)'\x4c',
  /*3311*/ (asnbyte)'\x65',
  /*3312*/ (asnbyte)'\x76',
  /*3313*/ (asnbyte)'\x65',
  /*3314*/ (asnbyte)'\x6c',
  /*3315*/ (asnbyte)'\x53',
  /*3316*/ (asnbyte)'\x74',
  /*3317*/ (asnbyte)'\x61',
  /*3318*/ (asnbyte)'\x74',
  /*3319*/ (asnbyte)'\x75',
  /*3320*/ (asnbyte)'\x73',
  /*3321*/ (asnbyte)'\x52',
  /*3322*/ (asnbyte)'\x75',
  /*3323*/ (asnbyte)'\x6e',
  /*3324*/ (asnbyte)'\x6e',
  /*3325*/ (asnbyte)'\x69',
  /*3326*/ (asnbyte)'\x6e',
  /*3327*/ (asnbyte)'\x67',
  /*3328*/ (asnbyte)'\x53',
  /*3329*/ (asnbyte)'\x74',
  /*3330*/ (asnbyte)'\x61',
  /*3331*/ (asnbyte)'\x74',
  /*3332*/ (asnbyte)'\x75',
  /*3333*/ (asnbyte)'\x73',
  /*3334*/ (asnbyte)'\x6f',
  /*3335*/ (asnbyte)'\x74',
  /*3336*/ (asnbyte)'\x68',
  /*3337*/ (asnbyte)'\x65',
  /*3338*/ (asnbyte)'\x72',
  /*3339*/ (asnbyte)'\x65',
  /*3340*/ (asnbyte)'\x6e',
  /*3341*/ (asnbyte)'\x67',
  /*3342*/ (asnbyte)'\x69',
  /*3343*/ (asnbyte)'\x6e',
  /*3344*/ (asnbyte)'\x65',
  /*3345*/ (asnbyte)'\x52',
  /*3346*/ (asnbyte)'\x65',
  /*3347*/ (asnbyte)'\x71',
  /*3348*/ (asnbyte)'\x75',
  /*3349*/ (asnbyte)'\x65',
  /*3350*/ (asnbyte)'\x73',
  /*3351*/ (asnbyte)'\x74',
  /*3352*/ (asnbyte)'\x65',
  /*3353*/ (asnbyte)'\x6e',
  /*3354*/ (asnbyte)'\x67',
  /*3355*/ (asnbyte)'\x69',
  /*3356*/ (asnbyte)'\x6e',
  /*3357*/ (asnbyte)'\x65',
  /*3358*/ (asnbyte)'\x48',
  /*3359*/ (asnbyte)'\x6f',
  /*3360*/ (asnbyte)'\x75',
  /*3361*/ (asnbyte)'\x72',
  /*3362*/ (asnbyte)'\x73',
  /*3363*/ (asnbyte)'\x64',
  /*3364*/ (asnbyte)'\x69',
  /*3365*/ (asnbyte)'\x73',
  /*3366*/ (asnbyte)'\x74',
  /*3367*/ (asnbyte)'\x61',
  /*3368*/ (asnbyte)'\x6e',
  /*3369*/ (asnbyte)'\x63',
  /*3370*/ (asnbyte)'\x65',
  /*3371*/ (asnbyte)'\x63',
  /*3372*/ (asnbyte)'\x61',
  /*3373*/ (asnbyte)'\x6c',
  /*3374*/ (asnbyte)'\x65',
  /*3375*/ (asnbyte)'\x6e',
  /*3376*/ (asnbyte)'\x64',
  /*3377*/ (asnbyte)'\x61',
  /*3378*/ (asnbyte)'\x72',
  /*3379*/ (asnbyte)'\x76',
  /*3380*/ (asnbyte)'\x6f',
  /*3381*/ (asnbyte)'\x6c',
  /*3382*/ (asnbyte)'\x74',
  /*3383*/ (asnbyte)'\x61',
  /*3384*/ (asnbyte)'\x67',
  /*3385*/ (asnbyte)'\x65',
  /*3386*/ (asnbyte)'\x73',
  /*3387*/ (asnbyte)'\x74',
  /*3388*/ (asnbyte)'\x61',
  /*3389*/ (asnbyte)'\x74',
  /*3390*/ (asnbyte)'\x65',
  /*3391*/ (asnbyte)'\x4f',
  /*3392*/ (asnbyte)'\x66',
  /*3393*/ (asnbyte)'\x48',
  /*3394*/ (asnbyte)'\x65',
  /*3395*/ (asnbyte)'\x61',
  /*3396*/ (asnbyte)'\x6c',
  /*3397*/ (asnbyte)'\x74',
  /*3398*/ (asnbyte)'\x68',
  /*3399*/ (asnbyte)'\x42',
  /*3400*/ (asnbyte)'\x61',
  /*3401*/ (asnbyte)'\x74',
  /*3402*/ (asnbyte)'\x74',
  /*3403*/ (asnbyte)'\x65',
  /*3404*/ (asnbyte)'\x72',
  /*3405*/ (asnbyte)'\x79',
  /*3406*/ (asnbyte)'\x53',
  /*3407*/ (asnbyte)'\x74',
  /*3408*/ (asnbyte)'\x61',
  /*3409*/ (asnbyte)'\x74',
  /*3410*/ (asnbyte)'\x75',
  /*3411*/ (asnbyte)'\x73',
  /*3412*/ (asnbyte)'\x77',
  /*3413*/ (asnbyte)'\x61',
  /*3414*/ (asnbyte)'\x73',
  /*3415*/ (asnbyte)'\x68',
  /*3416*/ (asnbyte)'\x65',
  /*3417*/ (asnbyte)'\x72',
  /*3418*/ (asnbyte)'\x46',
  /*3419*/ (asnbyte)'\x6c',
  /*3420*/ (asnbyte)'\x75',
  /*3421*/ (asnbyte)'\x69',
  /*3422*/ (asnbyte)'\x64',
  /*3423*/ (asnbyte)'\x4c',
  /*3424*/ (asnbyte)'\x65',
  /*3425*/ (asnbyte)'\x76',
  /*3426*/ (asnbyte)'\x65',
  /*3427*/ (asnbyte)'\x6c',
  /*3428*/ (asnbyte)'\x53',
  /*3429*/ (asnbyte)'\x74',
  /*3430*/ (asnbyte)'\x61',
  /*3431*/ (asnbyte)'\x74',
  /*3432*/ (asnbyte)'\x75',
  /*3433*/ (asnbyte)'\x73',
  /*3434*/ (asnbyte)'\x62',
  /*3435*/ (asnbyte)'\x72',
  /*3436*/ (asnbyte)'\x61',
  /*3437*/ (asnbyte)'\x6b',
  /*3438*/ (asnbyte)'\x65',
  /*3439*/ (asnbyte)'\x46',
  /*3440*/ (asnbyte)'\x6c',
  /*3441*/ (asnbyte)'\x75',
  /*3442*/ (asnbyte)'\x69',
  /*3443*/ (asnbyte)'\x64',
  /*3444*/ (asnbyte)'\x4c',
  /*3445*/ (asnbyte)'\x65',
  /*3446*/ (asnbyte)'\x76',
  /*3447*/ (asnbyte)'\x65',
  /*3448*/ (asnbyte)'\x6c',
  /*3449*/ (asnbyte)'\x53',
  /*3450*/ (asnbyte)'\x74',
  /*3451*/ (asnbyte)'\x61',
  /*3452*/ (asnbyte)'\x74',
  /*3453*/ (asnbyte)'\x75',
  /*3454*/ (asnbyte)'\x73',
  /*3455*/ (asnbyte)'\x73',
  /*3456*/ (asnbyte)'\x65',
  /*3457*/ (asnbyte)'\x72',
  /*3458*/ (asnbyte)'\x76',
  /*3459*/ (asnbyte)'\x69',
  /*3460*/ (asnbyte)'\x63',
  /*3461*/ (asnbyte)'\x65',
  /*3462*/ (asnbyte)'\x57',
  /*3463*/ (asnbyte)'\x61',
  /*3464*/ (asnbyte)'\x72',
  /*3465*/ (asnbyte)'\x6e',
  /*3466*/ (asnbyte)'\x69',
  /*3467*/ (asnbyte)'\x6e',
  /*3468*/ (asnbyte)'\x67',
  /*3469*/ (asnbyte)'\x54',
  /*3470*/ (asnbyte)'\x72',
  /*3471*/ (asnbyte)'\x69',
  /*3472*/ (asnbyte)'\x67',
  /*3473*/ (asnbyte)'\x67',
  /*3474*/ (asnbyte)'\x65',
  /*3475*/ (asnbyte)'\x72',
  /*3476*/ (asnbyte)'\x73',
  /*3477*/ (asnbyte)'\x65',
  /*3478*/ (asnbyte)'\x72',
  /*3479*/ (asnbyte)'\x76',
  /*3480*/ (asnbyte)'\x69',
  /*3481*/ (asnbyte)'\x63',
  /*3482*/ (asnbyte)'\x65',
  /*3483*/ (asnbyte)'\x57',
  /*3484*/ (asnbyte)'\x61',
  /*3485*/ (asnbyte)'\x72',
  /*3486*/ (asnbyte)'\x6e',
  /*3487*/ (asnbyte)'\x69',
  /*3488*/ (asnbyte)'\x6e',
  /*3489*/ (asnbyte)'\x67',
  /*3490*/ (asnbyte)'\x53',
  /*3491*/ (asnbyte)'\x74',
  /*3492*/ (asnbyte)'\x61',
  /*3493*/ (asnbyte)'\x74',
  /*3494*/ (asnbyte)'\x75',
  /*3495*/ (asnbyte)'\x73',
  /*3496*/ (asnbyte)'\x64',
  /*3497*/ (asnbyte)'\x61',
  /*3498*/ (asnbyte)'\x79',
  /*3499*/ (asnbyte)'\x73',
  /*3500*/ (asnbyte)'\x54',
  /*3501*/ (asnbyte)'\x6f',
  /*3502*/ (asnbyte)'\x53',
  /*3503*/ (asnbyte)'\x65',
  /*3504*/ (asnbyte)'\x72',
  /*3505*/ (asnbyte)'\x76',
  /*3506*/ (asnbyte)'\x69',
  /*3507*/ (asnbyte)'\x63',
  /*3508*/ (asnbyte)'\x65',
  /*3509*/ (asnbyte)'\x64',
  /*3510*/ (asnbyte)'\x69',
  /*3511*/ (asnbyte)'\x73',
  /*3512*/ (asnbyte)'\x74',
  /*3513*/ (asnbyte)'\x61',
  /*3514*/ (asnbyte)'\x6e',
  /*3515*/ (asnbyte)'\x63',
  /*3516*/ (asnbyte)'\x65',
  /*3517*/ (asnbyte)'\x54',
  /*3518*/ (asnbyte)'\x6f',
  /*3519*/ (asnbyte)'\x53',
  /*3520*/ (asnbyte)'\x65',
  /*3521*/ (asnbyte)'\x72',
  /*3522*/ (asnbyte)'\x76',
  /*3523*/ (asnbyte)'\x69',
  /*3524*/ (asnbyte)'\x63',
  /*3525*/ (asnbyte)'\x65',
  /*3526*/ (asnbyte)'\x65',
  /*3527*/ (asnbyte)'\x6e',
  /*3528*/ (asnbyte)'\x67',
  /*3529*/ (asnbyte)'\x69',
  /*3530*/ (asnbyte)'\x6e',
  /*3531*/ (asnbyte)'\x65',
  /*3532*/ (asnbyte)'\x48',
  /*3533*/ (asnbyte)'\x72',
  /*3534*/ (asnbyte)'\x73',
  /*3535*/ (asnbyte)'\x54',
  /*3536*/ (asnbyte)'\x6f',
  /*3537*/ (asnbyte)'\x53',
  /*3538*/ (asnbyte)'\x65',
  /*3539*/ (asnbyte)'\x72',
  /*3540*/ (asnbyte)'\x76',
  /*3541*/ (asnbyte)'\x69',
  /*3542*/ (asnbyte)'\x63',
  /*3543*/ (asnbyte)'\x65',
  /*3544*/ (asnbyte)'\x74',
  /*3545*/ (asnbyte)'\x79',
  /*3546*/ (asnbyte)'\x72',
  /*3547*/ (asnbyte)'\x65',
  /*3548*/ (asnbyte)'\x50',
  /*3549*/ (asnbyte)'\x72',
  /*3550*/ (asnbyte)'\x65',
  /*3551*/ (asnbyte)'\x57',
  /*3552*/ (asnbyte)'\x61',
  /*3553*/ (asnbyte)'\x72',
  /*3554*/ (asnbyte)'\x6e',
  /*3555*/ (asnbyte)'\x69',
  /*3556*/ (asnbyte)'\x6e',
  /*3557*/ (asnbyte)'\x67',
  /*3558*/ (asnbyte)'\x50',
  /*3559*/ (asnbyte)'\x61',
  /*3560*/ (asnbyte)'\x73',
  /*3561*/ (asnbyte)'\x73',
  /*3562*/ (asnbyte)'\x65',
  /*3563*/ (asnbyte)'\x6e',
  /*3564*/ (asnbyte)'\x67',
  /*3565*/ (asnbyte)'\x65',
  /*3566*/ (asnbyte)'\x72',
  /*3567*/ (asnbyte)'\x52',
  /*3568*/ (asnbyte)'\x65',
  /*3569*/ (asnbyte)'\x61',
  /*3570*/ (asnbyte)'\x72',
  /*3571*/ (asnbyte)'\x74',
  /*3572*/ (asnbyte)'\x79',
  /*3573*/ (asnbyte)'\x72',
  /*3574*/ (asnbyte)'\x65',
  /*3575*/ (asnbyte)'\x50',
  /*3576*/ (asnbyte)'\x72',
  /*3577*/ (asnbyte)'\x65',
  /*3578*/ (asnbyte)'\x57',
  /*3579*/ (asnbyte)'\x61',
  /*3580*/ (asnbyte)'\x72',
  /*3581*/ (asnbyte)'\x6e',
  /*3582*/ (asnbyte)'\x69',
  /*3583*/ (asnbyte)'\x6e',
  /*3584*/ (asnbyte)'\x67',
  /*3585*/ (asnbyte)'\x44',
  /*3586*/ (asnbyte)'\x72',
  /*3587*/ (asnbyte)'\x69',
  /*3588*/ (asnbyte)'\x76',
  /*3589*/ (asnbyte)'\x65',
  /*3590*/ (asnbyte)'\x72',
  /*3591*/ (asnbyte)'\x52',
  /*3592*/ (asnbyte)'\x65',
  /*3593*/ (asnbyte)'\x61',
  /*3594*/ (asnbyte)'\x72',
  /*3595*/ (asnbyte)'\x74',
  /*3596*/ (asnbyte)'\x79',
  /*3597*/ (asnbyte)'\x72',
  /*3598*/ (asnbyte)'\x65',
  /*3599*/ (asnbyte)'\x50',
  /*3600*/ (asnbyte)'\x72',
  /*3601*/ (asnbyte)'\x65',
  /*3602*/ (asnbyte)'\x57',
  /*3603*/ (asnbyte)'\x61',
  /*3604*/ (asnbyte)'\x72',
  /*3605*/ (asnbyte)'\x6e',
  /*3606*/ (asnbyte)'\x69',
  /*3607*/ (asnbyte)'\x6e',
  /*3608*/ (asnbyte)'\x67',
  /*3609*/ (asnbyte)'\x50',
  /*3610*/ (asnbyte)'\x61',
  /*3611*/ (asnbyte)'\x73',
  /*3612*/ (asnbyte)'\x73',
  /*3613*/ (asnbyte)'\x65',
  /*3614*/ (asnbyte)'\x6e',
  /*3615*/ (asnbyte)'\x67',
  /*3616*/ (asnbyte)'\x65',
  /*3617*/ (asnbyte)'\x72',
  /*3618*/ (asnbyte)'\x74',
  /*3619*/ (asnbyte)'\x79',
  /*3620*/ (asnbyte)'\x72',
  /*3621*/ (asnbyte)'\x65',
  /*3622*/ (asnbyte)'\x50',
  /*3623*/ (asnbyte)'\x72',
  /*3624*/ (asnbyte)'\x65',
  /*3625*/ (asnbyte)'\x57',
  /*3626*/ (asnbyte)'\x61',
  /*3627*/ (asnbyte)'\x72',
  /*3628*/ (asnbyte)'\x6e',
  /*3629*/ (asnbyte)'\x69',
  /*3630*/ (asnbyte)'\x6e',
  /*3631*/ (asnbyte)'\x67',
  /*3632*/ (asnbyte)'\x44',
  /*3633*/ (asnbyte)'\x72',
  /*3634*/ (asnbyte)'\x69',
  /*3635*/ (asnbyte)'\x76',
  /*3636*/ (asnbyte)'\x65',
  /*3637*/ (asnbyte)'\x72',
  /*3638*/ (asnbyte)'\x74',
  /*3639*/ (asnbyte)'\x79',
  /*3640*/ (asnbyte)'\x72',
  /*3641*/ (asnbyte)'\x65',
  /*3642*/ (asnbyte)'\x53',
  /*3643*/ (asnbyte)'\x74',
  /*3644*/ (asnbyte)'\x61',
  /*3645*/ (asnbyte)'\x74',
  /*3646*/ (asnbyte)'\x75',
  /*3647*/ (asnbyte)'\x73',
  /*3648*/ (asnbyte)'\x50',
  /*3649*/ (asnbyte)'\x61',
  /*3650*/ (asnbyte)'\x73',
  /*3651*/ (asnbyte)'\x73',
  /*3652*/ (asnbyte)'\x65',
  /*3653*/ (asnbyte)'\x6e',
  /*3654*/ (asnbyte)'\x67',
  /*3655*/ (asnbyte)'\x65',
  /*3656*/ (asnbyte)'\x72',
  /*3657*/ (asnbyte)'\x52',
  /*3658*/ (asnbyte)'\x65',
  /*3659*/ (asnbyte)'\x61',
  /*3660*/ (asnbyte)'\x72',
  /*3661*/ (asnbyte)'\x74',
  /*3662*/ (asnbyte)'\x79',
  /*3663*/ (asnbyte)'\x72',
  /*3664*/ (asnbyte)'\x65',
  /*3665*/ (asnbyte)'\x53',
  /*3666*/ (asnbyte)'\x74',
  /*3667*/ (asnbyte)'\x61',
  /*3668*/ (asnbyte)'\x74',
  /*3669*/ (asnbyte)'\x75',
  /*3670*/ (asnbyte)'\x73',
  /*3671*/ (asnbyte)'\x44',
  /*3672*/ (asnbyte)'\x72',
  /*3673*/ (asnbyte)'\x69',
  /*3674*/ (asnbyte)'\x76',
  /*3675*/ (asnbyte)'\x65',
  /*3676*/ (asnbyte)'\x72',
  /*3677*/ (asnbyte)'\x52',
  /*3678*/ (asnbyte)'\x65',
  /*3679*/ (asnbyte)'\x61',
  /*3680*/ (asnbyte)'\x72',
  /*3681*/ (asnbyte)'\x74',
  /*3682*/ (asnbyte)'\x79',
  /*3683*/ (asnbyte)'\x72',
  /*3684*/ (asnbyte)'\x65',
  /*3685*/ (asnbyte)'\x53',
  /*3686*/ (asnbyte)'\x74',
  /*3687*/ (asnbyte)'\x61',
  /*3688*/ (asnbyte)'\x74',
  /*3689*/ (asnbyte)'\x75',
  /*3690*/ (asnbyte)'\x73',
  /*3691*/ (asnbyte)'\x50',
  /*3692*/ (asnbyte)'\x61',
  /*3693*/ (asnbyte)'\x73',
  /*3694*/ (asnbyte)'\x73',
  /*3695*/ (asnbyte)'\x65',
  /*3696*/ (asnbyte)'\x6e',
  /*3697*/ (asnbyte)'\x67',
  /*3698*/ (asnbyte)'\x65',
  /*3699*/ (asnbyte)'\x72',
  /*3700*/ (asnbyte)'\x74',
  /*3701*/ (asnbyte)'\x79',
  /*3702*/ (asnbyte)'\x72',
  /*3703*/ (asnbyte)'\x65',
  /*3704*/ (asnbyte)'\x53',
  /*3705*/ (asnbyte)'\x74',
  /*3706*/ (asnbyte)'\x61',
  /*3707*/ (asnbyte)'\x74',
  /*3708*/ (asnbyte)'\x75',
  /*3709*/ (asnbyte)'\x73',
  /*3710*/ (asnbyte)'\x44',
  /*3711*/ (asnbyte)'\x72',
  /*3712*/ (asnbyte)'\x69',
  /*3713*/ (asnbyte)'\x76',
  /*3714*/ (asnbyte)'\x65',
  /*3715*/ (asnbyte)'\x72',
  /*3716*/ (asnbyte)'\x6d',
  /*3717*/ (asnbyte)'\x61',
  /*3718*/ (asnbyte)'\x69',
  /*3719*/ (asnbyte)'\x6e',
  /*3720*/ (asnbyte)'\x42',
  /*3721*/ (asnbyte)'\x61',
  /*3722*/ (asnbyte)'\x74',
  /*3723*/ (asnbyte)'\x74',
  /*3724*/ (asnbyte)'\x65',
  /*3725*/ (asnbyte)'\x72',
  /*3726*/ (asnbyte)'\x79',
  /*3727*/ (asnbyte)'\x53',
  /*3728*/ (asnbyte)'\x74',
  /*3729*/ (asnbyte)'\x61',
  /*3730*/ (asnbyte)'\x74',
  /*3731*/ (asnbyte)'\x75',
  /*3732*/ (asnbyte)'\x73',
  /*3733*/ (asnbyte)'\x4d',
  /*3734*/ (asnbyte)'\x61',
  /*3735*/ (asnbyte)'\x69',
  /*3736*/ (asnbyte)'\x6e',
  /*3737*/ (asnbyte)'\x74',
  /*3738*/ (asnbyte)'\x65',
  /*3739*/ (asnbyte)'\x6e',
  /*3740*/ (asnbyte)'\x61',
  /*3741*/ (asnbyte)'\x6e',
  /*3742*/ (asnbyte)'\x63',
  /*3743*/ (asnbyte)'\x65',
  /*3744*/ (asnbyte)'\x53',
  /*3745*/ (asnbyte)'\x74',
  /*3746*/ (asnbyte)'\x61',
  /*3747*/ (asnbyte)'\x74',
  /*3748*/ (asnbyte)'\x75',
  /*3749*/ (asnbyte)'\x73',
  /*3750*/ (asnbyte)'\x73',
  /*3751*/ (asnbyte)'\x72',
  /*3752*/ (asnbyte)'\x73',
  /*3753*/ (asnbyte)'\x2d',
  /*3754*/ (asnbyte)'\x64',
  /*3755*/ (asnbyte)'\x65',
  /*3756*/ (asnbyte)'\x70',
  /*3757*/ (asnbyte)'\x6c',
  /*3758*/ (asnbyte)'\x6f',
  /*3759*/ (asnbyte)'\x79',
  /*3760*/ (asnbyte)'\x65',
  /*3761*/ (asnbyte)'\x64',
  /*3762*/ (asnbyte)'\x73',
  /*3763*/ (asnbyte)'\x72',
  /*3764*/ (asnbyte)'\x73',
  /*3765*/ (asnbyte)'\x2d',
  /*3766*/ (asnbyte)'\x6e',
  /*3767*/ (asnbyte)'\x6f',
  /*3768*/ (asnbyte)'\x74',
  /*3769*/ (asnbyte)'\x2d',
  /*3770*/ (asnbyte)'\x64',
  /*3771*/ (asnbyte)'\x65',
  /*3772*/ (asnbyte)'\x70',
  /*3773*/ (asnbyte)'\x6c',
  /*3774*/ (asnbyte)'\x6f',
  /*3775*/ (asnbyte)'\x79',
  /*3776*/ (asnbyte)'\x65',
  /*3777*/ (asnbyte)'\x64',
  /*3778*/ (asnbyte)'\x6e',
  /*3779*/ (asnbyte)'\x6f',
  /*3780*/ (asnbyte)'\x2d',
  /*3781*/ (asnbyte)'\x73',
  /*3782*/ (asnbyte)'\x72',
  /*3783*/ (asnbyte)'\x73',
  /*3784*/ (asnbyte)'\x2d',
  /*3785*/ (asnbyte)'\x69',
  /*3786*/ (asnbyte)'\x6e',
  /*3787*/ (asnbyte)'\x66',
  /*3788*/ (asnbyte)'\x6f',
  /*3789*/ (asnbyte)'\x65',
  /*3790*/ (asnbyte)'\x6c',
  /*3791*/ (asnbyte)'\x65',
  /*3792*/ (asnbyte)'\x63',
  /*3793*/ (asnbyte)'\x74',
  /*3794*/ (asnbyte)'\x72',
  /*3795*/ (asnbyte)'\x69',
  /*3796*/ (asnbyte)'\x63',
  /*3797*/ (asnbyte)'\x50',
  /*3798*/ (asnbyte)'\x61',
  /*3799*/ (asnbyte)'\x72',
  /*3800*/ (asnbyte)'\x6b',
  /*3801*/ (asnbyte)'\x42',
  /*3802*/ (asnbyte)'\x72',
  /*3803*/ (asnbyte)'\x61',
  /*3804*/ (asnbyte)'\x6b',
  /*3805*/ (asnbyte)'\x65',
  /*3806*/ (asnbyte)'\x53',
  /*3807*/ (asnbyte)'\x74',
  /*3808*/ (asnbyte)'\x61',
  /*3809*/ (asnbyte)'\x74',
  /*3810*/ (asnbyte)'\x75',
  /*3811*/ (asnbyte)'\x73',
  /*3812*/ (asnbyte)'\x56',
  /*3813*/ (asnbyte)'\x61',
  /*3814*/ (asnbyte)'\x6c',
  /*3815*/ (asnbyte)'\x69',
  /*3816*/ (asnbyte)'\x64',
  /*3817*/ (asnbyte)'\x69',
  /*3818*/ (asnbyte)'\x74',
  /*3819*/ (asnbyte)'\x79',
  /*3820*/ (asnbyte)'\x65',
  /*3821*/ (asnbyte)'\x6c',
  /*3822*/ (asnbyte)'\x65',
  /*3823*/ (asnbyte)'\x63',
  /*3824*/ (asnbyte)'\x74',
  /*3825*/ (asnbyte)'\x72',
  /*3826*/ (asnbyte)'\x69',
  /*3827*/ (asnbyte)'\x63',
  /*3828*/ (asnbyte)'\x50',
  /*3829*/ (asnbyte)'\x61',
  /*3830*/ (asnbyte)'\x72',
  /*3831*/ (asnbyte)'\x6b',
  /*3832*/ (asnbyte)'\x42',
  /*3833*/ (asnbyte)'\x72',
  /*3834*/ (asnbyte)'\x61',
  /*3835*/ (asnbyte)'\x6b',
  /*3836*/ (asnbyte)'\x65',
  /*3837*/ (asnbyte)'\x53',
  /*3838*/ (asnbyte)'\x74',
  /*3839*/ (asnbyte)'\x61',
  /*3840*/ (asnbyte)'\x74',
  /*3841*/ (asnbyte)'\x75',
  /*3842*/ (asnbyte)'\x73',
  /*3843*/ (asnbyte)'\x68',
  /*3844*/ (asnbyte)'\x61',
  /*3845*/ (asnbyte)'\x6e',
  /*3846*/ (asnbyte)'\x64',
  /*3847*/ (asnbyte)'\x42',
  /*3848*/ (asnbyte)'\x72',
  /*3849*/ (asnbyte)'\x61',
  /*3850*/ (asnbyte)'\x6b',
  /*3851*/ (asnbyte)'\x65',
  /*3852*/ (asnbyte)'\x53',
  /*3853*/ (asnbyte)'\x74',
  /*3854*/ (asnbyte)'\x61',
  /*3855*/ (asnbyte)'\x74',
  /*3856*/ (asnbyte)'\x75',
  /*3857*/ (asnbyte)'\x73',
  /*3858*/ (asnbyte)'\x73',
  /*3859*/ (asnbyte)'\x65',
  /*3860*/ (asnbyte)'\x61',
  /*3861*/ (asnbyte)'\x74',
  /*3862*/ (asnbyte)'\x42',
  /*3863*/ (asnbyte)'\x65',
  /*3864*/ (asnbyte)'\x6c',
  /*3865*/ (asnbyte)'\x74',
  /*3866*/ (asnbyte)'\x53',
  /*3867*/ (asnbyte)'\x74',
  /*3868*/ (asnbyte)'\x61',
  /*3869*/ (asnbyte)'\x74',
  /*3870*/ (asnbyte)'\x75',
  /*3871*/ (asnbyte)'\x73',
  /*3872*/ (asnbyte)'\x50',
  /*3873*/ (asnbyte)'\x61',
  /*3874*/ (asnbyte)'\x73',
  /*3875*/ (asnbyte)'\x73',
  /*3876*/ (asnbyte)'\x65',
  /*3877*/ (asnbyte)'\x6e',
  /*3878*/ (asnbyte)'\x67',
  /*3879*/ (asnbyte)'\x65',
  /*3880*/ (asnbyte)'\x72',
  /*3881*/ (asnbyte)'\x52',
  /*3882*/ (asnbyte)'\x65',
  /*3883*/ (asnbyte)'\x61',
  /*3884*/ (asnbyte)'\x72',
  /*3885*/ (asnbyte)'\x73',
  /*3886*/ (asnbyte)'\x65',
  /*3887*/ (asnbyte)'\x61',
  /*3888*/ (asnbyte)'\x74',
  /*3889*/ (asnbyte)'\x42',
  /*3890*/ (asnbyte)'\x65',
  /*3891*/ (asnbyte)'\x6c',
  /*3892*/ (asnbyte)'\x74',
  /*3893*/ (asnbyte)'\x53',
  /*3894*/ (asnbyte)'\x74',
  /*3895*/ (asnbyte)'\x61',
  /*3896*/ (asnbyte)'\x74',
  /*3897*/ (asnbyte)'\x75',
  /*3898*/ (asnbyte)'\x73',
  /*3899*/ (asnbyte)'\x44',
  /*3900*/ (asnbyte)'\x72',
  /*3901*/ (asnbyte)'\x69',
  /*3902*/ (asnbyte)'\x76',
  /*3903*/ (asnbyte)'\x65',
  /*3904*/ (asnbyte)'\x72',
  /*3905*/ (asnbyte)'\x52',
  /*3906*/ (asnbyte)'\x65',
  /*3907*/ (asnbyte)'\x61',
  /*3908*/ (asnbyte)'\x72',
  /*3909*/ (asnbyte)'\x73',
  /*3910*/ (asnbyte)'\x65',
  /*3911*/ (asnbyte)'\x61',
  /*3912*/ (asnbyte)'\x74',
  /*3913*/ (asnbyte)'\x42',
  /*3914*/ (asnbyte)'\x65',
  /*3915*/ (asnbyte)'\x6c',
  /*3916*/ (asnbyte)'\x74',
  /*3917*/ (asnbyte)'\x53',
  /*3918*/ (asnbyte)'\x74',
  /*3919*/ (asnbyte)'\x61',
  /*3920*/ (asnbyte)'\x74',
  /*3921*/ (asnbyte)'\x75',
  /*3922*/ (asnbyte)'\x73',
  /*3923*/ (asnbyte)'\x50',
  /*3924*/ (asnbyte)'\x61',
  /*3925*/ (asnbyte)'\x73',
  /*3926*/ (asnbyte)'\x73',
  /*3927*/ (asnbyte)'\x65',
  /*3928*/ (asnbyte)'\x6e',
  /*3929*/ (asnbyte)'\x67',
  /*3930*/ (asnbyte)'\x65',
  /*3931*/ (asnbyte)'\x72',
  /*3932*/ (asnbyte)'\x73',
  /*3933*/ (asnbyte)'\x65',
  /*3934*/ (asnbyte)'\x61',
  /*3935*/ (asnbyte)'\x74',
  /*3936*/ (asnbyte)'\x42',
  /*3937*/ (asnbyte)'\x65',
  /*3938*/ (asnbyte)'\x6c',
  /*3939*/ (asnbyte)'\x74',
  /*3940*/ (asnbyte)'\x53',
  /*3941*/ (asnbyte)'\x74',
  /*3942*/ (asnbyte)'\x61',
  /*3943*/ (asnbyte)'\x74',
  /*3944*/ (asnbyte)'\x75',
  /*3945*/ (asnbyte)'\x73',
  /*3946*/ (asnbyte)'\x44',
  /*3947*/ (asnbyte)'\x72',
  /*3948*/ (asnbyte)'\x69',
  /*3949*/ (asnbyte)'\x76',
  /*3950*/ (asnbyte)'\x65',
  /*3951*/ (asnbyte)'\x72',
  /*3952*/ (asnbyte)'\x63',
  /*3953*/ (asnbyte)'\x65',
  /*3954*/ (asnbyte)'\x6e',
  /*3955*/ (asnbyte)'\x74',
  /*3956*/ (asnbyte)'\x72',
  /*3957*/ (asnbyte)'\x61',
  /*3958*/ (asnbyte)'\x6c',
  /*3959*/ (asnbyte)'\x4c',
  /*3960*/ (asnbyte)'\x6f',
  /*3961*/ (asnbyte)'\x63',
  /*3962*/ (asnbyte)'\x6b',
  /*3963*/ (asnbyte)'\x69',
  /*3964*/ (asnbyte)'\x6e',
  /*3965*/ (asnbyte)'\x67',
  /*3966*/ (asnbyte)'\x53',
  /*3967*/ (asnbyte)'\x74',
  /*3968*/ (asnbyte)'\x61',
  /*3969*/ (asnbyte)'\x74',
  /*3970*/ (asnbyte)'\x75',
  /*3971*/ (asnbyte)'\x73',
  /*3972*/ (asnbyte)'\x65',
  /*3973*/ (asnbyte)'\x6e',
  /*3974*/ (asnbyte)'\x67',
  /*3975*/ (asnbyte)'\x69',
  /*3976*/ (asnbyte)'\x6e',
  /*3977*/ (asnbyte)'\x65',
  /*3978*/ (asnbyte)'\x48',
  /*3979*/ (asnbyte)'\x6f',
  /*3980*/ (asnbyte)'\x6f',
  /*3981*/ (asnbyte)'\x64',
  /*3982*/ (asnbyte)'\x4f',
  /*3983*/ (asnbyte)'\x70',
  /*3984*/ (asnbyte)'\x65',
  /*3985*/ (asnbyte)'\x6e',
  /*3986*/ (asnbyte)'\x53',
  /*3987*/ (asnbyte)'\x74',
  /*3988*/ (asnbyte)'\x61',
  /*3989*/ (asnbyte)'\x74',
  /*3990*/ (asnbyte)'\x75',
  /*3991*/ (asnbyte)'\x73',
  /*3992*/ (asnbyte)'\x74',
  /*3993*/ (asnbyte)'\x72',
  /*3994*/ (asnbyte)'\x75',
  /*3995*/ (asnbyte)'\x6e',
  /*3996*/ (asnbyte)'\x6b',
  /*3997*/ (asnbyte)'\x4c',
  /*3998*/ (asnbyte)'\x6f',
  /*3999*/ (asnbyte)'\x63',
  /*4000*/ (asnbyte)'\x6b',
  /*4001*/ (asnbyte)'\x53',
  /*4002*/ (asnbyte)'\x74',
  /*4003*/ (asnbyte)'\x61',
  /*4004*/ (asnbyte)'\x74',
  /*4005*/ (asnbyte)'\x75',
  /*4006*/ (asnbyte)'\x73',
  /*4007*/ (asnbyte)'\x74',
  /*4008*/ (asnbyte)'\x72',
  /*4009*/ (asnbyte)'\x75',
  /*4010*/ (asnbyte)'\x6e',
  /*4011*/ (asnbyte)'\x6b',
  /*4012*/ (asnbyte)'\x4f',
  /*4013*/ (asnbyte)'\x70',
  /*4014*/ (asnbyte)'\x65',
  /*4015*/ (asnbyte)'\x6e',
  /*4016*/ (asnbyte)'\x53',
  /*4017*/ (asnbyte)'\x74',
  /*4018*/ (asnbyte)'\x61',
  /*4019*/ (asnbyte)'\x74',
  /*4020*/ (asnbyte)'\x75',
  /*4021*/ (asnbyte)'\x73',
  /*4022*/ (asnbyte)'\x64',
  /*4023*/ (asnbyte)'\x6f',
  /*4024*/ (asnbyte)'\x6f',
  /*4025*/ (asnbyte)'\x72',
  /*4026*/ (asnbyte)'\x4c',
  /*4027*/ (asnbyte)'\x6f',
  /*4028*/ (asnbyte)'\x63',
  /*4029*/ (asnbyte)'\x6b',
  /*4030*/ (asnbyte)'\x53',
  /*4031*/ (asnbyte)'\x74',
  /*4032*/ (asnbyte)'\x61',
  /*4033*/ (asnbyte)'\x74',
  /*4034*/ (asnbyte)'\x75',
  /*4035*/ (asnbyte)'\x73',
  /*4036*/ (asnbyte)'\x50',
  /*4037*/ (asnbyte)'\x61',
  /*4038*/ (asnbyte)'\x73',
  /*4039*/ (asnbyte)'\x73',
  /*4040*/ (asnbyte)'\x65',
  /*4041*/ (asnbyte)'\x6e',
  /*4042*/ (asnbyte)'\x67',
  /*4043*/ (asnbyte)'\x65',
  /*4044*/ (asnbyte)'\x72',
  /*4045*/ (asnbyte)'\x52',
  /*4046*/ (asnbyte)'\x65',
  /*4047*/ (asnbyte)'\x61',
  /*4048*/ (asnbyte)'\x72',
  /*4049*/ (asnbyte)'\x64',
  /*4050*/ (asnbyte)'\x6f',
  /*4051*/ (asnbyte)'\x6f',
  /*4052*/ (asnbyte)'\x72',
  /*4053*/ (asnbyte)'\x4c',
  /*4054*/ (asnbyte)'\x6f',
  /*4055*/ (asnbyte)'\x63',
  /*4056*/ (asnbyte)'\x6b',
  /*4057*/ (asnbyte)'\x53',
  /*4058*/ (asnbyte)'\x74',
  /*4059*/ (asnbyte)'\x61',
  /*4060*/ (asnbyte)'\x74',
  /*4061*/ (asnbyte)'\x75',
  /*4062*/ (asnbyte)'\x73',
  /*4063*/ (asnbyte)'\x44',
  /*4064*/ (asnbyte)'\x72',
  /*4065*/ (asnbyte)'\x69',
  /*4066*/ (asnbyte)'\x76',
  /*4067*/ (asnbyte)'\x65',
  /*4068*/ (asnbyte)'\x72',
  /*4069*/ (asnbyte)'\x52',
  /*4070*/ (asnbyte)'\x65',
  /*4071*/ (asnbyte)'\x61',
  /*4072*/ (asnbyte)'\x72',
  /*4073*/ (asnbyte)'\x64',
  /*4074*/ (asnbyte)'\x6f',
  /*4075*/ (asnbyte)'\x6f',
  /*4076*/ (asnbyte)'\x72',
  /*4077*/ (asnbyte)'\x4c',
  /*4078*/ (asnbyte)'\x6f',
  /*4079*/ (asnbyte)'\x63',
  /*4080*/ (asnbyte)'\x6b',
  /*4081*/ (asnbyte)'\x53',
  /*4082*/ (asnbyte)'\x74',
  /*4083*/ (asnbyte)'\x61',
  /*4084*/ (asnbyte)'\x74',
  /*4085*/ (asnbyte)'\x75',
  /*4086*/ (asnbyte)'\x73',
  /*4087*/ (asnbyte)'\x50',
  /*4088*/ (asnbyte)'\x61',
  /*4089*/ (asnbyte)'\x73',
  /*4090*/ (asnbyte)'\x73',
  /*4091*/ (asnbyte)'\x65',
  /*4092*/ (asnbyte)'\x6e',
  /*4093*/ (asnbyte)'\x67',
  /*4094*/ (asnbyte)'\x65',
  /*4095*/ (asnbyte)'\x72',
  /*4096*/ (asnbyte)'\x64',
  /*4097*/ (asnbyte)'\x6f',
  /*4098*/ (asnbyte)'\x6f',
  /*4099*/ (asnbyte)'\x72',
  /*4100*/ (asnbyte)'\x4c',
  /*4101*/ (asnbyte)'\x6f',
  /*4102*/ (asnbyte)'\x63',
  /*4103*/ (asnbyte)'\x6b',
  /*4104*/ (asnbyte)'\x53',
  /*4105*/ (asnbyte)'\x74',
  /*4106*/ (asnbyte)'\x61',
  /*4107*/ (asnbyte)'\x74',
  /*4108*/ (asnbyte)'\x75',
  /*4109*/ (asnbyte)'\x73',
  /*4110*/ (asnbyte)'\x44',
  /*4111*/ (asnbyte)'\x72',
  /*4112*/ (asnbyte)'\x69',
  /*4113*/ (asnbyte)'\x76',
  /*4114*/ (asnbyte)'\x65',
  /*4115*/ (asnbyte)'\x72',
  /*4116*/ (asnbyte)'\x64',
  /*4117*/ (asnbyte)'\x6f',
  /*4118*/ (asnbyte)'\x6f',
  /*4119*/ (asnbyte)'\x72',
  /*4120*/ (asnbyte)'\x4f',
  /*4121*/ (asnbyte)'\x70',
  /*4122*/ (asnbyte)'\x65',
  /*4123*/ (asnbyte)'\x6e',
  /*4124*/ (asnbyte)'\x53',
  /*4125*/ (asnbyte)'\x74',
  /*4126*/ (asnbyte)'\x61',
  /*4127*/ (asnbyte)'\x74',
  /*4128*/ (asnbyte)'\x75',
  /*4129*/ (asnbyte)'\x73',
  /*4130*/ (asnbyte)'\x50',
  /*4131*/ (asnbyte)'\x61',
  /*4132*/ (asnbyte)'\x73',
  /*4133*/ (asnbyte)'\x73',
  /*4134*/ (asnbyte)'\x65',
  /*4135*/ (asnbyte)'\x6e',
  /*4136*/ (asnbyte)'\x67',
  /*4137*/ (asnbyte)'\x65',
  /*4138*/ (asnbyte)'\x72',
  /*4139*/ (asnbyte)'\x52',
  /*4140*/ (asnbyte)'\x65',
  /*4141*/ (asnbyte)'\x61',
  /*4142*/ (asnbyte)'\x72',
  /*4143*/ (asnbyte)'\x64',
  /*4144*/ (asnbyte)'\x6f',
  /*4145*/ (asnbyte)'\x6f',
  /*4146*/ (asnbyte)'\x72',
  /*4147*/ (asnbyte)'\x4f',
  /*4148*/ (asnbyte)'\x70',
  /*4149*/ (asnbyte)'\x65',
  /*4150*/ (asnbyte)'\x6e',
  /*4151*/ (asnbyte)'\x53',
  /*4152*/ (asnbyte)'\x74',
  /*4153*/ (asnbyte)'\x61',
  /*4154*/ (asnbyte)'\x74',
  /*4155*/ (asnbyte)'\x75',
  /*4156*/ (asnbyte)'\x73',
  /*4157*/ (asnbyte)'\x44',
  /*4158*/ (asnbyte)'\x72',
  /*4159*/ (asnbyte)'\x69',
  /*4160*/ (asnbyte)'\x76',
  /*4161*/ (asnbyte)'\x65',
  /*4162*/ (asnbyte)'\x72',
  /*4163*/ (asnbyte)'\x52',
  /*4164*/ (asnbyte)'\x65',
  /*4165*/ (asnbyte)'\x61',
  /*4166*/ (asnbyte)'\x72',
  /*4167*/ (asnbyte)'\x64',
  /*4168*/ (asnbyte)'\x6f',
  /*4169*/ (asnbyte)'\x6f',
  /*4170*/ (asnbyte)'\x72',
  /*4171*/ (asnbyte)'\x4f',
  /*4172*/ (asnbyte)'\x70',
  /*4173*/ (asnbyte)'\x65',
  /*4174*/ (asnbyte)'\x6e',
  /*4175*/ (asnbyte)'\x53',
  /*4176*/ (asnbyte)'\x74',
  /*4177*/ (asnbyte)'\x61',
  /*4178*/ (asnbyte)'\x74',
  /*4179*/ (asnbyte)'\x75',
  /*4180*/ (asnbyte)'\x73',
  /*4181*/ (asnbyte)'\x50',
  /*4182*/ (asnbyte)'\x61',
  /*4183*/ (asnbyte)'\x73',
  /*4184*/ (asnbyte)'\x73',
  /*4185*/ (asnbyte)'\x65',
  /*4186*/ (asnbyte)'\x6e',
  /*4187*/ (asnbyte)'\x67',
  /*4188*/ (asnbyte)'\x65',
  /*4189*/ (asnbyte)'\x72',
  /*4190*/ (asnbyte)'\x64',
  /*4191*/ (asnbyte)'\x6f',
  /*4192*/ (asnbyte)'\x6f',
  /*4193*/ (asnbyte)'\x72',
  /*4194*/ (asnbyte)'\x4f',
  /*4195*/ (asnbyte)'\x70',
  /*4196*/ (asnbyte)'\x65',
  /*4197*/ (asnbyte)'\x6e',
  /*4198*/ (asnbyte)'\x53',
  /*4199*/ (asnbyte)'\x74',
  /*4200*/ (asnbyte)'\x61',
  /*4201*/ (asnbyte)'\x74',
  /*4202*/ (asnbyte)'\x75',
  /*4203*/ (asnbyte)'\x73',
  /*4204*/ (asnbyte)'\x44',
  /*4205*/ (asnbyte)'\x72',
  /*4206*/ (asnbyte)'\x69',
  /*4207*/ (asnbyte)'\x76',
  /*4208*/ (asnbyte)'\x65',
  /*4209*/ (asnbyte)'\x72',
  /*4210*/ (asnbyte)'\x76',
  /*4211*/ (asnbyte)'\x65',
  /*4212*/ (asnbyte)'\x68',
  /*4213*/ (asnbyte)'\x69',
  /*4214*/ (asnbyte)'\x63',
  /*4215*/ (asnbyte)'\x6c',
  /*4216*/ (asnbyte)'\x65',
  /*4217*/ (asnbyte)'\x41',
  /*4218*/ (asnbyte)'\x6c',
  /*4219*/ (asnbyte)'\x61',
  /*4220*/ (asnbyte)'\x72',
  /*4221*/ (asnbyte)'\x6d',
  /*4222*/ (asnbyte)'\x73',
  /*4223*/ (asnbyte)'\x72',
  /*4224*/ (asnbyte)'\x73',
  /*4225*/ (asnbyte)'\x53',
  /*4226*/ (asnbyte)'\x74',
  /*4227*/ (asnbyte)'\x61',
  /*4228*/ (asnbyte)'\x74',
  /*4229*/ (asnbyte)'\x75',
  /*4230*/ (asnbyte)'\x73',
  /*4231*/ (asnbyte)'\x44',
  /*4232*/ (asnbyte)'\x72',
  /*4233*/ (asnbyte)'\x69',
  /*4234*/ (asnbyte)'\x76',
  /*4235*/ (asnbyte)'\x69',
  /*4236*/ (asnbyte)'\x6e',
  /*4237*/ (asnbyte)'\x67',
  /*4238*/ (asnbyte)'\x53',
  /*4239*/ (asnbyte)'\x61',
  /*4240*/ (asnbyte)'\x66',
  /*4241*/ (asnbyte)'\x65',
  /*4242*/ (asnbyte)'\x74',
  /*4243*/ (asnbyte)'\x79',
  /*4244*/ (asnbyte)'\x53',
  /*4245*/ (asnbyte)'\x74',
  /*4246*/ (asnbyte)'\x61',
  /*4247*/ (asnbyte)'\x74',
  /*4248*/ (asnbyte)'\x75',
  /*4249*/ (asnbyte)'\x73',
  /*4250*/ (asnbyte)'\x43',
  /*4251*/ (asnbyte)'\x6f',
  /*4252*/ (asnbyte)'\x6e',
  /*4253*/ (asnbyte)'\x66',
  /*4254*/ (asnbyte)'\x69',
  /*4255*/ (asnbyte)'\x67',
  /*4256*/ (asnbyte)'\x75',
  /*4257*/ (asnbyte)'\x72',
  /*4258*/ (asnbyte)'\x61',
  /*4259*/ (asnbyte)'\x74',
  /*4260*/ (asnbyte)'\x69',
  /*4261*/ (asnbyte)'\x6f',
  /*4262*/ (asnbyte)'\x6e',
  /*4263*/ (asnbyte)'\x41',
  /*4264*/ (asnbyte)'\x6e',
  /*4265*/ (asnbyte)'\x64',
  /*4266*/ (asnbyte)'\x49',
  /*4267*/ (asnbyte)'\x64',
  /*4268*/ (asnbyte)'\x65',
  /*4269*/ (asnbyte)'\x6e',
  /*4270*/ (asnbyte)'\x74',
  /*4271*/ (asnbyte)'\x69',
  /*4272*/ (asnbyte)'\x74',
  /*4273*/ (asnbyte)'\x79',
  /*4274*/ (asnbyte)'\x63',
  /*4275*/ (asnbyte)'\x61',
  /*4276*/ (asnbyte)'\x72',
  /*4277*/ (asnbyte)'\x43',
  /*4278*/ (asnbyte)'\x6f',
  /*4279*/ (asnbyte)'\x6e',
  /*4280*/ (asnbyte)'\x66',
  /*4281*/ (asnbyte)'\x69',
  /*4282*/ (asnbyte)'\x67',
  /*4283*/ (asnbyte)'\x65',
  /*4284*/ (asnbyte)'\x6c',
  /*4285*/ (asnbyte)'\x65',
  /*4286*/ (asnbyte)'\x63',
  /*4287*/ (asnbyte)'\x74',
  /*4288*/ (asnbyte)'\x72',
  /*4289*/ (asnbyte)'\x69',
  /*4290*/ (asnbyte)'\x63',
  /*4291*/ (asnbyte)'\x56',
  /*4292*/ (asnbyte)'\x65',
  /*4293*/ (asnbyte)'\x68',
  /*4294*/ (asnbyte)'\x69',
  /*4295*/ (asnbyte)'\x63',
  /*4296*/ (asnbyte)'\x6c',
  /*4297*/ (asnbyte)'\x65',
  /*4298*/ (asnbyte)'\x53',
  /*4299*/ (asnbyte)'\x74',
  /*4300*/ (asnbyte)'\x61',
  /*4301*/ (asnbyte)'\x74',
  /*4302*/ (asnbyte)'\x75',
  /*4303*/ (asnbyte)'\x73',
  /*4304*/ (asnbyte)'\x65',
  /*4305*/ (asnbyte)'\x63',
  /*4306*/ (asnbyte)'\x75',
  /*4307*/ (asnbyte)'\x57',
  /*4308*/ (asnbyte)'\x61',
  /*4309*/ (asnbyte)'\x72',
  /*4310*/ (asnbyte)'\x6e',
  /*4311*/ (asnbyte)'\x69',
  /*4312*/ (asnbyte)'\x6e',
  /*4313*/ (asnbyte)'\x67',
  /*4314*/ (asnbyte)'\x4d',
  /*4315*/ (asnbyte)'\x65',
  /*4316*/ (asnbyte)'\x73',
  /*4317*/ (asnbyte)'\x73',
  /*4318*/ (asnbyte)'\x61',
  /*4319*/ (asnbyte)'\x67',
  /*4320*/ (asnbyte)'\x65',
  /*4321*/ (asnbyte)'\x73',
  /*4322*/ (asnbyte)'\x70',
  /*4323*/ (asnbyte)'\x6f',
  /*4324*/ (asnbyte)'\x6c',
  /*4325*/ (asnbyte)'\x6c',
  /*4326*/ (asnbyte)'\x75',
  /*4327*/ (asnbyte)'\x74',
  /*4328*/ (asnbyte)'\x69',
  /*4329*/ (asnbyte)'\x6f',
  /*4330*/ (asnbyte)'\x6e',
  /*4331*/ (asnbyte)'\x53',
  /*4332*/ (asnbyte)'\x74',
  /*4333*/ (asnbyte)'\x61',
  /*4334*/ (asnbyte)'\x74',
  /*4335*/ (asnbyte)'\x75',
  /*4336*/ (asnbyte)'\x73',
  /*4337*/ (asnbyte)'\x64',
  /*4338*/ (asnbyte)'\x72',
  /*4339*/ (asnbyte)'\x69',
  /*4340*/ (asnbyte)'\x76',
  /*4341*/ (asnbyte)'\x69',
  /*4342*/ (asnbyte)'\x6e',
  /*4343*/ (asnbyte)'\x67',
  /*4344*/ (asnbyte)'\x42',
  /*4345*/ (asnbyte)'\x65',
  /*4346*/ (asnbyte)'\x68',
  /*4347*/ (asnbyte)'\x61',
  /*4348*/ (asnbyte)'\x76',
  /*4349*/ (asnbyte)'\x69',
  /*4350*/ (asnbyte)'\x6f',
  /*4351*/ (asnbyte)'\x75',
  /*4352*/ (asnbyte)'\x72',
  /*4353*/ (asnbyte)'\x53',
  /*4354*/ (asnbyte)'\x74',
  /*4355*/ (asnbyte)'\x61',
  /*4356*/ (asnbyte)'\x74',
  /*4357*/ (asnbyte)'\x75',
  /*4358*/ (asnbyte)'\x73',
  /*4359*/ (asnbyte)'\x63',
  /*4360*/ (asnbyte)'\x6c',
  /*4361*/ (asnbyte)'\x69',
  /*4362*/ (asnbyte)'\x6d',
  /*4363*/ (asnbyte)'\x61',
  /*4364*/ (asnbyte)'\x74',
  /*4365*/ (asnbyte)'\x65',
  /*4366*/ (asnbyte)'\x53',
  /*4367*/ (asnbyte)'\x74',
  /*4368*/ (asnbyte)'\x61',
  /*4369*/ (asnbyte)'\x74',
  /*4370*/ (asnbyte)'\x75',
  /*4371*/ (asnbyte)'\x73',
  /*4372*/ (asnbyte)'\x72',
  /*4373*/ (asnbyte)'\x75',
  /*4374*/ (asnbyte)'\x6e',
  /*4375*/ (asnbyte)'\x6e',
  /*4376*/ (asnbyte)'\x69',
  /*4377*/ (asnbyte)'\x6e',
  /*4378*/ (asnbyte)'\x67',
  /*4379*/ (asnbyte)'\x53',
  /*4380*/ (asnbyte)'\x74',
  /*4381*/ (asnbyte)'\x61',
  /*4382*/ (asnbyte)'\x74',
  /*4383*/ (asnbyte)'\x75',
  /*4384*/ (asnbyte)'\x73',
  /*4385*/ (asnbyte)'\x6d',
  /*4386*/ (asnbyte)'\x61',
  /*4387*/ (asnbyte)'\x69',
  /*4388*/ (asnbyte)'\x6e',
  /*4389*/ (asnbyte)'\x74',
  /*4390*/ (asnbyte)'\x65',
  /*4391*/ (asnbyte)'\x6e',
  /*4392*/ (asnbyte)'\x61',
  /*4393*/ (asnbyte)'\x6e',
  /*4394*/ (asnbyte)'\x63',
  /*4395*/ (asnbyte)'\x65',
  /*4396*/ (asnbyte)'\x53',
  /*4397*/ (asnbyte)'\x74',
  /*4398*/ (asnbyte)'\x61',
  /*4399*/ (asnbyte)'\x74',
  /*4400*/ (asnbyte)'\x75',
  /*4401*/ (asnbyte)'\x73',
  /*4402*/ (asnbyte)'\x64',
  /*4403*/ (asnbyte)'\x72',
  /*4404*/ (asnbyte)'\x69',
  /*4405*/ (asnbyte)'\x76',
  /*4406*/ (asnbyte)'\x69',
  /*4407*/ (asnbyte)'\x6e',
  /*4408*/ (asnbyte)'\x67',
  /*4409*/ (asnbyte)'\x53',
  /*4410*/ (asnbyte)'\x61',
  /*4411*/ (asnbyte)'\x66',
  /*4412*/ (asnbyte)'\x65',
  /*4413*/ (asnbyte)'\x74',
  /*4414*/ (asnbyte)'\x79',
  /*4415*/ (asnbyte)'\x53',
  /*4416*/ (asnbyte)'\x74',
  /*4417*/ (asnbyte)'\x61',
  /*4418*/ (asnbyte)'\x74',
  /*4419*/ (asnbyte)'\x75',
  /*4420*/ (asnbyte)'\x73',
  /*4421*/ (asnbyte)'\x63',
  /*4422*/ (asnbyte)'\x6f',
  /*4423*/ (asnbyte)'\x6e',
  /*4424*/ (asnbyte)'\x66',
  /*4425*/ (asnbyte)'\x41',
  /*4426*/ (asnbyte)'\x6e',
  /*4427*/ (asnbyte)'\x64',
  /*4428*/ (asnbyte)'\x49',
  /*4429*/ (asnbyte)'\x64',
  /*4430*/ (asnbyte)'\x41',
  /*4431*/ (asnbyte)'\x64',
  /*4432*/ (asnbyte)'\x64',
  /*4433*/ (asnbyte)'\x69',
  /*4434*/ (asnbyte)'\x74',
  /*4435*/ (asnbyte)'\x69',
  /*4436*/ (asnbyte)'\x6f',
  /*4437*/ (asnbyte)'\x6e',
  /*4438*/ (asnbyte)'\x61',
  /*4439*/ (asnbyte)'\x6c',
  /*4440*/ (asnbyte)'\x56',
  /*4441*/ (asnbyte)'\x65',
  /*4442*/ (asnbyte)'\x68',
  /*4443*/ (asnbyte)'\x69',
  /*4444*/ (asnbyte)'\x63',
  /*4445*/ (asnbyte)'\x6c',
  /*4446*/ (asnbyte)'\x65',
  /*4447*/ (asnbyte)'\x53',
  /*4448*/ (asnbyte)'\x74',
  /*4449*/ (asnbyte)'\x61',
  /*4450*/ (asnbyte)'\x74',
  /*4451*/ (asnbyte)'\x75',
  /*4452*/ (asnbyte)'\x73',
  /*4453*/ (asnbyte)'\x62',
  /*4454*/ (asnbyte)'\x6c',
  /*4455*/ (asnbyte)'\x6f',
  /*4456*/ (asnbyte)'\x63',
  /*4457*/ (asnbyte)'\x6b',
  /*4458*/ (asnbyte)'\x65',
  /*4459*/ (asnbyte)'\x64',
  /*4460*/ (asnbyte)'\x75',
  /*4461*/ (asnbyte)'\x6e',
  /*4462*/ (asnbyte)'\x62',
  /*4463*/ (asnbyte)'\x6c',
  /*4464*/ (asnbyte)'\x6f',
  /*4465*/ (asnbyte)'\x63',
  /*4466*/ (asnbyte)'\x6b',
  /*4467*/ (asnbyte)'\x65',
  /*4468*/ (asnbyte)'\x64',
  /*4469*/ (asnbyte)'\x75',
  /*4470*/ (asnbyte)'\x73',
  /*4471*/ (asnbyte)'\x61',
  /*4472*/ (asnbyte)'\x67',
  /*4473*/ (asnbyte)'\x65',
  /*4474*/ (asnbyte)'\x4d',
  /*4475*/ (asnbyte)'\x6f',
  /*4476*/ (asnbyte)'\x64',
  /*4477*/ (asnbyte)'\x65',
  /*4478*/ (asnbyte)'\x64',
  /*4479*/ (asnbyte)'\x69',
  /*4480*/ (asnbyte)'\x73',
  /*4481*/ (asnbyte)'\x74',
  /*4482*/ (asnbyte)'\x61',
  /*4483*/ (asnbyte)'\x6e',
  /*4484*/ (asnbyte)'\x63',
  /*4485*/ (asnbyte)'\x65',
  /*4486*/ (asnbyte)'\x54',
  /*4487*/ (asnbyte)'\x6f',
  /*4488*/ (asnbyte)'\x45',
  /*4489*/ (asnbyte)'\x6d',
  /*4490*/ (asnbyte)'\x70',
  /*4491*/ (asnbyte)'\x74',
  /*4492*/ (asnbyte)'\x79',
  /*4493*/ (asnbyte)'\x65',
  /*4494*/ (asnbyte)'\x6e',
  /*4495*/ (asnbyte)'\x67',
  /*4496*/ (asnbyte)'\x69',
  /*4497*/ (asnbyte)'\x6e',
  /*4498*/ (asnbyte)'\x65',
  /*4499*/ (asnbyte)'\x42',
  /*4500*/ (asnbyte)'\x6c',
  /*4501*/ (asnbyte)'\x6f',
  /*4502*/ (asnbyte)'\x63',
  /*4503*/ (asnbyte)'\x6b',
  /*4504*/ (asnbyte)'\x65',
  /*4505*/ (asnbyte)'\x64',
  /*4506*/ (asnbyte)'\x53',
  /*4507*/ (asnbyte)'\x74',
  /*4508*/ (asnbyte)'\x61',
  /*4509*/ (asnbyte)'\x74',
  /*4510*/ (asnbyte)'\x75',
  /*4511*/ (asnbyte)'\x73',
  /*4512*/ (asnbyte)'\x6b',
  /*4513*/ (asnbyte)'\x65',
  /*4514*/ (asnbyte)'\x79',
  /*4515*/ (asnbyte)'\x53',
  /*4516*/ (asnbyte)'\x74',
  /*4517*/ (asnbyte)'\x61',
  /*4518*/ (asnbyte)'\x74',
  /*4519*/ (asnbyte)'\x75',
  /*4520*/ (asnbyte)'\x73',
  /*4521*/ (asnbyte)'\x65',
  /*4522*/ (asnbyte)'\x6e',
  /*4523*/ (asnbyte)'\x67',
  /*4524*/ (asnbyte)'\x69',
  /*4525*/ (asnbyte)'\x6e',
  /*4526*/ (asnbyte)'\x65',
  /*4527*/ (asnbyte)'\x53',
  /*4528*/ (asnbyte)'\x74',
  /*4529*/ (asnbyte)'\x61',
  /*4530*/ (asnbyte)'\x74',
  /*4531*/ (asnbyte)'\x75',
  /*4532*/ (asnbyte)'\x73',
  /*4533*/ (asnbyte)'\x42',
  /*4534*/ (asnbyte)'\x61',
  /*4535*/ (asnbyte)'\x73',
  /*4536*/ (asnbyte)'\x69',
  /*4537*/ (asnbyte)'\x63',
  /*4538*/ (asnbyte)'\x56',
  /*4539*/ (asnbyte)'\x65',
  /*4540*/ (asnbyte)'\x68',
  /*4541*/ (asnbyte)'\x69',
  /*4542*/ (asnbyte)'\x63',
  /*4543*/ (asnbyte)'\x6c',
  /*4544*/ (asnbyte)'\x65',
  /*4545*/ (asnbyte)'\x53',
  /*4546*/ (asnbyte)'\x74',
  /*4547*/ (asnbyte)'\x61',
  /*4548*/ (asnbyte)'\x74',
  /*4549*/ (asnbyte)'\x75',
  /*4550*/ (asnbyte)'\x73',
  /*4551*/ (asnbyte)'\x6e',
  /*4552*/ (asnbyte)'\x6f',
  /*4553*/ (asnbyte)'\x74',
  /*4554*/ (asnbyte)'\x69',
  /*4555*/ (asnbyte)'\x66',
  /*4556*/ (asnbyte)'\x69',
  /*4557*/ (asnbyte)'\x63',
  /*4558*/ (asnbyte)'\x61',
  /*4559*/ (asnbyte)'\x74',
  /*4560*/ (asnbyte)'\x69',
  /*4561*/ (asnbyte)'\x6f',
  /*4562*/ (asnbyte)'\x6e',
  /*4563*/ (asnbyte)'\x74',
  /*4564*/ (asnbyte)'\x68',
  /*4565*/ (asnbyte)'\x65',
  /*4566*/ (asnbyte)'\x66',
  /*4567*/ (asnbyte)'\x74',
  /*4568*/ (asnbyte)'\x4e',
  /*4569*/ (asnbyte)'\x6f',
  /*4570*/ (asnbyte)'\x74',
  /*4571*/ (asnbyte)'\x69',
  /*4572*/ (asnbyte)'\x66',
  /*4573*/ (asnbyte)'\x69',
  /*4574*/ (asnbyte)'\x63',
  /*4575*/ (asnbyte)'\x61',
  /*4576*/ (asnbyte)'\x74',
  /*4577*/ (asnbyte)'\x69',
  /*4578*/ (asnbyte)'\x6f',
  /*4579*/ (asnbyte)'\x6e',
  /*4580*/ (asnbyte)'\x74',
  /*4581*/ (asnbyte)'\x65',
  /*4582*/ (asnbyte)'\x6d',
  /*4583*/ (asnbyte)'\x53',
  /*4584*/ (asnbyte)'\x74',
  /*4585*/ (asnbyte)'\x61',
  /*4586*/ (asnbyte)'\x74',
  /*4587*/ (asnbyte)'\x75',
  /*4588*/ (asnbyte)'\x73',
  /*4589*/ (asnbyte)'\x6d',
  /*4590*/ (asnbyte)'\x73',
  /*4591*/ (asnbyte)'\x64',
  /*4592*/ (asnbyte)'\x61',
  /*4593*/ (asnbyte)'\x64',
  /*4594*/ (asnbyte)'\x64',
  /*4595*/ (asnbyte)'\x69',
  /*4596*/ (asnbyte)'\x74',
  /*4597*/ (asnbyte)'\x69',
  /*4598*/ (asnbyte)'\x6f',
  /*4599*/ (asnbyte)'\x6e',
  /*4600*/ (asnbyte)'\x61',
  /*4601*/ (asnbyte)'\x6c',
  /*4602*/ (asnbyte)'\x56',
  /*4603*/ (asnbyte)'\x65',
  /*4604*/ (asnbyte)'\x68',
  /*4605*/ (asnbyte)'\x69',
  /*4606*/ (asnbyte)'\x63',
  /*4607*/ (asnbyte)'\x6c',
  /*4608*/ (asnbyte)'\x65',
  /*4609*/ (asnbyte)'\x53',
  /*4610*/ (asnbyte)'\x74',
  /*4611*/ (asnbyte)'\x61',
  /*4612*/ (asnbyte)'\x74',
  /*4613*/ (asnbyte)'\x75',
  /*4614*/ (asnbyte)'\x73',
  /*4615*/ (asnbyte)'\x62',
  /*4616*/ (asnbyte)'\x61',
  /*4617*/ (asnbyte)'\x73',
  /*4618*/ (asnbyte)'\x69',
  /*4619*/ (asnbyte)'\x63',
  /*4620*/ (asnbyte)'\x56',
  /*4621*/ (asnbyte)'\x65',
  /*4622*/ (asnbyte)'\x68',
  /*4623*/ (asnbyte)'\x69',
  /*4624*/ (asnbyte)'\x63',
  /*4625*/ (asnbyte)'\x6c',
  /*4626*/ (asnbyte)'\x65',
  /*4627*/ (asnbyte)'\x53',
  /*4628*/ (asnbyte)'\x74',
  /*4629*/ (asnbyte)'\x61',
  /*4630*/ (asnbyte)'\x74',
  /*4631*/ (asnbyte)'\x75',
  /*4632*/ (asnbyte)'\x73',
  /*4633*/ (asnbyte)'\x56',
  /*4634*/ (asnbyte)'\x65',
  /*4635*/ (asnbyte)'\x68',
  /*4636*/ (asnbyte)'\x69',
  /*4637*/ (asnbyte)'\x63',
  /*4638*/ (asnbyte)'\x6c',
  /*4639*/ (asnbyte)'\x65',
  /*4640*/ (asnbyte)'\x53',
  /*4641*/ (asnbyte)'\x74',
  /*4642*/ (asnbyte)'\x61',
  /*4643*/ (asnbyte)'\x74',
  /*4644*/ (asnbyte)'\x75',
  /*4645*/ (asnbyte)'\x73',
  /*4646*/ (asnbyte)'\x6e',
  /*4647*/ (asnbyte)'\x61',
  /*4648*/ (asnbyte)'\x6d',
  /*4649*/ (asnbyte)'\x65',
  /*4650*/ (asnbyte)'\x43',
  /*4651*/ (asnbyte)'\x6f',
  /*4652*/ (asnbyte)'\x6e',
  /*4653*/ (asnbyte)'\x66',
  /*4654*/ (asnbyte)'\x69',
  /*4655*/ (asnbyte)'\x67',
  /*4656*/ (asnbyte)'\x75',
  /*4657*/ (asnbyte)'\x72',
  /*4658*/ (asnbyte)'\x61',
  /*4659*/ (asnbyte)'\x74',
  /*4660*/ (asnbyte)'\x69',
  /*4661*/ (asnbyte)'\x6f',
  /*4662*/ (asnbyte)'\x6e',
  /*4663*/ (asnbyte)'\x49',
  /*4664*/ (asnbyte)'\x74',
  /*4665*/ (asnbyte)'\x65',
  /*4666*/ (asnbyte)'\x6d',
  /*4667*/ (asnbyte)'\x69',
  /*4668*/ (asnbyte)'\x74',
  /*4669*/ (asnbyte)'\x65',
  /*4670*/ (asnbyte)'\x6d',
  /*4671*/ (asnbyte)'\x73',
  /*4672*/ (asnbyte)'\x76',
  /*4673*/ (asnbyte)'\x65',
  /*4674*/ (asnbyte)'\x72',
  /*4675*/ (asnbyte)'\x73',
  /*4676*/ (asnbyte)'\x69',
  /*4677*/ (asnbyte)'\x6f',
  /*4678*/ (asnbyte)'\x6e',
  /*4679*/ (asnbyte)'\x43',
  /*4680*/ (asnbyte)'\x6f',
  /*4681*/ (asnbyte)'\x6e',
  /*4682*/ (asnbyte)'\x66',
  /*4683*/ (asnbyte)'\x69',
  /*4684*/ (asnbyte)'\x67',
  /*4685*/ (asnbyte)'\x75',
  /*4686*/ (asnbyte)'\x72',
  /*4687*/ (asnbyte)'\x61',
  /*4688*/ (asnbyte)'\x74',
  /*4689*/ (asnbyte)'\x69',
  /*4690*/ (asnbyte)'\x6f',
  /*4691*/ (asnbyte)'\x6e',
  /*4692*/ (asnbyte)'\x63',
  /*4693*/ (asnbyte)'\x6f',
  /*4694*/ (asnbyte)'\x75',
  /*4695*/ (asnbyte)'\x6e',
  /*4696*/ (asnbyte)'\x74',
  /*4697*/ (asnbyte)'\x72',
  /*4698*/ (asnbyte)'\x79',
  /*4699*/ (asnbyte)'\x70',
  /*4700*/ (asnbyte)'\x6f',
  /*4701*/ (asnbyte)'\x73',
  /*4702*/ (asnbyte)'\x74',
  /*4703*/ (asnbyte)'\x63',
  /*4704*/ (asnbyte)'\x6f',
  /*4705*/ (asnbyte)'\x64',
  /*4706*/ (asnbyte)'\x65',
  /*4707*/ (asnbyte)'\x72',
  /*4708*/ (asnbyte)'\x65',
  /*4709*/ (asnbyte)'\x67',
  /*4710*/ (asnbyte)'\x69',
  /*4711*/ (asnbyte)'\x6f',
  /*4712*/ (asnbyte)'\x6e',
  /*4713*/ (asnbyte)'\x63',
  /*4714*/ (asnbyte)'\x69',
  /*4715*/ (asnbyte)'\x74',
  /*4716*/ (asnbyte)'\x79',
  /*4717*/ (asnbyte)'\x68',
  /*4718*/ (asnbyte)'\x6f',
  /*4719*/ (asnbyte)'\x75',
  /*4720*/ (asnbyte)'\x73',
  /*4721*/ (asnbyte)'\x65',
  /*4722*/ (asnbyte)'\x4e',
  /*4723*/ (asnbyte)'\x75',
  /*4724*/ (asnbyte)'\x6d',
  /*4725*/ (asnbyte)'\x62',
  /*4726*/ (asnbyte)'\x65',
  /*4727*/ (asnbyte)'\x72',
  /*4728*/ (asnbyte)'\x73',
  /*4729*/ (asnbyte)'\x74',
  /*4730*/ (asnbyte)'\x72',
  /*4731*/ (asnbyte)'\x65',
  /*4732*/ (asnbyte)'\x65',
  /*4733*/ (asnbyte)'\x74',
  /*4734*/ (asnbyte)'\x50',
  /*4735*/ (asnbyte)'\x6f',
  /*4736*/ (asnbyte)'\x73',
  /*4737*/ (asnbyte)'\x74',
  /*4738*/ (asnbyte)'\x41',
  /*4739*/ (asnbyte)'\x64',
  /*4740*/ (asnbyte)'\x64',
  /*4741*/ (asnbyte)'\x72',
  /*4742*/ (asnbyte)'\x65',
  /*4743*/ (asnbyte)'\x73',
  /*4744*/ (asnbyte)'\x73',
  /*4745*/ (asnbyte)'\x70',
  /*4746*/ (asnbyte)'\x68',
  /*4747*/ (asnbyte)'\x6f',
  /*4748*/ (asnbyte)'\x6e',
  /*4749*/ (asnbyte)'\x65',
  /*4750*/ (asnbyte)'\x32',
  /*4751*/ (asnbyte)'\x70',
  /*4752*/ (asnbyte)'\x68',
  /*4753*/ (asnbyte)'\x6f',
  /*4754*/ (asnbyte)'\x6e',
  /*4755*/ (asnbyte)'\x65',
  /*4756*/ (asnbyte)'\x31',
  /*4757*/ (asnbyte)'\x61',
  /*4758*/ (asnbyte)'\x64',
  /*4759*/ (asnbyte)'\x64',
  /*4760*/ (asnbyte)'\x72',
  /*4761*/ (asnbyte)'\x65',
  /*4762*/ (asnbyte)'\x73',
  /*4763*/ (asnbyte)'\x73',
  /*4764*/ (asnbyte)'\x65',
  /*4765*/ (asnbyte)'\x6d',
  /*4766*/ (asnbyte)'\x61',
  /*4767*/ (asnbyte)'\x69',
  /*4768*/ (asnbyte)'\x6c',
  /*4769*/ (asnbyte)'\x43',
  /*4770*/ (asnbyte)'\x6f',
  /*4771*/ (asnbyte)'\x6e',
  /*4772*/ (asnbyte)'\x74',
  /*4773*/ (asnbyte)'\x61',
  /*4774*/ (asnbyte)'\x63',
  /*4775*/ (asnbyte)'\x74',
  /*4776*/ (asnbyte)'\x49',
  /*4777*/ (asnbyte)'\x6e',
  /*4778*/ (asnbyte)'\x66',
  /*4779*/ (asnbyte)'\x6f',
  /*4780*/ (asnbyte)'\x6d',
  /*4781*/ (asnbyte)'\x61',
  /*4782*/ (asnbyte)'\x72',
  /*4783*/ (asnbyte)'\x73',
  /*4784*/ (asnbyte)'\x43',
  /*4785*/ (asnbyte)'\x6f',
  /*4786*/ (asnbyte)'\x6f',
  /*4787*/ (asnbyte)'\x72',
  /*4788*/ (asnbyte)'\x64',
  /*4789*/ (asnbyte)'\x69',
  /*4790*/ (asnbyte)'\x6e',
  /*4791*/ (asnbyte)'\x61',
  /*4792*/ (asnbyte)'\x74',
  /*4793*/ (asnbyte)'\x65',
  /*4794*/ (asnbyte)'\x73',
  /*4795*/ (asnbyte)'\x63',
  /*4796*/ (asnbyte)'\x61',
  /*4797*/ (asnbyte)'\x72',
  /*4798*/ (asnbyte)'\x4c',
  /*4799*/ (asnbyte)'\x6f',
  /*4800*/ (asnbyte)'\x63',
  /*4801*/ (asnbyte)'\x61',
  /*4802*/ (asnbyte)'\x74',
  /*4803*/ (asnbyte)'\x6f',
  /*4804*/ (asnbyte)'\x72',
  /*4805*/ (asnbyte)'\x53',
  /*4806*/ (asnbyte)'\x74',
  /*4807*/ (asnbyte)'\x61',
  /*4808*/ (asnbyte)'\x74',
  /*4809*/ (asnbyte)'\x55',
  /*4810*/ (asnbyte)'\x70',
  /*4811*/ (asnbyte)'\x6c',
  /*4812*/ (asnbyte)'\x6f',
  /*4813*/ (asnbyte)'\x61',
  /*4814*/ (asnbyte)'\x64',
  /*4815*/ (asnbyte)'\x45',
  /*4816*/ (asnbyte)'\x6e',
  /*4817*/ (asnbyte)'\x70',
  /*4818*/ (asnbyte)'\x6f',
  /*4819*/ (asnbyte)'\x73',
  /*4820*/ (asnbyte)'\x43',
  /*4821*/ (asnbyte)'\x61',
  /*4822*/ (asnbyte)'\x6e',
  /*4823*/ (asnbyte)'\x42',
  /*4824*/ (asnbyte)'\x65',
  /*4825*/ (asnbyte)'\x54',
  /*4826*/ (asnbyte)'\x72',
  /*4827*/ (asnbyte)'\x75',
  /*4828*/ (asnbyte)'\x73',
  /*4829*/ (asnbyte)'\x74',
  /*4830*/ (asnbyte)'\x65',
  /*4831*/ (asnbyte)'\x64',
  /*4832*/ (asnbyte)'\x61',
  /*4833*/ (asnbyte)'\x6c',
  /*4834*/ (asnbyte)'\x74',
  /*4835*/ (asnbyte)'\x69',
  /*4836*/ (asnbyte)'\x74',
  /*4837*/ (asnbyte)'\x75',
  /*4838*/ (asnbyte)'\x64',
  /*4839*/ (asnbyte)'\x65',
  /*4840*/ (asnbyte)'\x61',
  /*4841*/ (asnbyte)'\x74',
  /*4842*/ (asnbyte)'\x74',
  /*4843*/ (asnbyte)'\x72',
  /*4844*/ (asnbyte)'\x69',
  /*4845*/ (asnbyte)'\x62',
  /*4846*/ (asnbyte)'\x75',
  /*4847*/ (asnbyte)'\x74',
  /*4848*/ (asnbyte)'\x65',
  /*4849*/ (asnbyte)'\x73',
  /*4850*/ (asnbyte)'\x75',
  /*4851*/ (asnbyte)'\x72',
  /*4852*/ (asnbyte)'\x6c',
  /*4853*/ (asnbyte)'\x63',
  /*4854*/ (asnbyte)'\x6f',
  /*4855*/ (asnbyte)'\x6e',
  /*4856*/ (asnbyte)'\x74',
  /*4857*/ (asnbyte)'\x61',
  /*4858*/ (asnbyte)'\x63',
  /*4859*/ (asnbyte)'\x74',
  /*4860*/ (asnbyte)'\x49',
  /*4861*/ (asnbyte)'\x6e',
  /*4862*/ (asnbyte)'\x66',
  /*4863*/ (asnbyte)'\x6f',
  /*4864*/ (asnbyte)'\x74',
  /*4865*/ (asnbyte)'\x79',
  /*4866*/ (asnbyte)'\x70',
  /*4867*/ (asnbyte)'\x65',
  /*4868*/ (asnbyte)'\x50',
  /*4869*/ (asnbyte)'\x6f',
  /*4870*/ (asnbyte)'\x69',
  /*4871*/ (asnbyte)'\x6e',
  /*4872*/ (asnbyte)'\x74',
  /*4873*/ (asnbyte)'\x4f',
  /*4874*/ (asnbyte)'\x66',
  /*4875*/ (asnbyte)'\x49',
  /*4876*/ (asnbyte)'\x6e',
  /*4877*/ (asnbyte)'\x74',
  /*4878*/ (asnbyte)'\x65',
  /*4879*/ (asnbyte)'\x72',
  /*4880*/ (asnbyte)'\x65',
  /*4881*/ (asnbyte)'\x73',
  /*4882*/ (asnbyte)'\x74',
  /*4883*/ (asnbyte)'\x6f',
  /*4884*/ (asnbyte)'\x63',
  /*4885*/ (asnbyte)'\x65',
  /*4886*/ (asnbyte)'\x74',
  /*4887*/ (asnbyte)'\x4d',
  /*4888*/ (asnbyte)'\x65',
  /*4889*/ (asnbyte)'\x73',
  /*4890*/ (asnbyte)'\x73',
  /*4891*/ (asnbyte)'\x61',
  /*4892*/ (asnbyte)'\x67',
  /*4893*/ (asnbyte)'\x65',
  /*4894*/ (asnbyte)'\x6d',
  /*4895*/ (asnbyte)'\x65',
  /*4896*/ (asnbyte)'\x73',
  /*4897*/ (asnbyte)'\x73',
  /*4898*/ (asnbyte)'\x61',
  /*4899*/ (asnbyte)'\x67',
  /*4900*/ (asnbyte)'\x65',
  /*4901*/ (asnbyte)'\x47',
  /*4902*/ (asnbyte)'\x65',
  /*4903*/ (asnbyte)'\x6e',
  /*4904*/ (asnbyte)'\x65',
  /*4905*/ (asnbyte)'\x72',
  /*4906*/ (asnbyte)'\x61',
  /*4907*/ (asnbyte)'\x6c',
  /*4908*/ (asnbyte)'\x4d',
  /*4909*/ (asnbyte)'\x65',
  /*4910*/ (asnbyte)'\x73',
  /*4911*/ (asnbyte)'\x73',
  /*4912*/ (asnbyte)'\x61',
  /*4913*/ (asnbyte)'\x67',
  /*4914*/ (asnbyte)'\x65',
  /*4915*/ (asnbyte)'\x72',
  /*4916*/ (asnbyte)'\x65',
  /*4917*/ (asnbyte)'\x6d',
  /*4918*/ (asnbyte)'\x6f',
  /*4919*/ (asnbyte)'\x74',
  /*4920*/ (asnbyte)'\x65',
  /*4921*/ (asnbyte)'\x43',
  /*4922*/ (asnbyte)'\x6f',
  /*4923*/ (asnbyte)'\x6e',
  /*4924*/ (asnbyte)'\x74',
  /*4925*/ (asnbyte)'\x72',
  /*4926*/ (asnbyte)'\x6f',
  /*4927*/ (asnbyte)'\x6c',
  /*4928*/ (asnbyte)'\x49',
  /*4929*/ (asnbyte)'\x6e',
  /*4930*/ (asnbyte)'\x68',
  /*4931*/ (asnbyte)'\x69',
  /*4932*/ (asnbyte)'\x62',
  /*4933*/ (asnbyte)'\x69',
  /*4934*/ (asnbyte)'\x74',
  /*4935*/ (asnbyte)'\x65',
  /*4936*/ (asnbyte)'\x64',
  /*4937*/ (asnbyte)'\x53',
  /*4938*/ (asnbyte)'\x65',
  /*4939*/ (asnbyte)'\x72',
  /*4940*/ (asnbyte)'\x76',
  /*4941*/ (asnbyte)'\x69',
  /*4942*/ (asnbyte)'\x63',
  /*4943*/ (asnbyte)'\x65',
  /*4944*/ (asnbyte)'\x53',
  /*4945*/ (asnbyte)'\x74',
  /*4946*/ (asnbyte)'\x61',
  /*4947*/ (asnbyte)'\x74',
  /*4948*/ (asnbyte)'\x75',
  /*4949*/ (asnbyte)'\x73',
  /*4950*/ (asnbyte)'\x76',
  /*4951*/ (asnbyte)'\x65',
  /*4952*/ (asnbyte)'\x68',
  /*4953*/ (asnbyte)'\x69',
  /*4954*/ (asnbyte)'\x63',
  /*4955*/ (asnbyte)'\x6c',
  /*4956*/ (asnbyte)'\x65',
  /*4957*/ (asnbyte)'\x45',
  /*4958*/ (asnbyte)'\x72',
  /*4959*/ (asnbyte)'\x72',
  /*4960*/ (asnbyte)'\x6f',
  /*4961*/ (asnbyte)'\x72',
  /*4962*/ (asnbyte)'\x43',
  /*4963*/ (asnbyte)'\x6f',
  /*4964*/ (asnbyte)'\x64',
  /*4965*/ (asnbyte)'\x65',
  /*4966*/ (asnbyte)'\x63',
  /*4967*/ (asnbyte)'\x6f',
  /*4968*/ (asnbyte)'\x64',
  /*4969*/ (asnbyte)'\x65',
  /*4970*/ (asnbyte)'\x45',
  /*4971*/ (asnbyte)'\x72',
  /*4972*/ (asnbyte)'\x72',
  /*4973*/ (asnbyte)'\x6f',
  /*4974*/ (asnbyte)'\x72',
  /*4975*/ (asnbyte)'\x65',
  /*4976*/ (asnbyte)'\x72',
  /*4977*/ (asnbyte)'\x72',
  /*4978*/ (asnbyte)'\x6f',
  /*4979*/ (asnbyte)'\x72',
  /*4980*/ (asnbyte)'\x6f',
  /*4981*/ (asnbyte)'\x70',
  /*4982*/ (asnbyte)'\x65',
  /*4983*/ (asnbyte)'\x72',
  /*4984*/ (asnbyte)'\x61',
  /*4985*/ (asnbyte)'\x74',
  /*4986*/ (asnbyte)'\x69',
  /*4987*/ (asnbyte)'\x6f',
  /*4988*/ (asnbyte)'\x6e',
  /*4989*/ (asnbyte)'\x53',
  /*4990*/ (asnbyte)'\x75',
  /*4991*/ (asnbyte)'\x63',
  /*4992*/ (asnbyte)'\x63',
  /*4993*/ (asnbyte)'\x65',
  /*4994*/ (asnbyte)'\x65',
  /*4995*/ (asnbyte)'\x64',
  /*4996*/ (asnbyte)'\x65',
  /*4997*/ (asnbyte)'\x64',
  /*4998*/ (asnbyte)'\x53',
  /*4999*/ (asnbyte)'\x65',
  /*5000*/ (asnbyte)'\x72',
  /*5001*/ (asnbyte)'\x76',
  /*5002*/ (asnbyte)'\x69',
  /*5003*/ (asnbyte)'\x63',
  /*5004*/ (asnbyte)'\x65',
  /*5005*/ (asnbyte)'\x52',
  /*5006*/ (asnbyte)'\x65',
  /*5007*/ (asnbyte)'\x73',
  /*5008*/ (asnbyte)'\x75',
  /*5009*/ (asnbyte)'\x6c',
  /*5010*/ (asnbyte)'\x74',
  /*5011*/ (asnbyte)'\x69',
  /*5012*/ (asnbyte)'\x6e',
  /*5013*/ (asnbyte)'\x74',
  /*5014*/ (asnbyte)'\x56',
  /*5015*/ (asnbyte)'\x61',
  /*5016*/ (asnbyte)'\x6c',
  /*5017*/ (asnbyte)'\x6d',
  /*5018*/ (asnbyte)'\x69',
  /*5019*/ (asnbyte)'\x6c',
  /*5020*/ (asnbyte)'\x6c',
  /*5021*/ (asnbyte)'\x69',
  /*5022*/ (asnbyte)'\x73',
  /*5023*/ (asnbyte)'\x65',
  /*5024*/ (asnbyte)'\x63',
  /*5025*/ (asnbyte)'\x6f',
  /*5026*/ (asnbyte)'\x6e',
  /*5027*/ (asnbyte)'\x64',
  /*5028*/ (asnbyte)'\x73',
  /*5029*/ (asnbyte)'\x73',
  /*5030*/ (asnbyte)'\x65',
  /*5031*/ (asnbyte)'\x63',
  /*5032*/ (asnbyte)'\x6f',
  /*5033*/ (asnbyte)'\x6e',
  /*5034*/ (asnbyte)'\x64',
  /*5035*/ (asnbyte)'\x73',
  /*5036*/ (asnbyte)'\x54',
  /*5037*/ (asnbyte)'\x69',
  /*5038*/ (asnbyte)'\x6d',
  /*5039*/ (asnbyte)'\x65',
  /*5040*/ (asnbyte)'\x53',
  /*5041*/ (asnbyte)'\x74',
  /*5042*/ (asnbyte)'\x61',
  /*5043*/ (asnbyte)'\x6d',
  /*5044*/ (asnbyte)'\x70',
  /*5045*/ (asnbyte)'\x6f',
  /*5046*/ (asnbyte)'\x63',
  /*5047*/ (asnbyte)'\x63',
  /*5048*/ (asnbyte)'\x75',
  /*5049*/ (asnbyte)'\x72',
  /*5050*/ (asnbyte)'\x73',
  /*5051*/ (asnbyte)'\x64',
  /*5052*/ (asnbyte)'\x75',
  /*5053*/ (asnbyte)'\x72',
  /*5054*/ (asnbyte)'\x61',
  /*5055*/ (asnbyte)'\x74',
  /*5056*/ (asnbyte)'\x69',
  /*5057*/ (asnbyte)'\x6f',
  /*5058*/ (asnbyte)'\x6e',
  /*5059*/ (asnbyte)'\x72',
  /*5060*/ (asnbyte)'\x65',
  /*5061*/ (asnbyte)'\x63',
  /*5062*/ (asnbyte)'\x75',
  /*5063*/ (asnbyte)'\x72',
  /*5064*/ (asnbyte)'\x72',
  /*5065*/ (asnbyte)'\x65',
  /*5066*/ (asnbyte)'\x6e',
  /*5067*/ (asnbyte)'\x74',
  /*5068*/ (asnbyte)'\x4f',
  /*5069*/ (asnbyte)'\x70',
  /*5070*/ (asnbyte)'\x65',
  /*5071*/ (asnbyte)'\x72',
  /*5072*/ (asnbyte)'\x61',
  /*5073*/ (asnbyte)'\x74',
  /*5074*/ (asnbyte)'\x69',
  /*5075*/ (asnbyte)'\x6f',
  /*5076*/ (asnbyte)'\x6e',
  /*5077*/ (asnbyte)'\x73',
  /*5078*/ (asnbyte)'\x63',
  /*5079*/ (asnbyte)'\x68',
  /*5080*/ (asnbyte)'\x65',
  /*5081*/ (asnbyte)'\x64',
  /*5082*/ (asnbyte)'\x75',
  /*5083*/ (asnbyte)'\x6c',
  /*5084*/ (asnbyte)'\x65',
  /*5085*/ (asnbyte)'\x64',
  /*5086*/ (asnbyte)'\x54',
  /*5087*/ (asnbyte)'\x69',
  /*5088*/ (asnbyte)'\x6d',
  /*5089*/ (asnbyte)'\x65',
  /*5090*/ (asnbyte)'\x53',
  /*5091*/ (asnbyte)'\x65',
  /*5092*/ (asnbyte)'\x72',
  /*5093*/ (asnbyte)'\x76',
  /*5094*/ (asnbyte)'\x69',
  /*5095*/ (asnbyte)'\x63',
  /*5096*/ (asnbyte)'\x65',
  /*5097*/ (asnbyte)'\x54',
  /*5098*/ (asnbyte)'\x72',
  /*5099*/ (asnbyte)'\x69',
  /*5100*/ (asnbyte)'\x67',
  /*5101*/ (asnbyte)'\x67',
  /*5102*/ (asnbyte)'\x65',
  /*5103*/ (asnbyte)'\x72',
  /*5104*/ (asnbyte)'\x65',
  /*5105*/ (asnbyte)'\x76',
  /*5106*/ (asnbyte)'\x65',
  /*5107*/ (asnbyte)'\x6e',
  /*5108*/ (asnbyte)'\x74',
  /*5109*/ (asnbyte)'\x52',
  /*5110*/ (asnbyte)'\x75',
  /*5111*/ (asnbyte)'\x6c',
  /*5112*/ (asnbyte)'\x65',
  /*5113*/ (asnbyte)'\x6e',
  /*5114*/ (asnbyte)'\x65',
  /*5115*/ (asnbyte)'\x76',
  /*5116*/ (asnbyte)'\x53',
  /*5117*/ (asnbyte)'\x65',
  /*5118*/ (asnbyte)'\x72',
  /*5119*/ (asnbyte)'\x76',
  /*5120*/ (asnbyte)'\x69',
  /*5121*/ (asnbyte)'\x63',
  /*5122*/ (asnbyte)'\x65',
  /*5123*/ (asnbyte)'\x44',
  /*5124*/ (asnbyte)'\x61',
  /*5125*/ (asnbyte)'\x74',
  /*5126*/ (asnbyte)'\x61',
  /*5127*/ (asnbyte)'\x74',
  /*5128*/ (asnbyte)'\x72',
  /*5129*/ (asnbyte)'\x61',
  /*5130*/ (asnbyte)'\x63',
  /*5131*/ (asnbyte)'\x6b',
  /*5132*/ (asnbyte)'\x50',
  /*5133*/ (asnbyte)'\x6f',
  /*5134*/ (asnbyte)'\x69',
  /*5135*/ (asnbyte)'\x6e',
  /*5136*/ (asnbyte)'\x74',
  /*5137*/ (asnbyte)'\x73',
  /*5138*/ (asnbyte)'\x74',
  /*5139*/ (asnbyte)'\x72',
  /*5140*/ (asnbyte)'\x69',
  /*5141*/ (asnbyte)'\x70',
  /*5142*/ (asnbyte)'\x46',
  /*5143*/ (asnbyte)'\x72',
  /*5144*/ (asnbyte)'\x61',
  /*5145*/ (asnbyte)'\x67',
  /*5146*/ (asnbyte)'\x6d',
  /*5147*/ (asnbyte)'\x65',
  /*5148*/ (asnbyte)'\x6e',
  /*5149*/ (asnbyte)'\x74',
  /*5150*/ (asnbyte)'\x73',
  /*5151*/ (asnbyte)'\x74',
  /*5152*/ (asnbyte)'\x72',
  /*5153*/ (asnbyte)'\x69',
  /*5154*/ (asnbyte)'\x70',
  /*5155*/ (asnbyte)'\x6f',
  /*5156*/ (asnbyte)'\x74',
  /*5157*/ (asnbyte)'\x61',
  /*5158*/ (asnbyte)'\x76',
  /*5159*/ (asnbyte)'\x65',
  /*5160*/ (asnbyte)'\x68',
  /*5161*/ (asnbyte)'\x69',
  /*5162*/ (asnbyte)'\x63',
  /*5163*/ (asnbyte)'\x6c',
  /*5164*/ (asnbyte)'\x65',
  /*5165*/ (asnbyte)'\x53',
  /*5166*/ (asnbyte)'\x74',
  /*5167*/ (asnbyte)'\x61',
  /*5168*/ (asnbyte)'\x74',
  /*5169*/ (asnbyte)'\x75',
  /*5170*/ (asnbyte)'\x73',
  /*5171*/ (asnbyte)'\x63',
  /*5172*/ (asnbyte)'\x6f',
  /*5173*/ (asnbyte)'\x6e',
  /*5174*/ (asnbyte)'\x66',
  /*5175*/ (asnbyte)'\x69',
  /*5176*/ (asnbyte)'\x67',
  /*5177*/ (asnbyte)'\x75',
  /*5178*/ (asnbyte)'\x72',
  /*5179*/ (asnbyte)'\x61',
  /*5180*/ (asnbyte)'\x74',
  /*5181*/ (asnbyte)'\x69',
  /*5182*/ (asnbyte)'\x6f',
  /*5183*/ (asnbyte)'\x6e',
  /*5184*/ (asnbyte)'\x70',
  /*5185*/ (asnbyte)'\x6f',
  /*5186*/ (asnbyte)'\x69',
  /*5187*/ (asnbyte)'\x73',
  /*5188*/ (asnbyte)'\x73',
  /*5189*/ (asnbyte)'\x65',
  /*5190*/ (asnbyte)'\x72',
  /*5191*/ (asnbyte)'\x76',
  /*5192*/ (asnbyte)'\x69',
  /*5193*/ (asnbyte)'\x63',
  /*5194*/ (asnbyte)'\x65',
  /*5195*/ (asnbyte)'\x53',
  /*5196*/ (asnbyte)'\x74',
  /*5197*/ (asnbyte)'\x61',
  /*5198*/ (asnbyte)'\x74',
  /*5199*/ (asnbyte)'\x75',
  /*5200*/ (asnbyte)'\x73',
  /*5201*/ (asnbyte)'\x73',
  /*5202*/ (asnbyte)'\x65',
  /*5203*/ (asnbyte)'\x72',
  /*5204*/ (asnbyte)'\x76',
  /*5205*/ (asnbyte)'\x69',
  /*5206*/ (asnbyte)'\x63',
  /*5207*/ (asnbyte)'\x65',
  /*5208*/ (asnbyte)'\x52',
  /*5209*/ (asnbyte)'\x65',
  /*5210*/ (asnbyte)'\x73',
  /*5211*/ (asnbyte)'\x75',
  /*5212*/ (asnbyte)'\x6c',
  /*5213*/ (asnbyte)'\x74',
  /*5214*/ (asnbyte)'\x73',
  /*5215*/ (asnbyte)'\x65',
  /*5216*/ (asnbyte)'\x72',
  /*5217*/ (asnbyte)'\x76',
  /*5218*/ (asnbyte)'\x69',
  /*5219*/ (asnbyte)'\x63',
  /*5220*/ (asnbyte)'\x65',
  /*5221*/ (asnbyte)'\x43',
  /*5222*/ (asnbyte)'\x6f',
  /*5223*/ (asnbyte)'\x6d',
  /*5224*/ (asnbyte)'\x6d',
  /*5225*/ (asnbyte)'\x61',
  /*5226*/ (asnbyte)'\x6e',
  /*5227*/ (asnbyte)'\x64',
  /*5228*/ (asnbyte)'\x73',
  /*5229*/ (asnbyte)'\x65',
  /*5230*/ (asnbyte)'\x72',
  /*5231*/ (asnbyte)'\x76',
  /*5232*/ (asnbyte)'\x69',
  /*5233*/ (asnbyte)'\x63',
  /*5234*/ (asnbyte)'\x65',
  /*5235*/ (asnbyte)'\x50',
  /*5236*/ (asnbyte)'\x61',
  /*5237*/ (asnbyte)'\x72',
  /*5238*/ (asnbyte)'\x61',
  /*5239*/ (asnbyte)'\x6d',
  /*5240*/ (asnbyte)'\x65',
  /*5241*/ (asnbyte)'\x74',
  /*5242*/ (asnbyte)'\x65',
  /*5243*/ (asnbyte)'\x72',
  /*5244*/ (asnbyte)'\x73',
  /*5245*/ (asnbyte)'\x73',
  /*5246*/ (asnbyte)'\x65',
  /*5247*/ (asnbyte)'\x72',
  /*5248*/ (asnbyte)'\x76',
  /*5249*/ (asnbyte)'\x69',
  /*5250*/ (asnbyte)'\x63',
  /*5251*/ (asnbyte)'\x65',
  /*5252*/ (asnbyte)'\x54',
  /*5253*/ (asnbyte)'\x72',
  /*5254*/ (asnbyte)'\x69',
  /*5255*/ (asnbyte)'\x67',
  /*5256*/ (asnbyte)'\x67',
  /*5257*/ (asnbyte)'\x65',
  /*5258*/ (asnbyte)'\x72',
  /*5259*/ (asnbyte)'\x53',
  /*5260*/ (asnbyte)'\x65',
  /*5261*/ (asnbyte)'\x72',
  /*5262*/ (asnbyte)'\x76',
  /*5263*/ (asnbyte)'\x69',
  /*5264*/ (asnbyte)'\x63',
  /*5265*/ (asnbyte)'\x65',
  /*5266*/ (asnbyte)'\x44',
  /*5267*/ (asnbyte)'\x61',
  /*5268*/ (asnbyte)'\x74',
  /*5269*/ (asnbyte)'\x61',
  /*5270*/ (asnbyte)'\x73',
  /*5271*/ (asnbyte)'\x65',
  /*5272*/ (asnbyte)'\x71',
  /*5273*/ (asnbyte)'\x73',
  /*5274*/ (asnbyte)'\x65',
  /*5275*/ (asnbyte)'\x72',
  /*5276*/ (asnbyte)'\x76',
  /*5277*/ (asnbyte)'\x69',
  /*5278*/ (asnbyte)'\x63',
  /*5279*/ (asnbyte)'\x65',
  /*5280*/ (asnbyte)'\x44',
  /*5281*/ (asnbyte)'\x61',
  /*5282*/ (asnbyte)'\x74',
  /*5283*/ (asnbyte)'\x61',
  /*5284*/ (asnbyte)'\x73',
  /*5285*/ (asnbyte)'\x65',
  /*5286*/ (asnbyte)'\x72',
  /*5287*/ (asnbyte)'\x76',
  /*5288*/ (asnbyte)'\x69',
  /*5289*/ (asnbyte)'\x63',
  /*5290*/ (asnbyte)'\x65',
  /*5291*/ (asnbyte)'\x49',
  /*5292*/ (asnbyte)'\x64',
  /*5293*/ (asnbyte)'\x52',
  /*5294*/ (asnbyte)'\x65',
  /*5295*/ (asnbyte)'\x71',
  /*5296*/ (asnbyte)'\x75',
  /*5297*/ (asnbyte)'\x65',
  /*5298*/ (asnbyte)'\x73',
  /*5299*/ (asnbyte)'\x74',
  /*5300*/ (asnbyte)'\x42',
  /*5301*/ (asnbyte)'\x6f',
  /*5302*/ (asnbyte)'\x64',
  /*5303*/ (asnbyte)'\x79'
};
asnTOHNull asnZOHNull[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGOHNull),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE// isConstraintExtensible
    }
};
asnTPENonKnownMultiplierCharacterString asnZPENonKnownMultiplierCharacterString[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGPENonKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD11UTF8String// stringType
    }
};
asnTPFKnownMultiplierCharacterString asnZPFKnownMultiplierCharacterString[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[1],// perLength
#endif
    1,// characterSize
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[3],// perLength
#endif
    1,// characterSize
    },
  /*2*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[4],// perLength
#endif
    1,// characterSize
    },
  /*3*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[5],// perLength
#endif
    1,// characterSize
    },
  /*4*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
    1,// characterSize
    },
  /*5*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[6],// perLength
#endif
    1,// characterSize
    },
  /*6*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[7],// perLength
#endif
    1,// characterSize
    },
  /*7*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[8],// perLength
#endif
    1,// characterSize
    },
  /*8*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[10],// perLength
#endif
    1,// characterSize
    },
  /*9*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "VIN",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[5],// perLength
#endif
    1,// characterSize
    },
  /*10*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[12],// perLength
#endif
    1,// characterSize
    },
  /*11*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[13],// perLength
#endif
    1,// characterSize
    },
  /*12*/ {
    asnRCast(asnOBJECTTp,&asnGPFKnownMultiplierCharacterString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCPD02PrintableString,// stringType
#ifdef asnCodCPER
    &asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[0],// perAlphabet
    &asnZPLPerEffectiveLengthConstraint[14],// perLength
#endif
    1,// characterSize
    }
};
asnTPHBitString asnZPHBitString[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGPHBitString),
//     (asnPQUReference)0,// constraint
//     "DtcStatusBitsIso14229",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZPINamedBit[0],// name
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
    asnCCast(asnPPVNumberInterval,&asnZPVNumberInterval[0]),// interval
    8,// nameCount
    1,// intervalCount
    asnTRUE// hasNamedBits
    }
};
asnTPINamedBit asnZPINamedBit[]=
{
  /*0*/ {
//     "testFailed",// identifier
#ifdef asnCodFXER
    "",// xerTag
#endif
    ((asnMAXUINT)0U)// value
    },
  /*1*/ {
//     "testFailedThisOperationCycle",// identifier
#ifdef asnCodFXER
    "",// xerTag
#endif
    ((asnMAXUINT)1U)// value
    },
  /*2*/ {
//     "pendingDTC",// identifier
#ifdef asnCodFXER
    "",// xerTag
#endif
    ((asnMAXUINT)2U)// value
    },
  /*3*/ {
//     "confirmedDTC",// identifier
#ifdef asnCodFXER
    "",// xerTag
#endif
    ((asnMAXUINT)3U)// value
    },
  /*4*/ {
//     "testNotCompletedSinceLastClear",// identifier
#ifdef asnCodFXER
    "",// xerTag
#endif
    ((asnMAXUINT)4U)// value
    },
  /*5*/ {
//     "testFailedSinceLastClear",// identifier
#ifdef asnCodFXER
    "",// xerTag
#endif
    ((asnMAXUINT)5U)// value
    },
  /*6*/ {
//     "testNotCompletedThisOperationCycle",// identifier
#ifdef asnCodFXER
    "",// xerTag
#endif
    ((asnMAXUINT)6U)// value
    },
  /*7*/ {
//     "warningIndicatorRequested",// identifier
#ifdef asnCodFXER
    "",// xerTag
#endif
    ((asnMAXUINT)7U)// value
    }
};
asnTPGOctetString asnZPGOctetString[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGPGOctetString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[2]// perLength
#endif
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGPGOctetString),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[9]// perLength
#endif
    }
};
asnTPBSequenceOf asnZPBSequenceOf[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGPBSequenceOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[0]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGPBSequenceOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[2]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[11],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*2*/ {
    asnRCast(asnOBJECTTp,&asnGPBSequenceOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[4]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*3*/ {
    asnRCast(asnOBJECTTp,&asnGPBSequenceOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[7]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*4*/ {
    asnRCast(asnOBJECTTp,&asnGPBSequenceOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[11]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*5*/ {
    asnRCast(asnOBJECTTp,&asnGPBSequenceOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[12]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*6*/ {
    asnRCast(asnOBJECTTp,&asnGPBSequenceOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[13]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*7*/ {
    asnRCast(asnOBJECTTp,&asnGPBSequenceOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[14]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*8*/ {
    asnRCast(asnOBJECTTp,&asnGPBSequenceOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[15]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    }
};
asnTSWSetSeqOfNamedType asnZSWSetSeqOfNamedType[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[117],// xerTag : ServiceParameter
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[4])),// type
//     "",// identifier
    (asnValueCreator)asncserviceParameterss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncserviceParameterss, optional) - asnOFFSETOF(ServiceParameter, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[365],// xerTag : PointOfInterest
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[8])),// type
//     "",// identifier
    (asnValueCreator)asncpoiss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncpoiss, optional) - asnOFFSETOF(PointOfInterest, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*2*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[117],// xerTag : ServiceParameter
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[4])),// type
//     "",// identifier
    (asnValueCreator)asncattributess::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncattributess, optional) - asnOFFSETOF(ServiceParameter, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*3*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[341],// xerTag : ConfigurationItem
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[13])),// type
//     "",// identifier
    (asnValueCreator)asncitemss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncitemss, name) - asnOFFSETOF(ConfigurationItem, name), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*4*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[117],// xerTag : ServiceParameter
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[4])),// type
//     "",// identifier
    (asnValueCreator)asncConfigurationItem__parameterss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncConfigurationItem__parameterss, optional) - asnOFFSETOF(ServiceParameter, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*5*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[166],// xerTag : GenericVehicleSignal
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[25])),// type
//     "",// identifier
    (asnValueCreator)asncEcuWarningMessagess::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncEcuWarningMessagess, optional) - asnOFFSETOF(GenericVehicleSignal, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*6*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[166],// xerTag : GenericVehicleSignal
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[25])),// type
//     "",// identifier
    (asnValueCreator)asncAdditionalVehicleStatus__signalss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncAdditionalVehicleStatus__signalss, optional) - asnOFFSETOF(GenericVehicleSignal, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*7*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[93],// xerTag : Position
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[9])),// type
//     "",// identifier
    (asnValueCreator)asncrecentPositionss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncrecentPositionss, optional) - asnOFFSETOF(Position, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*8*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[166],// xerTag : GenericVehicleSignal
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[25])),// type
//     "",// identifier
    (asnValueCreator)asncOEMMSD__signalss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncOEMMSD__signalss, optional) - asnOFFSETOF(GenericVehicleSignal, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*9*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[141],// xerTag : DiagnosticTroubleCode
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[31])),// type
//     "",// identifier
    (asnValueCreator)asncdtcss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncdtcss, optional) - asnOFFSETOF(DiagnosticTroubleCode, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*10*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[124],// xerTag : ECUDiagnostic
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[30])),// type
//     "",// identifier
    (asnValueCreator)asncECUDiagnosticss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncECUDiagnosticss, optional) - asnOFFSETOF(ECUDiagnostic, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*11*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[117],// xerTag : ServiceParameter
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[4])),// type
//     "",// identifier
    (asnValueCreator)asncNotification__parameterss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncNotification__parameterss, optional) - asnOFFSETOF(ServiceParameter, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*12*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[81],// xerTag : TrackPoint
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[38])),// type
//     "",// identifier
    (asnValueCreator)asnctrackpointss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asnctrackpointss, optional) - asnOFFSETOF(TrackPoint, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*13*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[93],// xerTag : Position
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[9])),// type
//     "",// identifier
    (asnValueCreator)asncwaypointss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncwaypointss, optional) - asnOFFSETOF(Position, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*14*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[92],// xerTag : TripFragment
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[39])),// type
//     "",// identifier
    (asnValueCreator)asnctripFragmentss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asnctripFragmentss, optional) - asnOFFSETOF(TripFragment, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*15*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[81],// xerTag : TrackPoint
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[38])),// type
//     "",// identifier
    (asnValueCreator)asnctrackPointss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asnctrackPointss, optional) - asnOFFSETOF(TrackPoint, optional), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*16*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[34],// xerTag : ECUData
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[44])),// type
//     "",// identifier
    (asnValueCreator)asncdatas::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncdatas, ecu) - asnOFFSETOF(ECUData, ecu), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*17*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[30],// xerTag : DIDData
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[45])),// type
//     "",// identifier
    (asnValueCreator)asncdidDatas::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncdidDatas, id) - asnOFFSETOF(DIDData, id), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*18*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[29],// xerTag : DTCData
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[46])),// type
//     "",// identifier
    (asnValueCreator)asncdtcDatas::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncdtcDatas, id) - asnOFFSETOF(DTCData, id), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    },
  /*19*/ {
    asnRCast(asnOBJECTTp,&asnGSWSetSeqOfNamedType),
#ifdef asnCodFBER
    &asnZOGTag[31],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[19],// xerTag : RuleCondition
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[48])),// type
//     "",// identifier
    (asnValueCreator)asncconditionss::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncconditionss, condition) - asnOFFSETOF(RuleCondition, condition), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNULL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE, // apiIndValue
    asnTRUE, //isInline
    (asnValueCreator)0 // recSeqValueCreator
    }
};
asnTPCSetOf asnZPCSetOf[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGPCSetOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[1]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGPCSetOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[3]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*2*/ {
    asnRCast(asnOBJECTTp,&asnGPCSetOf),
//     (asnPQUReference)0,// constraint
//     "EcuWarningMessages",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[5]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*3*/ {
    asnRCast(asnOBJECTTp,&asnGPCSetOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[6]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*4*/ {
    asnRCast(asnOBJECTTp,&asnGPCSetOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[8]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*5*/ {
    asnRCast(asnOBJECTTp,&asnGPCSetOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[9]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*6*/ {
    asnRCast(asnOBJECTTp,&asnGPCSetOf),
//     (asnPQUReference)0,// constraint
//     "ECUDiagnostics",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[10]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*7*/ {
    asnRCast(asnOBJECTTp,&asnGPCSetOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[16]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*8*/ {
    asnRCast(asnOBJECTTp,&asnGPCSetOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[17]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*9*/ {
    asnRCast(asnOBJECTTp,&asnGPCSetOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[18]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    },
  /*10*/ {
    asnRCast(asnOBJECTTp,&asnGPCSetOf),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    asnCCast(asnPSWSetSeqOfNamedType,&asnZSWSetSeqOfNamedType[19]),/* namedType */
#ifdef asnCodCPER
    &asnZPLPerEffectiveLengthConstraint[0],// perLength
#endif
#ifdef asnCodFXER
    asnCPB02XMLDelimitedItemList// xerCase
#endif
    }
};
asnTPNInteger asnZPNInteger[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "MessageTTL",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[1],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "RequestId",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[2],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*2*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "MessageSequence",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[2],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*3*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[3],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*4*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[4],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*5*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[5],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*6*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[8],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*7*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[9],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*8*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[10],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*9*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[11],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*10*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[12],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*11*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[13],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*12*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[2],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*13*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[14],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*14*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[15],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*15*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[16],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnTRUE// isUnsigned
    },
  /*16*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "NotificationReason",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     &asnZPONamedInteger[37],// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[3],// perNumber
#endif
//     2,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*17*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "HealthStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     &asnZPONamedInteger[23],// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[3],// perNumber
#endif
//     4,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*18*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "PowerSource",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     &asnZPONamedInteger[39],// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[3],// perNumber
#endif
//     2,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*19*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[0],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*20*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[18],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*21*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "VehicleType",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     &asnZPONamedInteger[27],// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[3],// perNumber
#endif
//     4,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*22*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[17],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*23*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[19],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*24*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[20],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*25*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[21],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*26*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[22],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*27*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[23],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*28*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[24],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*29*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[25],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*30*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[26],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*31*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[27],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*32*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[28],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*33*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "FuelType",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     &asnZPONamedInteger[0],// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[3],// perNumber
#endif
//     9,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*34*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "KeyStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     &asnZPONamedInteger[31],// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[3],// perNumber
#endif
//     3,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*35*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "EngineStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     &asnZPONamedInteger[34],// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[3],// perNumber
#endif
//     3,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*36*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[29],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*37*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "ErrorCode",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     &asnZPONamedInteger[9],// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[3],// perNumber
#endif
//     9,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*38*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "ServiceCommand",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     &asnZPONamedInteger[18],// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[30],// perNumber
#endif
//     5,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*39*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[31],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*40*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[1],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*41*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[32],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*42*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[33],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*43*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     (asnPPONamedInteger)0,// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[34],// perNumber
#endif
//     0,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    },
  /*44*/ {
    asnRCast(asnOBJECTTp,&asnGPNInteger),
//     (asnPQUReference)0,// constraint
//     "ServiceId",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
//     &asnZPONamedInteger[41],// name
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[35],// perNumber
#endif
//     45,// nameCount
    asnFALSE,// isHugeInteger
    asnFALSE// isUnsigned
    }
};
asnTPPEnumerated asnZPPEnumerated[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGPPEnumerated),
//     (asnPQUReference)0,// constraint
//     "RequestType",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[0],// perNumber
#endif
    &asnZPQNamedEnumerated[25],// root
    (asnPPQNamedEnumerated)0,// extensions
    2,// rootCount
    0,// extensionsCount
    asnTRUE,// hasCanonicalRoot
    asnFALSE// isExtensible
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGPPEnumerated),
//     (asnPQUReference)0,// constraint
//     "CreatorId",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[0],// perNumber
#endif
    &asnZPQNamedEnumerated[27],// root
    (asnPPQNamedEnumerated)0,// extensions
    2,// rootCount
    0,// extensionsCount
    asnTRUE,// hasCanonicalRoot
    asnFALSE// isExtensible
    },
  /*2*/ {
    asnRCast(asnOBJECTTp,&asnGPPEnumerated),
//     (asnPQUReference)0,// constraint
//     "NEVDeadReckoningType",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[6],// perNumber
#endif
    &asnZPQNamedEnumerated[19],// root
    (asnPPQNamedEnumerated)0,// extensions
    3,// rootCount
    0,// extensionsCount
    asnTRUE,// hasCanonicalRoot
    asnFALSE// isExtensible
    },
  /*3*/ {
    asnRCast(asnOBJECTTp,&asnGPPEnumerated),
//     (asnPQUReference)0,// constraint
//     "NEVGnssFixType",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[7],// perNumber
#endif
    &asnZPQNamedEnumerated[0],// root
    (asnPPQNamedEnumerated)0,// extensions
    5,// rootCount
    0,// extensionsCount
    asnTRUE,// hasCanonicalRoot
    asnFALSE// isExtensible
    },
  /*4*/ {
    asnRCast(asnOBJECTTp,&asnGPPEnumerated),
//     (asnPQUReference)0,// constraint
//     "NEVTriggerCondition",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[7],// perNumber
#endif
    &asnZPQNamedEnumerated[5],// root
    (asnPPQNamedEnumerated)0,// extensions
    5,// rootCount
    0,// extensionsCount
    asnFALSE,// hasCanonicalRoot
    asnFALSE// isExtensible
    },
  /*5*/ {
    asnRCast(asnOBJECTTp,&asnGPPEnumerated),
//     (asnPQUReference)0,// constraint
//     "TEMPowerMode",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[17],// perNumber
#endif
    &asnZPQNamedEnumerated[15],// root
    (asnPPQNamedEnumerated)0,// extensions
    4,// rootCount
    0,// extensionsCount
    asnTRUE,// hasCanonicalRoot
    asnFALSE// isExtensible
    },
  /*6*/ {
    asnRCast(asnOBJECTTp,&asnGPPEnumerated),
//     (asnPQUReference)0,// constraint
//     "ServiceWarningTriggerReason",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[7],// perNumber
#endif
    &asnZPQNamedEnumerated[10],// root
    (asnPPQNamedEnumerated)0,// extensions
    5,// rootCount
    0,// extensionsCount
    asnTRUE,// hasCanonicalRoot
    asnFALSE// isExtensible
    },
  /*7*/ {
    asnRCast(asnOBJECTTp,&asnGPPEnumerated),
//     (asnPQUReference)0,// constraint
//     "SRSStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[6],// perNumber
#endif
    &asnZPQNamedEnumerated[22],// root
    (asnPPQNamedEnumerated)0,// extensions
    3,// rootCount
    0,// extensionsCount
    asnTRUE,// hasCanonicalRoot
    asnFALSE// isExtensible
    },
  /*8*/ {
    asnRCast(asnOBJECTTp,&asnGPPEnumerated),
//     (asnPQUReference)0,// constraint
//     "EngineBlockedStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[0],// perNumber
#endif
    &asnZPQNamedEnumerated[29],// root
    (asnPPQNamedEnumerated)0,// extensions
    2,// rootCount
    0,// extensionsCount
    asnTRUE,// hasCanonicalRoot
    asnFALSE// isExtensible
    }
};
asnTPQNamedEnumerated asnZPQNamedEnumerated[]=
{
  /*0*/ {
#ifdef asnCodVTRA
    "notAvailable",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[44],// xerTag : notAvailable
#endif
    0,// value
    },
  /*1*/ {
#ifdef asnCodVTRA
    "noFix",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[43],// xerTag : noFix
#endif
    1,// value
    },
  /*2*/ {
#ifdef asnCodVTRA
    "fix2D",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[42],// xerTag : fix2D
#endif
    2,// value
    },
  /*3*/ {
#ifdef asnCodVTRA
    "fix3D",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[41],// xerTag : fix3D
#endif
    3,// value
    },
  /*4*/ {
#ifdef asnCodVTRA
    "startupMode",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[40],// xerTag : startupMode
#endif
    4,// value
    },
  /*5*/ {
#ifdef asnCodVTRA
    "periodicTrg",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[72],// xerTag : periodicTrg
#endif
    1,// value
    },
  /*6*/ {
#ifdef asnCodVTRA
    "umChangeTrg",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[71],// xerTag : umChangeTrg
#endif
    2,// value
    },
  /*7*/ {
#ifdef asnCodVTRA
    "chargeStartTrg",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[70],// xerTag : chargeStartTrg
#endif
    3,// value
    },
  /*8*/ {
#ifdef asnCodVTRA
    "chargeStopTrg",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[69],// xerTag : chargeStopTrg
#endif
    4,// value
    },
  /*9*/ {
#ifdef asnCodVTRA
    "disableRmsTrg",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[68],// xerTag : disableRmsTrg
#endif
    5,// value
    },
  /*10*/ {
#ifdef asnCodVTRA
    "calendar",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[267],// xerTag : calendar
#endif
    0,// value
    },
  /*11*/ {
#ifdef asnCodVTRA
    "distance",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[266],// xerTag : distance
#endif
    1,// value
    },
  /*12*/ {
#ifdef asnCodVTRA
    "engineHours",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[265],// xerTag : engineHours
#endif
    2,// value
    },
  /*13*/ {
#ifdef asnCodVTRA
    "engineRequest",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[264],// xerTag : engineRequest
#endif
    3,// value
    },
  /*14*/ {
#ifdef asnCodVTRA
    "other",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[263],// xerTag : other
#endif
    4,// value
    },
  /*15*/ {
#ifdef asnCodVTRA
    "normal",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[149],// xerTag : normal
#endif
    0,// value
    },
  /*16*/ {
#ifdef asnCodVTRA
    "standby",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[148],// xerTag : standby
#endif
    1,// value
    },
  /*17*/ {
#ifdef asnCodVTRA
    "sleep-poll",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[147],// xerTag : sleep-poll
#endif
    2,// value
    },
  /*18*/ {
#ifdef asnCodVTRA
    "off",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[146],// xerTag : off
#endif
    3,// value
    },
  /*19*/ {
#ifdef asnCodVTRA
    "noDr",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[39],// xerTag : noDr
#endif
    0,// value
    },
  /*20*/ {
#ifdef asnCodVTRA
    "drNoMapMatch",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[38],// xerTag : drNoMapMatch
#endif
    1,// value
    },
  /*21*/ {
#ifdef asnCodVTRA
    "drMapMatched",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[37],// xerTag : drMapMatched
#endif
    2,// value
    },
  /*22*/ {
#ifdef asnCodVTRA
    "no-srs-info",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[290],// xerTag : no-srs-info
#endif
    0,// value
    },
  /*23*/ {
#ifdef asnCodVTRA
    "srs-not-deployed",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[289],// xerTag : srs-not-deployed
#endif
    1,// value
    },
  /*24*/ {
#ifdef asnCodVTRA
    "srs-deployed",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[288],// xerTag : srs-deployed
#endif
    2,// value
    },
  /*25*/ {
#ifdef asnCodVTRA
    "serviceRequest",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[4],// xerTag : serviceRequest
#endif
    0,// value
    },
  /*26*/ {
#ifdef asnCodVTRA
    "ack",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[3],// xerTag : ack
#endif
    1,// value
    },
  /*27*/ {
#ifdef asnCodVTRA
    "ecu",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[6],// xerTag : ecu
#endif
    0,// value
    },
  /*28*/ {
#ifdef asnCodVTRA
    "cvc",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[5],// xerTag : cvc
#endif
    1,// value
    },
  /*29*/ {
#ifdef asnCodVTRA
    "unblocked",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[326],// xerTag : unblocked
#endif
    0,// value
    },
  /*30*/ {
#ifdef asnCodVTRA
    "blocked",// identifier
#endif
#ifdef asnCodFXER
    &asnZNEXerTag[325],// xerTag : blocked
#endif
    1,// value
    }
};
asnTPVNumberInterval asnZPVNumberInterval[]=
{
  /*0*/ {((asnMAXUINT)0U), asnCHMUINT_LIMIT}
};
asnTOLSequence asnZOLSequence[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "RequestBody",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[0],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[15],// perCoding
#endif
    3, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RequestBody, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "ServiceData",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[3],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[32],// perCoding
#endif
    15, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*2*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "ServiceTrigger",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[18],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[22],// perCoding
#endif
    6, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceTrigger, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*3*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "TimeStamp",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[24],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[0],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TimeStamp, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*4*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "ServiceParameter",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[26],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[4],// perCoding
#endif
    6, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceParameter, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*5*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "ServiceResult",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[32],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[0],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceResult, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*6*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "Error",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[34],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[31],// perCoding
#endif
    3, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Error, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*7*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "ServiceStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[37],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[3],// perCoding
#endif
    1, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*8*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "PointOfInterest",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[38],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[4],// perCoding
#endif
    6, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PointOfInterest, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*9*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "Position",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[44],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[22],// perCoding
#endif
    6, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Position, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*10*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "ContactInfo",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[50],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[25],// perCoding
#endif
    4, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ContactInfo, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*11*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "PostAddress",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[54],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[22],// perCoding
#endif
    6, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PostAddress, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*12*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "Configuration",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[60],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[5],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*13*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "ConfigurationItem",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[62],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[5],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*14*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "VehicleStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[64],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[30],// perCoding
#endif
    7, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(VehicleStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*15*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "BasicVehicleStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[71],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[29],// perCoding
#endif
    9, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BasicVehicleStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*16*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "AdditionalVehicleStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[80],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[28],// perCoding
#endif
    12, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*17*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "ConfigurationAndIdentity",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[92],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[2],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ConfigurationAndIdentity, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*18*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "DrivingSafetyStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[94],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[27],// perCoding
#endif
    21, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*19*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "MaintenanceStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[115],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[26],// perCoding
#endif
    17, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*20*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "BatteryStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[132],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[25],// perCoding
#endif
    4, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BatteryStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*21*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "RunningStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[136],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[24],// perCoding
#endif
    14, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*22*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "ClimateStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[150],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[23],// perCoding
#endif
    29, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*23*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "DrivingBehaviourStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[179],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[22],// perCoding
#endif
    6, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingBehaviourStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*24*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "PollutionStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[185],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[2],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PollutionStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*25*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "GenericVehicleSignal",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[187],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[21],// perCoding
#endif
    7, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(GenericVehicleSignal, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*26*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "ElectricVehicleStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[194],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[20],// perCoding
#endif
    20, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*27*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "CarConfig",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[214],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[15],// perCoding
#endif
    3, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(CarConfig, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*28*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "OEMMSD",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[217],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[19],// perCoding
#endif
    12, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*29*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "TEMStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[229],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[18],// perCoding
#endif
    16, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*30*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "ECUDiagnostic",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[245],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[17],// perCoding
#endif
    4, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ECUDiagnostic, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*31*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "DiagnosticTroubleCode",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[249],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[16],// perCoding
#endif
    8, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DiagnosticTroubleCode, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*32*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "NetworkAccessStatus",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[257],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[2],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NetworkAccessStatus, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*33*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "SIMInfo",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[259],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[15],// perCoding
#endif
    3, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(SIMInfo, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*34*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "TheftNotification",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[262],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[5],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*35*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "Notification",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[264],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[14],// perCoding
#endif
    3, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Notification, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*36*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "OTA",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[267],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[13],// perCoding
#endif
    4, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OTA, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*37*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "Trip",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[271],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[12],// perCoding
#endif
    12, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*38*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "TrackPoint",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[283],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[11],// perCoding
#endif
    10, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TrackPoint, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*39*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "TripFragment",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[293],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[10],// perCoding
#endif
    12, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*40*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "NEVServiceData",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[305],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[9],// perCoding
#endif
    7, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*41*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "NEVDRPositionData",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[312],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[8],// perCoding
#endif
    9, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*42*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "NEVCoordinatesLongLat",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[321],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[5],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*43*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "NEVDateTime",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[323],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[7],// perCoding
#endif
    6, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*44*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "ECUData",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[329],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[6],// perCoding
#endif
    4, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*45*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "DIDData",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[333],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[5],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*46*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "DTCData",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[335],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[5],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*47*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "EventRule",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[337],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[4],// perCoding
#endif
    6, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(EventRule, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*48*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "RuleCondition",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[343],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[3],// perCoding
#endif
    1, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*49*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "EventAction",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[344],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[2],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(EventAction, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*50*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "RequestHeader",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[346],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[1],// perCoding
#endif
    7, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RequestHeader, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    },
  /*51*/ {
    asnRCast(asnOBJECTTp,&asnGOLSequence),
//     (asnPQUReference)0,// constraint
//     "VDServiceRequest",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZONSetSeqNamedType[353],// root1
    (asnSONSetSeqNamedType*)0,// root2
    (asnPOOSetSeqExtensionAddition)0,// extensions
#ifdef asnCodFBER
    (asnPOGTag)0,// root2allowedTag
#endif
#ifdef asnCodDXER
    (asnPNEXerTag)0,// root2allowedXerTag
#endif
    (asnPOAMAXSINT)0,// atNotationId
#ifdef asnCodFPER
    &asnZORPerSetSeqCoding[0],// perCoding
#endif
    2, // root1Count
    0, // root2Count
    0, // extensionsCount
#ifdef asnCodFBER
    0, // root2allowedTagCount
#endif
#ifdef asnCodDXER
    0, // root2allowedXerTagCount
#endif
    0, // atNotationIdCount
#ifdef asnNonPodOffsetof
    asnOFFSETOF(VDServiceRequest, optionalField), // apiOptionalOffset
    0, // apiExtensionOffset
#else
    0, // apiOptionalOffset
    0, // apiExtensionOffset
#endif
    asnFALSE// isExtensible
    }
};
asnTONSetSeqNamedType asnZONSetSeqNamedType[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[403],// xerTag : serviceId
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[44])),// type
//     "serviceId",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RequestBody, serviceId), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[402],// xerTag : serviceData
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[1])),// type
//     "serviceData",// identifier
    (asnValueCreator)ServiceData::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RequestBody, serviceData), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*2*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[401],// xerTag : seq
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[2])),// type
//     "seq",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RequestBody, seq), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*3*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[399],// xerTag : serviceTrigger
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[2])),// type
//     "serviceTrigger",// identifier
    (asnValueCreator)ServiceTrigger::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, serviceTrigger), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*4*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[398],// xerTag : serviceParameters
#endif
    asnRCast(asnPODType,asnCCast(asnPPBSequenceOf,&asnZPBSequenceOf[0])),// type
//     "serviceParameters",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, serviceParameters), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*5*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[397],// xerTag : serviceCommand
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[38])),// type
//     "serviceCommand",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, serviceCommand), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*6*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[396],// xerTag : serviceResult
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[5])),// type
//     "serviceResult",// identifier
    (asnValueCreator)ServiceResult::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, serviceResult), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*7*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[395],// xerTag : serviceStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[7])),// type
//     "serviceStatus",// identifier
    (asnValueCreator)ServiceStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, serviceStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*8*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[367],// xerTag : message
#endif
    asnRCast(asnPODType,asnCCast(asnPPRChoice,&asnZPRChoice[0])),// type
//     "message",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, message), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(GeneralMessage__C), // ApiValueSize
#ifdef asnCodFBER
    2, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*9*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[394],// xerTag : pois
#endif
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[0])),// type
//     "pois",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, pois), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*10*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[393],// xerTag : configuration
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[12])),// type
//     "configuration",// identifier
    (asnValueCreator)Configuration::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, configuration), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    7, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*11*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[392],// xerTag : vehicleStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[14])),// type
//     "vehicleStatus",// identifier
    (asnValueCreator)VehicleStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, vehicleStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    8, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*12*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[16],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[391],// xerTag : ota
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[36])),// type
//     "ota",// identifier
    (asnValueCreator)OTA::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, ota), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    9, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[16],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    9, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*13*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[15],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[390],// xerTag : trip
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[37])),// type
//     "trip",// identifier
    (asnValueCreator)Trip::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, trip), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    10, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[15],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    10, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*14*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[14],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[389],// xerTag : tripFragments
#endif
    asnRCast(asnPODType,asnCCast(asnPPBSequenceOf,&asnZPBSequenceOf[7])),// type
//     "tripFragments",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, tripFragments), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    11, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[14],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    11, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*15*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[13],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[388],// xerTag : trackPoints
#endif
    asnRCast(asnPODType,asnCCast(asnPPBSequenceOf,&asnZPBSequenceOf[8])),// type
//     "trackPoints",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, trackPoints), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    12, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[13],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    12, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*16*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[12],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[387],// xerTag : nevServiceData
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[40])),// type
//     "nevServiceData",// identifier
    (asnValueCreator)NEVServiceData::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, nevServiceData), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    13, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[12],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    13, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*17*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[9],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[386],// xerTag : eventRule
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[47])),// type
//     "eventRule",// identifier
    (asnValueCreator)EventRule::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceData, eventRule), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    14, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[9],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    14, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*18*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[384],// xerTag : scheduledTime
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "scheduledTime",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceTrigger, scheduledTime), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*19*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[383],// xerTag : recurrentOperation
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "recurrentOperation",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceTrigger, recurrentOperation), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*20*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[382],// xerTag : duration
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[41])),// type
//     "duration",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceTrigger, duration), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*21*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[21],// xerTag : interval
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[40])),// type
//     "interval",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceTrigger, interval), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*22*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[381],// xerTag : occurs
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[39])),// type
//     "occurs",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceTrigger, occurs), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*23*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[23],// xerTag : endTime
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "endTime",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceTrigger, endTime), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*24*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[379],// xerTag : seconds
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[43])),// type
//     "seconds",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TimeStamp, seconds), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*25*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[378],// xerTag : milliseconds
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[42])),// type
//     "milliseconds",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TimeStamp, milliseconds), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*26*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[207],// xerTag : key
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[12])),// type
//     "key",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceParameter, key), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*27*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[377],// xerTag : intVal
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "intVal",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceParameter, intVal), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*28*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[204],// xerTag : stringVal
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "stringVal",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceParameter, stringVal), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*29*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[203],// xerTag : boolVal
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "boolVal",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceParameter, boolVal), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*30*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[202],// xerTag : timestampVal
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "timestampVal",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceParameter, timestampVal), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*31*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[201],// xerTag : dataVal
#endif
    asnRCast(asnPODType,asnCCast(asnPPGOctetString,&asnZPGOctetString[1])),// type
//     "dataVal",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceParameter, dataVal), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*32*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[375],// xerTag : operationSucceeded
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "operationSucceeded",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceResult, operationSucceeded), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*33*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[374],// xerTag : error
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[6])),// type
//     "error",// identifier
    (asnValueCreator)Error::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceResult, error), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*34*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[372],// xerTag : code
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[37])),// type
//     "code",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Error, code), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*35*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[371],// xerTag : vehicleErrorCode
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "vehicleErrorCode",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Error, vehicleErrorCode), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*36*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[367],// xerTag : message
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[11])),// type
//     "message",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Error, message), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*37*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[369],// xerTag : remoteControlInhibited
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "remoteControlInhibited",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ServiceStatus, remoteControlInhibited), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*38*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[340],// xerTag : name
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "name",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PointOfInterest, name), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*39*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[74],// xerTag : position
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[9])),// type
//     "position",// identifier
    (asnValueCreator)Position::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PointOfInterest, position), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*40*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[364],// xerTag : type
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "type",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PointOfInterest, type), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*41*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[363],// xerTag : contactInfo
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[10])),// type
//     "contactInfo",// identifier
    (asnValueCreator)ContactInfo::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PointOfInterest, contactInfo), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*42*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[362],// xerTag : url
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "url",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PointOfInterest, url), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*43*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[361],// xerTag : attributes
#endif
    asnRCast(asnPODType,asnCCast(asnPPBSequenceOf,&asnZPBSequenceOf[1])),// type
//     "attributes",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PointOfInterest, attributes), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*44*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[52],// xerTag : latitude
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[14])),// type
//     "latitude",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Position, latitude), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*45*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[53],// xerTag : longitude
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[14])),// type
//     "longitude",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Position, longitude), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*46*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[360],// xerTag : altitude
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[36])),// type
//     "altitude",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Position, altitude), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*47*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[359],// xerTag : posCanBeTrusted
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "posCanBeTrusted",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Position, posCanBeTrusted), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*48*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[358],// xerTag : carLocatorStatUploadEn
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "carLocatorStatUploadEn",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Position, carLocatorStatUploadEn), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*49*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[357],// xerTag : marsCoordinates
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "marsCoordinates",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Position, marsCoordinates), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*50*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[355],// xerTag : email
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "email",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ContactInfo, email), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*51*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[354],// xerTag : address
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[11])),// type
//     "address",// identifier
    (asnValueCreator)PostAddress::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ContactInfo, address), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*52*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[353],// xerTag : phone1
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[10])),// type
//     "phone1",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ContactInfo, phone1), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*53*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[352],// xerTag : phone2
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[10])),// type
//     "phone2",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ContactInfo, phone2), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*54*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[350],// xerTag : street
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "street",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PostAddress, street), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*55*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[349],// xerTag : houseNumber
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "houseNumber",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PostAddress, houseNumber), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*56*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[348],// xerTag : city
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "city",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PostAddress, city), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*57*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[347],// xerTag : region
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "region",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PostAddress, region), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*58*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[346],// xerTag : postcode
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "postcode",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PostAddress, postcode), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*59*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[345],// xerTag : country
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "country",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PostAddress, country), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*60*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[343],// xerTag : version
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[4])),// type
//     "version",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Configuration, version), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*61*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[342],// xerTag : items
#endif
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[1])),// type
//     "items",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Configuration, items), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*62*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[340],// xerTag : name
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[4])),// type
//     "name",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ConfigurationItem, name), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*63*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[118],// xerTag : parameters
#endif
    asnRCast(asnPODType,asnCCast(asnPPBSequenceOf,&asnZPBSequenceOf[2])),// type
//     "parameters",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ConfigurationItem, parameters), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*64*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[338],// xerTag : basicVehicleStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[15])),// type
//     "basicVehicleStatus",// identifier
    (asnValueCreator)BasicVehicleStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(VehicleStatus, basicVehicleStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*65*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[337],// xerTag : additionalVehicleStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[16])),// type
//     "additionalVehicleStatus",// identifier
    (asnValueCreator)AdditionalVehicleStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(VehicleStatus, additionalVehicleStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*66*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[336],// xerTag : msd
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[28])),// type
//     "msd",// identifier
    (asnValueCreator)OEMMSD::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(VehicleStatus, msd), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*67*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[335],// xerTag : temStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[29])),// type
//     "temStatus",// identifier
    (asnValueCreator)TEMStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(VehicleStatus, temStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*68*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[157],// xerTag : diagnostics
#endif
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[6])),// type
//     "diagnostics",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(VehicleStatus, diagnostics), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*69*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[334],// xerTag : theftNotification
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[34])),// type
//     "theftNotification",// identifier
    (asnValueCreator)TheftNotification::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(VehicleStatus, theftNotification), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*70*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[333],// xerTag : notification
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[35])),// type
//     "notification",// identifier
    (asnValueCreator)Notification::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(VehicleStatus, notification), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*71*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[74],// xerTag : position
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[9])),// type
//     "position",// identifier
    (asnValueCreator)Position::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BasicVehicleStatus, position), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*72*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[101],// xerTag : speed
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "speed",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BasicVehicleStatus, speed), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*73*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[168],// xerTag : speedValidity
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "speedValidity",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BasicVehicleStatus, speedValidity), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*74*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[100],// xerTag : direction
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[13])),// type
//     "direction",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BasicVehicleStatus, direction), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*75*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[331],// xerTag : engineStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[35])),// type
//     "engineStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BasicVehicleStatus, engineStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*76*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[330],// xerTag : keyStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[34])),// type
//     "keyStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BasicVehicleStatus, keyStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*77*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[329],// xerTag : engineBlockedStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPPEnumerated,&asnZPPEnumerated[8])),// type
//     "engineBlockedStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BasicVehicleStatus, engineBlockedStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*78*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[328],// xerTag : distanceToEmpty
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "distanceToEmpty",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BasicVehicleStatus, distanceToEmpty), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*79*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[327],// xerTag : usageMode
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "usageMode",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BasicVehicleStatus, usageMode), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*80*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[323],// xerTag : confAndId
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[17])),// type
//     "confAndId",// identifier
    (asnValueCreator)ConfigurationAndIdentity::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, confAndId), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*81*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[322],// xerTag : drivingSafetyStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[18])),// type
//     "drivingSafetyStatus",// identifier
    (asnValueCreator)DrivingSafetyStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, drivingSafetyStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*82*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[321],// xerTag : maintenanceStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[19])),// type
//     "maintenanceStatus",// identifier
    (asnValueCreator)MaintenanceStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, maintenanceStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*83*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[320],// xerTag : runningStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[21])),// type
//     "runningStatus",// identifier
    (asnValueCreator)RunningStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, runningStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*84*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[319],// xerTag : climateStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[22])),// type
//     "climateStatus",// identifier
    (asnValueCreator)ClimateStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, climateStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*85*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[318],// xerTag : drivingBehaviourStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[23])),// type
//     "drivingBehaviourStatus",// identifier
    (asnValueCreator)DrivingBehaviourStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, drivingBehaviourStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*86*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[317],// xerTag : pollutionStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[24])),// type
//     "pollutionStatus",// identifier
    (asnValueCreator)PollutionStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, pollutionStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*87*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[316],// xerTag : ecuWarningMessages
#endif
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[2])),// type
//     "ecuWarningMessages",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, ecuWarningMessages), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    7, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*88*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[315],// xerTag : electricVehicleStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[26])),// type
//     "electricVehicleStatus",// identifier
    (asnValueCreator)ElectricVehicleStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, electricVehicleStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    8, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*89*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[16],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[314],// xerTag : carConfig
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[27])),// type
//     "carConfig",// identifier
    (asnValueCreator)CarConfig::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, carConfig), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    9, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[16],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    9, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*90*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[15],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[167],// xerTag : signals
#endif
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[3])),// type
//     "signals",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, signals), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    10, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[15],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    10, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*91*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[14],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[27],// xerTag : data
#endif
    asnRCast(asnPODType,asnCCast(asnPPGOctetString,&asnZPGOctetString[1])),// type
//     "data",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(AdditionalVehicleStatus, data), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    11, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[14],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    11, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*92*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[164],// xerTag : vin
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[9])),// type
//     "vin",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ConfigurationAndIdentity, vin), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*93*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[171],// xerTag : fuelType
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[33])),// type
//     "fuelType",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ConfigurationAndIdentity, fuelType), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*94*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[311],// xerTag : srsStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPPEnumerated,&asnZPPEnumerated[7])),// type
//     "srsStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, srsStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*95*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[310],// xerTag : vehicleAlarm
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "vehicleAlarm",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, vehicleAlarm), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*96*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[309],// xerTag : doorOpenStatusDriver
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "doorOpenStatusDriver",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, doorOpenStatusDriver), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*97*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[308],// xerTag : doorOpenStatusPassenger
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "doorOpenStatusPassenger",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, doorOpenStatusPassenger), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*98*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[307],// xerTag : doorOpenStatusDriverRear
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "doorOpenStatusDriverRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, doorOpenStatusDriverRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*99*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[306],// xerTag : doorOpenStatusPassengerRear
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "doorOpenStatusPassengerRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, doorOpenStatusPassengerRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*100*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[305],// xerTag : doorLockStatusDriver
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "doorLockStatusDriver",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, doorLockStatusDriver), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*101*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[304],// xerTag : doorLockStatusPassenger
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "doorLockStatusPassenger",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, doorLockStatusPassenger), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    7, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*102*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[303],// xerTag : doorLockStatusDriverRear
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "doorLockStatusDriverRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, doorLockStatusDriverRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    8, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*103*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[16],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[302],// xerTag : doorLockStatusPassengerRear
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "doorLockStatusPassengerRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, doorLockStatusPassengerRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    9, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[16],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    9, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*104*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[15],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[301],// xerTag : trunkOpenStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "trunkOpenStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, trunkOpenStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    10, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[15],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    10, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*105*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[14],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[300],// xerTag : trunkLockStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "trunkLockStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, trunkLockStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    11, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[14],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    11, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*106*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[13],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[299],// xerTag : engineHoodOpenStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "engineHoodOpenStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, engineHoodOpenStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    12, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[13],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    12, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*107*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[12],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[298],// xerTag : centralLockingStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "centralLockingStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, centralLockingStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    13, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[12],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    13, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*108*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[9],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[297],// xerTag : seatBeltStatusDriver
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "seatBeltStatusDriver",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, seatBeltStatusDriver), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    14, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[9],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    14, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*109*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[17],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[296],// xerTag : seatBeltStatusPassenger
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "seatBeltStatusPassenger",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, seatBeltStatusPassenger), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    15, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[17],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    15, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*110*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[21],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[295],// xerTag : seatBeltStatusDriverRear
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "seatBeltStatusDriverRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, seatBeltStatusDriverRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    16, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[21],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    16, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*111*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[20],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[294],// xerTag : seatBeltStatusPassengerRear
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "seatBeltStatusPassengerRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, seatBeltStatusPassengerRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    17, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[20],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    17, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*112*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[19],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[293],// xerTag : handBrakeStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "handBrakeStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, handBrakeStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    18, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[19],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    18, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*113*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[18],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[292],// xerTag : electricParkBrakeStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "electricParkBrakeStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, electricParkBrakeStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    19, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[18],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    19, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*114*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[30],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[291],// xerTag : electricParkBrakeStatusValidity
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "electricParkBrakeStatusValidity",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingSafetyStatus, electricParkBrakeStatusValidity), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    20, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[30],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    20, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*115*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[286],// xerTag : mainBatteryStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[20])),// type
//     "mainBatteryStatus",// identifier
    (asnValueCreator)BatteryStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, mainBatteryStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*116*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[285],// xerTag : tyreStatusDriver
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "tyreStatusDriver",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, tyreStatusDriver), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*117*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[284],// xerTag : tyreStatusPassenger
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "tyreStatusPassenger",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, tyreStatusPassenger), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*118*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[283],// xerTag : tyreStatusDriverRear
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "tyreStatusDriverRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, tyreStatusDriverRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*119*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[282],// xerTag : tyreStatusPassengerRear
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "tyreStatusPassengerRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, tyreStatusPassengerRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*120*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[281],// xerTag : tyrePreWarningDriver
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "tyrePreWarningDriver",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, tyrePreWarningDriver), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*121*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[280],// xerTag : tyrePreWarningPassenger
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "tyrePreWarningPassenger",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, tyrePreWarningPassenger), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*122*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[279],// xerTag : tyrePreWarningDriverRear
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "tyrePreWarningDriverRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, tyrePreWarningDriverRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    7, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*123*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[278],// xerTag : tyrePreWarningPassengerRear
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "tyrePreWarningPassengerRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, tyrePreWarningPassengerRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    8, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*124*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[16],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[277],// xerTag : engineHrsToService
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "engineHrsToService",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, engineHrsToService), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    9, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[16],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    9, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*125*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[15],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[276],// xerTag : distanceToService
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "distanceToService",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, distanceToService), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    10, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[15],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    10, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*126*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[14],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[275],// xerTag : daysToService
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[32])),// type
//     "daysToService",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, daysToService), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    11, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[14],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    11, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*127*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[13],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[274],// xerTag : serviceWarningStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "serviceWarningStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, serviceWarningStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    12, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[13],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    12, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*128*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[12],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[273],// xerTag : serviceWarningTrigger
#endif
    asnRCast(asnPODType,asnCCast(asnPPPEnumerated,&asnZPPEnumerated[6])),// type
//     "serviceWarningTrigger",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, serviceWarningTrigger), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    13, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[12],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    13, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*129*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[9],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[98],// xerTag : odometer
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "odometer",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, odometer), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    14, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[9],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    14, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*130*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[17],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[272],// xerTag : brakeFluidLevelStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "brakeFluidLevelStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, brakeFluidLevelStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    15, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[17],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    15, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*131*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[21],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[271],// xerTag : washerFluidLevelStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "washerFluidLevelStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(MaintenanceStatus, washerFluidLevelStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    16, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[21],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    16, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*132*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[197],// xerTag : stateOfCharge
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "stateOfCharge",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BatteryStatus, stateOfCharge), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*133*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[196],// xerTag : chargeLevel
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "chargeLevel",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BatteryStatus, chargeLevel), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*134*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[269],// xerTag : stateOfHealth
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "stateOfHealth",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BatteryStatus, stateOfHealth), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*135*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[268],// xerTag : voltage
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "voltage",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(BatteryStatus, voltage), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*136*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[261],// xerTag : engineOilLevelStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "engineOilLevelStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, engineOilLevelStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*137*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[260],// xerTag : engineOilTemperature
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "engineOilTemperature",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, engineOilTemperature), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*138*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[259],// xerTag : engineOilPressureWarning
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "engineOilPressureWarning",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, engineOilPressureWarning), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*139*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[258],// xerTag : engineCoolantTemperature
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "engineCoolantTemperature",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, engineCoolantTemperature), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*140*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[257],// xerTag : engineCoolantTemperatureValidity
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "engineCoolantTemperatureValidity",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, engineCoolantTemperatureValidity), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*141*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[256],// xerTag : engineCoolantLevelStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "engineCoolantLevelStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, engineCoolantLevelStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*142*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[255],// xerTag : fuelLevel
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "fuelLevel",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, fuelLevel), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*143*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[254],// xerTag : fuelLevelStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "fuelLevelStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, fuelLevelStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    7, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*144*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[253],// xerTag : aveFuelConsumption
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "aveFuelConsumption",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, aveFuelConsumption), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    8, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*145*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[16],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[252],// xerTag : aveFuelConsumptionInLatestDrivingCycle
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "aveFuelConsumptionInLatestDrivingCycle",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, aveFuelConsumptionInLatestDrivingCycle), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    9, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[16],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    9, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*146*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[15],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[105],// xerTag : avgSpeed
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "avgSpeed",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, avgSpeed), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    10, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[15],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    10, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*147*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[14],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[251],// xerTag : tripMeter1
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "tripMeter1",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, tripMeter1), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    11, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[14],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    11, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*148*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[13],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[250],// xerTag : tripMeter2
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "tripMeter2",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, tripMeter2), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    12, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[13],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    12, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*149*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[12],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[249],// xerTag : bulbStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "bulbStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RunningStatus, bulbStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    13, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[12],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    13, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*150*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[247],// xerTag : winStatusDriver
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "winStatusDriver",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winStatusDriver), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*151*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[246],// xerTag : winStatusDriverValidity
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "winStatusDriverValidity",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winStatusDriverValidity), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*152*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[245],// xerTag : winStatusPassenger
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "winStatusPassenger",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winStatusPassenger), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*153*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[244],// xerTag : winStatusPassengerValidity
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "winStatusPassengerValidity",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winStatusPassengerValidity), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*154*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[243],// xerTag : winStatusDriverRear
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "winStatusDriverRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winStatusDriverRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*155*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[242],// xerTag : winStatusDriverRearValidity
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "winStatusDriverRearValidity",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winStatusDriverRearValidity), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*156*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[241],// xerTag : winStatusPassengerRear
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "winStatusPassengerRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winStatusPassengerRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*157*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[240],// xerTag : winStatusPassengerRearValidity
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "winStatusPassengerRearValidity",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winStatusPassengerRearValidity), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    7, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*158*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[239],// xerTag : sunroofOpenStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[31])),// type
//     "sunroofOpenStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, sunroofOpenStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    8, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*159*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[16],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[238],// xerTag : sunroofOpenStatusValidity
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "sunroofOpenStatusValidity",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, sunroofOpenStatusValidity), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    9, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[16],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    9, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*160*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[15],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[237],// xerTag : ventilateStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "ventilateStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, ventilateStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    10, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[15],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    10, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*161*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[14],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[236],// xerTag : winPosDriver
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[26])),// type
//     "winPosDriver",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winPosDriver), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    11, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[14],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    11, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*162*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[13],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[235],// xerTag : winPosPassenger
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[26])),// type
//     "winPosPassenger",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winPosPassenger), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    12, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[13],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    12, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*163*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[12],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[234],// xerTag : winPosDriverRear
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[26])),// type
//     "winPosDriverRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winPosDriverRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    13, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[12],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    13, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*164*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[9],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[233],// xerTag : winPosPassengerRear
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[26])),// type
//     "winPosPassengerRear",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winPosPassengerRear), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    14, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[9],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    14, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*165*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[17],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[232],// xerTag : interiorTemp
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "interiorTemp",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, interiorTemp), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    15, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[17],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    15, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*166*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[21],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[231],// xerTag : exteriorTemp
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "exteriorTemp",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, exteriorTemp), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    16, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[21],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    16, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*167*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[20],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[230],// xerTag : exteriorTempValidity
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "exteriorTempValidity",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, exteriorTempValidity), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    17, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[20],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    17, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*168*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[19],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[229],// xerTag : preClimateActive
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "preClimateActive",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, preClimateActive), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    18, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[19],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    18, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*169*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[18],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[228],// xerTag : airCleanSts
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "airCleanSts",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, airCleanSts), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    19, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[18],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    19, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*170*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[30],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[227],// xerTag : winCloseReminder
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[25])),// type
//     "winCloseReminder",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, winCloseReminder), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    20, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[30],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    20, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*171*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[29],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[226],// xerTag : drvHeatSts
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[25])),// type
//     "drvHeatSts",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, drvHeatSts), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    21, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[29],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    21, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*172*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[28],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[225],// xerTag : passHeatingSts
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[25])),// type
//     "passHeatingSts",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, passHeatingSts), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    22, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[28],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    22, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*173*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[27],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[224],// xerTag : rlHeatingSts
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[25])),// type
//     "rlHeatingSts",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, rlHeatingSts), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    23, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[27],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    23, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*174*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[26],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[223],// xerTag : rrHeatingSts
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[25])),// type
//     "rrHeatingSts",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, rrHeatingSts), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    24, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[26],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    24, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*175*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[25],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[222],// xerTag : drvVentSts
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[25])),// type
//     "drvVentSts",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, drvVentSts), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    25, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[25],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    25, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*176*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[24],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[221],// xerTag : passVentSts
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[25])),// type
//     "passVentSts",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, passVentSts), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    26, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[24],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    26, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*177*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[23],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[220],// xerTag : rrVentSts
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[25])),// type
//     "rrVentSts",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, rrVentSts), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    27, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[23],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    27, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*178*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[22],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[219],// xerTag : rlVentSts
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[25])),// type
//     "rlVentSts",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ClimateStatus, rlVentSts), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    28, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[22],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    28, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*179*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[217],// xerTag : brakePedalDepressed
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "brakePedalDepressed",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingBehaviourStatus, brakePedalDepressed), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*180*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[216],// xerTag : brakePedalDepressedValidity
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "brakePedalDepressedValidity",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingBehaviourStatus, brakePedalDepressedValidity), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*181*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[215],// xerTag : engineSpeed
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "engineSpeed",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingBehaviourStatus, engineSpeed), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*182*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[214],// xerTag : engineSpeedValidity
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "engineSpeedValidity",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingBehaviourStatus, engineSpeedValidity), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*183*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[213],// xerTag : transimissionGearPostion
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "transimissionGearPostion",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingBehaviourStatus, transimissionGearPostion), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*184*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[212],// xerTag : cruiseControlStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "cruiseControlStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DrivingBehaviourStatus, cruiseControlStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*185*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[210],// xerTag : interiorPM25
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[30])),// type
//     "interiorPM25",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PollutionStatus, interiorPM25), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*186*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[209],// xerTag : exteriorPM25
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[30])),// type
//     "exteriorPM25",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(PollutionStatus, exteriorPM25), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*187*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[207],// xerTag : key
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[7])),// type
//     "key",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(GenericVehicleSignal, key), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*188*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[206],// xerTag : collectTime
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "collectTime",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(GenericVehicleSignal, collectTime), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*189*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[205],// xerTag : value
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "value",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(GenericVehicleSignal, value), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*190*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[204],// xerTag : stringVal
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "stringVal",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(GenericVehicleSignal, stringVal), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*191*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[203],// xerTag : boolVal
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "boolVal",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(GenericVehicleSignal, boolVal), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*192*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[202],// xerTag : timestampVal
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "timestampVal",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(GenericVehicleSignal, timestampVal), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*193*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[201],// xerTag : dataVal
#endif
    asnRCast(asnPODType,asnCCast(asnPPGOctetString,&asnZPGOctetString[1])),// type
//     "dataVal",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(GenericVehicleSignal, dataVal), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*194*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[199],// xerTag : isCharging
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "isCharging",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, isCharging), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*195*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[198],// xerTag : isPluggedIn
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "isPluggedIn",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, isPluggedIn), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*196*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[197],// xerTag : stateOfCharge
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[26])),// type
//     "stateOfCharge",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, stateOfCharge), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*197*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[196],// xerTag : chargeLevel
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[26])),// type
//     "chargeLevel",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, chargeLevel), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*198*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[195],// xerTag : timeToFullyCharged
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[29])),// type
//     "timeToFullyCharged",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, timeToFullyCharged), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*199*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[194],// xerTag : statusOfChargerConnection
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[28])),// type
//     "statusOfChargerConnection",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, statusOfChargerConnection), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*200*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[193],// xerTag : chargerState
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[28])),// type
//     "chargerState",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, chargerState), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*201*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[192],// xerTag : distanceToEmptyOnBatteryOnly
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[27])),// type
//     "distanceToEmptyOnBatteryOnly",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, distanceToEmptyOnBatteryOnly), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    7, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*202*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[191],// xerTag : ems48VSOC
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[26])),// type
//     "ems48VSOC",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, ems48VSOC), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    8, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*203*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[16],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[190],// xerTag : emsHVRBSError
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "emsHVRBSError",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, emsHVRBSError), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    9, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[16],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    9, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*204*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[15],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[189],// xerTag : emsRBSModeDisplay
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[25])),// type
//     "emsRBSModeDisplay",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, emsRBSModeDisplay), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    10, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[15],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*205*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[14],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[188],// xerTag : emsOVPActive
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "emsOVPActive",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, emsOVPActive), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    11, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[14],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*206*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[13],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[187],// xerTag : ems48vPackTemp1
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[12])),// type
//     "ems48vPackTemp1",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, ems48vPackTemp1), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    12, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[13],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*207*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[12],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[186],// xerTag : ems48vPackTemp2
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[12])),// type
//     "ems48vPackTemp2",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, ems48vPackTemp2), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    13, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[12],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*208*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[9],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[185],// xerTag : emsBMSLBuildSwVersion
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[8])),// type
//     "emsBMSLBuildSwVersion",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, emsBMSLBuildSwVersion), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    14, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[9],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    10, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*209*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[17],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[184],// xerTag : emsCBRemainingLife
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[24])),// type
//     "emsCBRemainingLife",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, emsCBRemainingLife), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    15, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[17],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*210*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[21],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[183],// xerTag : chargeHvSts
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[22])),// type
//     "chargeHvSts",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, chargeHvSts), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    16, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[21],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    11, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*211*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[20],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[182],// xerTag : ptReady
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[22])),// type
//     "ptReady",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, ptReady), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    17, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[20],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    12, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*212*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[19],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[181],// xerTag : averPowerConsumption
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[23])),// type
//     "averPowerConsumption",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, averPowerConsumption), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    18, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[19],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    13, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*213*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[18],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[180],// xerTag : chargeSts
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[22])),// type
//     "chargeSts",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ElectricVehicleStatus, chargeSts), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    19, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[18],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    14, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*214*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[178],// xerTag : heatedFrontSeats
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "heatedFrontSeats",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(CarConfig, heatedFrontSeats), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*215*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[177],// xerTag : parkingClimateLevel
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "parkingClimateLevel",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(CarConfig, parkingClimateLevel), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*216*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[176],// xerTag : heatedSteeringWheel
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "heatedSteeringWheel",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(CarConfig, heatedSteeringWheel), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*217*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[174],// xerTag : automaticActivation
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "automaticActivation",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, automaticActivation), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*218*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[173],// xerTag : testCall
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "testCall",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, testCall), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*219*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[74],// xerTag : position
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[9])),// type
//     "position",// identifier
    (asnValueCreator)Position::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, position), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*220*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[172],// xerTag : vehicleType
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[21])),// type
//     "vehicleType",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, vehicleType), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*221*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[164],// xerTag : vin
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[9])),// type
//     "vin",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, vin), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*222*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[171],// xerTag : fuelType
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[33])),// type
//     "fuelType",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, fuelType), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*223*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[100],// xerTag : direction
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[13])),// type
//     "direction",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, direction), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*224*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[170],// xerTag : numberOfPassengers
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[20])),// type
//     "numberOfPassengers",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, numberOfPassengers), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*225*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[169],// xerTag : recentPositions
#endif
    asnRCast(asnPODType,asnCCast(asnPPBSequenceOf,&asnZPBSequenceOf[3])),// type
//     "recentPositions",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, recentPositions), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*226*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[16],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[101],// xerTag : speed
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "speed",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, speed), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    9, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[16],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*227*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[15],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[168],// xerTag : speedValidity
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[19])),// type
//     "speedValidity",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, speedValidity), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    10, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[15],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*228*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[14],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[167],// xerTag : signals
#endif
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[4])),// type
//     "signals",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OEMMSD, signals), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    11, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[14],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*229*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[164],// xerTag : vin
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[9])),// type
//     "vin",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, vin), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*230*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[163],// xerTag : powerSource
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[18])),// type
//     "powerSource",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, powerSource), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*231*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[162],// xerTag : backupBattery
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[20])),// type
//     "backupBattery",// identifier
    (asnValueCreator)BatteryStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, backupBattery), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*232*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[161],// xerTag : powerMode
#endif
    asnRCast(asnPODType,asnCCast(asnPPPEnumerated,&asnZPPEnumerated[5])),// type
//     "powerMode",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, powerMode), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*233*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[160],// xerTag : sleepCycleNextWakeupTime
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "sleepCycleNextWakeupTime",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, sleepCycleNextWakeupTime), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*234*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[159],// xerTag : serviceProvisoned
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "serviceProvisoned",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, serviceProvisoned), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*235*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[158],// xerTag : healthStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[17])),// type
//     "healthStatus",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, healthStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*236*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[157],// xerTag : diagnostics
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[30])),// type
//     "diagnostics",// identifier
    (asnValueCreator)ECUDiagnostic::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, diagnostics), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*237*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[156],// xerTag : networkAccessStatus
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[32])),// type
//     "networkAccessStatus",// identifier
    (asnValueCreator)NetworkAccessStatus::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, networkAccessStatus), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*238*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[16],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[155],// xerTag : serialNumber
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[4])),// type
//     "serialNumber",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, serialNumber), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    9, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[16],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    7, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*239*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[15],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[154],// xerTag : completeECUPartNumbers
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[4])),// type
//     "completeECUPartNumbers",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, completeECUPartNumbers), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    10, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[15],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    8, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*240*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[14],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[153],// xerTag : imei
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[4])),// type
//     "imei",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, imei), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    11, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[14],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    9, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*241*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[13],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[152],// xerTag : hwVersion
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[4])),// type
//     "hwVersion",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, hwVersion), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    12, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[13],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    10, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*242*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[12],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[114],// xerTag : swVersion
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[4])),// type
//     "swVersion",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, swVersion), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    13, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[12],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    11, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*243*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[9],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[151],// xerTag : mpuVersion
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[4])),// type
//     "mpuVersion",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, mpuVersion), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    14, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[9],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    12, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*244*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[17],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[150],// xerTag : mcuVersion
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[4])),// type
//     "mcuVersion",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TEMStatus, mcuVersion), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    15, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[17],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    13, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*245*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[145],// xerTag : ecuID
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[7])),// type
//     "ecuID",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ECUDiagnostic, ecuID), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*246*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[144],// xerTag : diagnosticResult
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[17])),// type
//     "diagnosticResult",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ECUDiagnostic, diagnosticResult), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*247*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[143],// xerTag : dtcs
#endif
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[5])),// type
//     "dtcs",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ECUDiagnostic, dtcs), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*248*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[142],// xerTag : exceptionCode
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "exceptionCode",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ECUDiagnostic, exceptionCode), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*249*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[140],// xerTag : dtc
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[7])),// type
//     "dtc",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DiagnosticTroubleCode, dtc), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*250*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[139],// xerTag : status
#endif
    asnRCast(asnPODType,asnCCast(asnPPHBitString,&asnZPHBitString[0])),// type
//     "status",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DiagnosticTroubleCode, status), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnNamedBitString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*251*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[138],// xerTag : failureCount
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[12])),// type
//     "failureCount",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DiagnosticTroubleCode, failureCount), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*252*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[137],// xerTag : lastFail
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "lastFail",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DiagnosticTroubleCode, lastFail), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*253*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[136],// xerTag : firtFail
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "firtFail",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DiagnosticTroubleCode, firtFail), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*254*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[135],// xerTag : firstFailureOdometer
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "firstFailureOdometer",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DiagnosticTroubleCode, firstFailureOdometer), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*255*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[134],// xerTag : firstFailureBatteryVoltage
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "firstFailureBatteryVoltage",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DiagnosticTroubleCode, firstFailureBatteryVoltage), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*256*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[133],// xerTag : firstFailureVehicleSpeed
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "firstFailureVehicleSpeed",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DiagnosticTroubleCode, firstFailureVehicleSpeed), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*257*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[131],// xerTag : simInfo
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[33])),// type
//     "simInfo",// identifier
    (asnValueCreator)SIMInfo::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NetworkAccessStatus, simInfo), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*258*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[130],// xerTag : mobileNetwork
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[5])),// type
//     "mobileNetwork",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NetworkAccessStatus, mobileNetwork), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*259*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[128],// xerTag : msisdn
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[6])),// type
//     "msisdn",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(SIMInfo, msisdn), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*260*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[127],// xerTag : imsi
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[6])),// type
//     "imsi",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(SIMInfo, imsi), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*261*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[126],// xerTag : iccId
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[6])),// type
//     "iccId",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(SIMInfo, iccId), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*262*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[119],// xerTag : time
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "time",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TheftNotification, time), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*263*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[122],// xerTag : activated
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "activated",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TheftNotification, activated), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*264*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[120],// xerTag : reason
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[16])),// type
//     "reason",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Notification, reason), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*265*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[119],// xerTag : time
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "time",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Notification, time), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*266*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[118],// xerTag : parameters
#endif
    asnRCast(asnPODType,asnCCast(asnPPBSequenceOf,&asnZPBSequenceOf[4])),// type
//     "parameters",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Notification, parameters), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*267*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[115],// xerTag : swModel
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[4])),// type
//     "swModel",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OTA, swModel), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*268*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[114],// xerTag : swVersion
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[4])),// type
//     "swVersion",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OTA, swVersion), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*269*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[113],// xerTag : downloadUrl
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "downloadUrl",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OTA, downloadUrl), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*270*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[112],// xerTag : verificationCode
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[4])),// type
//     "verificationCode",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(OTA, verificationCode), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*271*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[110],// xerTag : tripId
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "tripId",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, tripId), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*272*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[24],// xerTag : startTime
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "startTime",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, startTime), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*273*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[90],// xerTag : startOdometer
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "startOdometer",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, startOdometer), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*274*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[109],// xerTag : fuelConsumption
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "fuelConsumption",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, fuelConsumption), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*275*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[108],// xerTag : traveledDistance
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "traveledDistance",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, traveledDistance), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*276*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[107],// xerTag : trackpoints
#endif
    asnRCast(asnPODType,asnCCast(asnPPBSequenceOf,&asnZPBSequenceOf[5])),// type
//     "trackpoints",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, trackpoints), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*277*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[106],// xerTag : waypoints
#endif
    asnRCast(asnPODType,asnCCast(asnPPBSequenceOf,&asnZPBSequenceOf[6])),// type
//     "waypoints",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, waypoints), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*278*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[105],// xerTag : avgSpeed
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "avgSpeed",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, avgSpeed), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*279*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[23],// xerTag : endTime
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "endTime",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, endTime), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*280*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[16],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[85],// xerTag : endOdometer
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "endOdometer",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, endOdometer), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    9, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[16],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*281*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[15],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[104],// xerTag : electricConsumption
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "electricConsumption",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, electricConsumption), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    10, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[15],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*282*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[14],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[103],// xerTag : electricRegeneration
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "electricRegeneration",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(Trip, electricRegeneration), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    11, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[14],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*283*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[102],// xerTag : systemTime
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "systemTime",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TrackPoint, systemTime), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*284*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[74],// xerTag : position
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[9])),// type
//     "position",// identifier
    (asnValueCreator)Position::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TrackPoint, position), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*285*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[101],// xerTag : speed
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "speed",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TrackPoint, speed), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*286*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[100],// xerTag : direction
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[13])),// type
//     "direction",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TrackPoint, direction), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*287*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[99],// xerTag : isSVT
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "isSVT",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TrackPoint, isSVT), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*288*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[98],// xerTag : odometer
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "odometer",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TrackPoint, odometer), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*289*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[97],// xerTag : travelDistanceSinceLastWaypoint
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "travelDistanceSinceLastWaypoint",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TrackPoint, travelDistanceSinceLastWaypoint), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*290*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[96],// xerTag : fuelConsumptionSinceLastWaypoint
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "fuelConsumptionSinceLastWaypoint",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TrackPoint, fuelConsumptionSinceLastWaypoint), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*291*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[95],// xerTag : electricConsumptionSinceLastSample
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "electricConsumptionSinceLastSample",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TrackPoint, electricConsumptionSinceLastSample), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*292*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[16],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[94],// xerTag : electricRegenerationSinceLastSample
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "electricRegenerationSinceLastSample",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TrackPoint, electricRegenerationSinceLastSample), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    9, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[16],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*293*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[24],// xerTag : startTime
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "startTime",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, startTime), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*294*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[91],// xerTag : startPosition
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[9])),// type
//     "startPosition",// identifier
    (asnValueCreator)Position::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, startPosition), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*295*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[90],// xerTag : startOdometer
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "startOdometer",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, startOdometer), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*296*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[89],// xerTag : startFuelLevel
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "startFuelLevel",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, startFuelLevel), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*297*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[88],// xerTag : startElectricConsumption
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "startElectricConsumption",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, startElectricConsumption), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*298*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[87],// xerTag : startElectricRegeneration
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "startElectricRegeneration",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, startElectricRegeneration), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*299*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[23],// xerTag : endTime
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "endTime",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, endTime), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    5, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*300*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[86],// xerTag : endPosition
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[9])),// type
//     "endPosition",// identifier
    (asnValueCreator)Position::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, endPosition), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    6, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*301*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[85],// xerTag : endOdometer
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "endOdometer",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, endOdometer), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    7, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*302*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[16],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[84],// xerTag : endFuelLevel
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "endFuelLevel",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, endFuelLevel), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    9, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[16],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    8, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*303*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[15],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[83],// xerTag : endElectricConsumption
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "endElectricConsumption",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, endElectricConsumption), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    10, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[15],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    9, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*304*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[14],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[82],// xerTag : endElectricRegeneration
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "endElectricRegeneration",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(TripFragment, endElectricRegeneration), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    11, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[14],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    10, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*305*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[79],// xerTag : vehicleVin
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[3])),// type
//     "vehicleVin",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVServiceData, vehicleVin), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*306*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[78],// xerTag : testVehicle
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[1])),// type
//     "testVehicle",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVServiceData, testVehicle), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*307*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[77],// xerTag : rvdcTriggerCondition
#endif
    asnRCast(asnPODType,asnCCast(asnPPPEnumerated,&asnZPPEnumerated[4])),// type
//     "rvdcTriggerCondition",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVServiceData, rvdcTriggerCondition), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*308*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[76],// xerTag : mdpID
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[15])),// type
//     "mdpID",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVServiceData, mdpID), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXUINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*309*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[75],// xerTag : maID
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[2])),// type
//     "maID",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVServiceData, maID), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*310*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[74],// xerTag : position
#endif
    asnRCast(asnPODType,asnCCast(asnPPRChoice,&asnZPRChoice[1])),// type
//     "position",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVServiceData, position), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(NEVDRVehiclePosition__C), // ApiValueSize
#ifdef asnCodFBER
    2, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*311*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[73],// xerTag : ecuData
#endif
    asnRCast(asnPODType,asnCCast(asnPPRChoice,&asnZPRChoice[2])),// type
//     "ecuData",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVServiceData, ecuData), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(EcuData__C), // ApiValueSize
#ifdef asnCodFBER
    2, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*312*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[63],// xerTag : longLat
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[42])),// type
//     "longLat",// identifier
    (asnValueCreator)NEVCoordinatesLongLat::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDRPositionData, longLat), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*313*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[62],// xerTag : heading
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[13])),// type
//     "heading",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDRPositionData, heading), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*314*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[61],// xerTag : speedKmph
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[12])),// type
//     "speedKmph",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDRPositionData, speedKmph), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*315*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[60],// xerTag : hdopX10
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[12])),// type
//     "hdopX10",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDRPositionData, hdopX10), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*316*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[59],// xerTag : numSat
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[11])),// type
//     "numSat",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDRPositionData, numSat), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*317*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[58],// xerTag : fixTime
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[43])),// type
//     "fixTime",// identifier
    (asnValueCreator)NEVDateTime::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDRPositionData, fixTime), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*318*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[57],// xerTag : fixType
#endif
    asnRCast(asnPODType,asnCCast(asnPPPEnumerated,&asnZPPEnumerated[3])),// type
//     "fixType",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDRPositionData, fixType), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*319*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[11],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[56],// xerTag : drType
#endif
    asnRCast(asnPODType,asnCCast(asnPPPEnumerated,&asnZPPEnumerated[2])),// type
//     "drType",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDRPositionData, drType), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    7, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[11],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*320*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[10],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[55],// xerTag : drDistance
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[5])),// type
//     "drDistance",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDRPositionData, drDistance), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    8, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[10],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*321*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[53],// xerTag : longitude
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[14])),// type
//     "longitude",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVCoordinatesLongLat, longitude), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*322*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[52],// xerTag : latitude
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[14])),// type
//     "latitude",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVCoordinatesLongLat, latitude), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*323*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[50],// xerTag : year
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[10])),// type
//     "year",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDateTime, year), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*324*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[49],// xerTag : month
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[9])),// type
//     "month",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDateTime, month), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*325*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[48],// xerTag : day
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[8])),// type
//     "day",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDateTime, day), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*326*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[47],// xerTag : hour
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[7])),// type
//     "hour",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDateTime, hour), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*327*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[46],// xerTag : minute
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[6])),// type
//     "minute",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDateTime, minute), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*328*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[45],// xerTag : second
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[6])),// type
//     "second",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(NEVDateTime, second), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*329*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[6],// xerTag : ecu
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[5])),// type
//     "ecu",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ECUData, ecu), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*330*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[33],// xerTag : diagnosticNumber
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[1])),// type
//     "diagnosticNumber",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ECUData, diagnosticNumber), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*331*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[32],// xerTag : didData
#endif
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[8])),// type
//     "didData",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ECUData, didData), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*332*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[31],// xerTag : dtcData
#endif
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[9])),// type
//     "dtcData",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(ECUData, dtcData), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*333*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[28],// xerTag : id
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[5])),// type
//     "id",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DIDData, id), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*334*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[27],// xerTag : data
#endif
    asnRCast(asnPODType,asnCCast(asnPPGOctetString,&asnZPGOctetString[0])),// type
//     "data",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DIDData, data), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*335*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[28],// xerTag : id
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[4])),// type
//     "id",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DTCData, id), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*336*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[27],// xerTag : data
#endif
    asnRCast(asnPODType,asnCCast(asnPPGOctetString,&asnZPGOctetString[0])),// type
//     "data",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(DTCData, data), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*337*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[25],// xerTag : ruleId
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "ruleId",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(EventRule, ruleId), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*338*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[24],// xerTag : startTime
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "startTime",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(EventRule, startTime), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*339*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[23],// xerTag : endTime
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "endTime",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(EventRule, endTime), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*340*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[22],// xerTag : conditions
#endif
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[10])),// type
//     "conditions",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(EventRule, conditions), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*341*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[21],// xerTag : interval
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "interval",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(EventRule, interval), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*342*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[20],// xerTag : action
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[49])),// type
//     "action",// identifier
    (asnValueCreator)EventAction::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(EventRule, action), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*343*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[18],// xerTag : condition
#endif
    asnRCast(asnPODType,asnCCast(asnPPFKnownMultiplierCharacterString,&asnZPFKnownMultiplierCharacterString[0])),// type
//     "condition",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RuleCondition, condition), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*344*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[16],// xerTag : triggerTimes
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "triggerTimes",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(EventAction, triggerTimes), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*345*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[15],// xerTag : notifyInterval
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[3])),// type
//     "notifyInterval",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(EventAction, notifyInterval), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*346*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[13],// xerTag : requestid
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[1])),// type
//     "requestid",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RequestHeader, requestid), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*347*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[12],// xerTag : timeStamp
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "timeStamp",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RequestHeader, timeStamp), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*348*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[8],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[11],// xerTag : eventId
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[3])),// type
//     "eventId",// identifier
    (asnValueCreator)TimeStamp::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RequestHeader, eventId), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    2, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[8],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*349*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[7],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[10],// xerTag : creatorId
#endif
    asnRCast(asnPODType,asnCCast(asnPPPEnumerated,&asnZPPEnumerated[1])),// type
//     "creatorId",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RequestHeader, creatorId), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    3, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[7],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    1, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*350*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[6],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[9],// xerTag : messageTTL
#endif
    asnRCast(asnPODType,asnCCast(asnPPNInteger,&asnZPNInteger[0])),// type
//     "messageTTL",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RequestHeader, messageTTL), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    4, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[6],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    2, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*351*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[2],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[8],// xerTag : requestType
#endif
    asnRCast(asnPODType,asnCCast(asnPPPEnumerated,&asnZPPEnumerated[0])),// type
//     "requestType",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RequestHeader, requestType), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnMAXSINT), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    5, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[2],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    3, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*352*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[0],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[7],// xerTag : ackRequired
#endif
    asnRCast(asnPODType,asnCCast(asnPOIBoolean,&asnZOIBoolean[0])),// type
//     "ackRequired",// identifier
    (asnValueCreator)0, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(RequestHeader, ackRequired), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnBOOL), // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    6, // fieldNumber
    asnFALSE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[0],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    4, // PEROptionalityNumber
    asnFALSE // isMandatory
    },
  /*353*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[1],// xerTag : header
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[50])),// type
//     "header",// identifier
    (asnValueCreator)RequestHeader::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(VDServiceRequest, header), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[5],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnTRUE // isMandatory
    },
  /*354*/ {
    asnRCast(asnOBJECTTp,&asnGONSetSeqNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[0],// xerTag : body
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[0])),// type
//     "body",// identifier
    (asnValueCreator)RequestBody::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(VDServiceRequest, body), // apiValueOffset
#else
    0, // apiValueOffset
#endif
   0, // ApiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnTRUE,// apiIndValue
    (asnPSEValue)0,// defaultValue
#ifdef asnCodFBER
    &asnZOGTag[4],// allowedTag
#endif
    -1, // atNotationId
#ifdef asnCodFBER
    1, // allowedTagCount
#endif
    0, // PEROptionalityNumber
    asnFALSE // isMandatory
    }
};
asnTOBMINUINT asnZOBMINUINT[]=
{
  /*0*/0,
  /*1*/1
};
asnTPRChoice asnZPRChoice[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGPRChoice),
//     (asnPQUReference)0,// constraint
//     "GeneralMessage",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZPSChoiceNamedType[0],// root
    (asnSPSChoiceNamedType*)0,// extensions
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[0],// perNumber
#endif
#ifdef asnCodFBER
    &asnZOXTagMap[0],// tagMap
#endif
#ifdef asnCodDXER
    &asnZNDXerTagMap[4],// xerTagMap
#endif
    &asnZOBMINUINT[0],// canonical
    (asnValueCreator)GeneralMessage__C::__create, // apiValueCreator
    2, // rootCount
    0, // extensionsCount
#ifdef asnCodFBER
    2, // tagMapCount
#endif
#ifdef asnCodDXER
    2, // xerTagMapCount
#endif
    2, // canonicalCount
    asnFALSE // isExtensible
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGPRChoice),
//     (asnPQUReference)0,// constraint
//     "NEVDRVehiclePosition",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZPSChoiceNamedType[2],// root
    (asnSPSChoiceNamedType*)0,// extensions
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[0],// perNumber
#endif
#ifdef asnCodFBER
    &asnZOXTagMap[0],// tagMap
#endif
#ifdef asnCodDXER
    &asnZNDXerTagMap[2],// xerTagMap
#endif
    &asnZOBMINUINT[0],// canonical
    (asnValueCreator)NEVDRVehiclePosition__C::__create, // apiValueCreator
    2, // rootCount
    0, // extensionsCount
#ifdef asnCodFBER
    2, // tagMapCount
#endif
#ifdef asnCodDXER
    2, // xerTagMapCount
#endif
    2, // canonicalCount
    asnFALSE // isExtensible
    },
  /*2*/ {
    asnRCast(asnOBJECTTp,&asnGPRChoice),
//     (asnPQUReference)0,// constraint
//     "EcuData",// typeReference
//     0, // constraintCount
    asnFALSE,// isConstraintExtensible
    &asnZPSChoiceNamedType[4],// root
    (asnSPSChoiceNamedType*)0,// extensions
#ifdef asnCodCPER
    &asnZPTPerEffectiveNumberConstraint[0],// perNumber
#endif
#ifdef asnCodFBER
    &asnZOXTagMap[0],// tagMap
#endif
#ifdef asnCodDXER
    &asnZNDXerTagMap[0],// xerTagMap
#endif
    &asnZOBMINUINT[0],// canonical
    (asnValueCreator)EcuData__C::__create, // apiValueCreator
    2, // rootCount
    0, // extensionsCount
#ifdef asnCodFBER
    2, // tagMapCount
#endif
#ifdef asnCodDXER
    2, // xerTagMapCount
#endif
    2, // canonicalCount
    asnFALSE // isExtensible
    }
};
asnTPSChoiceNamedType asnZPSChoiceNamedType[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGPSChoiceNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[367],// xerTag : message
#endif
    asnRCast(asnPODType,asnCCast(asnPPENonKnownMultiplierCharacterString,&asnZPENonKnownMultiplierCharacterString[0])),// type
//     "message",// identifier
    (asnValueCreator)asncGeneralMessage__message::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncGeneralMessage__message, message), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // apiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnValueCreator)0, // recSeqValueCreator
#ifdef asnCodFPER
    0, // PERChoiceNumber
#endif
    asnFALSE //isInline
    },
  /*1*/ {
    asnRCast(asnOBJECTTp,&asnGPSChoiceNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[366],// xerTag : ocetMessage
#endif
    asnRCast(asnPODType,asnCCast(asnPPGOctetString,&asnZPGOctetString[1])),// type
//     "ocetMessage",// identifier
    (asnValueCreator)asncocetMessage::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncocetMessage, ocetMessage), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnOctetString), // apiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnValueCreator)0, // recSeqValueCreator
#ifdef asnCodFPER
    1, // PERChoiceNumber
#endif
    asnFALSE //isInline
    },
  /*2*/ {
    asnRCast(asnOBJECTTp,&asnGPSChoiceNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[66],// xerTag : noValidData
#endif
    asnRCast(asnPODType,asnCCast(asnPOHNull,&asnZOHNull[0])),// type
//     "noValidData",// identifier
    (asnValueCreator)asncnoValidData::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncnoValidData, noValidData), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnbyte), // apiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnValueCreator)0, // recSeqValueCreator
#ifdef asnCodFPER
    0, // PERChoiceNumber
#endif
    asnFALSE //isInline
    },
  /*3*/ {
    asnRCast(asnOBJECTTp,&asnGPSChoiceNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[65],// xerTag : drPosition
#endif
    asnRCast(asnPODType,asnCCast(asnPOLSequence,&asnZOLSequence[41])),// type
//     "drPosition",// identifier
    (asnValueCreator)asncdrPosition::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncdrPosition, longLat) - asnOFFSETOF(NEVDRPositionData, longLat), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asncdrPosition), // apiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnValueCreator)0, // recSeqValueCreator
#ifdef asnCodFPER
    1, // PERChoiceNumber
#endif
    asnTRUE //isInline
    },
  /*4*/ {
    asnRCast(asnOBJECTTp,&asnGPSChoiceNamedType),
#ifdef asnCodFBER
    &asnZOGTag[5],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[35],// xerTag : noDiagData
#endif
    asnRCast(asnPODType,asnCCast(asnPOHNull,&asnZOHNull[0])),// type
//     "noDiagData",// identifier
    (asnValueCreator)asncnoDiagData::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncnoDiagData, noDiagData), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnbyte), // apiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    0, // fieldNumber
    asnFALSE,// apiIndValue
    (asnValueCreator)0, // recSeqValueCreator
#ifdef asnCodFPER
    0, // PERChoiceNumber
#endif
    asnFALSE //isInline
    },
  /*5*/ {
    asnRCast(asnOBJECTTp,&asnGPSChoiceNamedType),
#ifdef asnCodFBER
    &asnZOGTag[4],// tag
#endif
#ifdef asnCodXTAG
    &asnZNEXerTag[27],// xerTag : data
#endif
    asnRCast(asnPODType,asnCCast(asnPPCSetOf,&asnZPCSetOf[7])),// type
//     "data",// identifier
    (asnValueCreator)asncEcuData__data::__create, // apiValueCreator
#ifdef asnNonPodOffsetof
    asnOFFSETOF(asncEcuData__data, data), // apiValueOffset
#else
    0, // apiValueOffset
#endif
    asnSizeof(asnList), // apiValueSize
#ifdef asnCodFBER
    1, // tagCount
#endif
    1, // fieldNumber
    asnFALSE,// apiIndValue
    (asnValueCreator)0, // recSeqValueCreator
#ifdef asnCodFPER
    1, // PERChoiceNumber
#endif
    asnFALSE //isInline
    }
};
asnTNAAbstractSyntax asnZNAAbstractSyntax[]=
{
  /*0*/ {
    asnRCast(asnOBJECTTp,&asnGNAAbstractSyntax),
    270550417, // lp
#ifdef asnCodDXER
    &asnZNCXerTagTypeAssMap[0],// xerTagMap
#endif
#ifdef asnCodFBER
    &asnZNBTagTypeAssMap[0],// tagMap
#endif
#ifdef asnCodDXER
    1, // xerTagMapCount
#endif
#ifdef asnCodFBER
    1, // tagMapCount
#endif
    asnXerTrace,// trace
    asnChkcst,// checkConstraint
    asnFALSE,// codegenTech
    asnTRUE,// isBERAvailable
    asnTRUE,// isPERAvailable
#ifndef asnNonPodOffsetof
    asnFALSE,// isOffsetCalculated
    (asnTableInitiator)asnMNAAbstractSyntaxInit,// tableInitiator
#endif
    asnTRUE// isXERAvailable
    }
};
asnTOGTag asnZOGTag[]=
{
  /*0*/ {1, &asnZOFByte[0]}/*C6*/,
  /*1*/ {0, (asnbytep)0}/*X*/,
  /*2*/ {1, &asnZOFByte[1]}/*C5*/,
  /*3*/ {0, (asnbytep)0}/*X*/,
  /*4*/ {1, &asnZOFByte[2]}/*C1*/,
  /*5*/ {1, &asnZOFByte[3]}/*C0*/,
  /*6*/ {1, &asnZOFByte[4]}/*C4*/,
  /*7*/ {1, &asnZOFByte[5]}/*C3*/,
  /*8*/ {1, &asnZOFByte[6]}/*C2*/,
  /*9*/ {1, &asnZOFByte[7]}/*C14*/,
  /*10*/ {1, &asnZOFByte[8]}/*C8*/,
  /*11*/ {1, &asnZOFByte[9]}/*C7*/,
  /*12*/ {1, &asnZOFByte[10]}/*C13*/,
  /*13*/ {1, &asnZOFByte[11]}/*C12*/,
  /*14*/ {1, &asnZOFByte[12]}/*C11*/,
  /*15*/ {1, &asnZOFByte[13]}/*C10*/,
  /*16*/ {1, &asnZOFByte[14]}/*C9*/,
  /*17*/ {1, &asnZOFByte[15]}/*C15*/,
  /*18*/ {1, &asnZOFByte[16]}/*C19*/,
  /*19*/ {1, &asnZOFByte[17]}/*C18*/,
  /*20*/ {1, &asnZOFByte[18]}/*C17*/,
  /*21*/ {1, &asnZOFByte[19]}/*C16*/,
  /*22*/ {1, &asnZOFByte[20]}/*C28*/,
  /*23*/ {1, &asnZOFByte[21]}/*C27*/,
  /*24*/ {1, &asnZOFByte[22]}/*C26*/,
  /*25*/ {1, &asnZOFByte[23]}/*C25*/,
  /*26*/ {1, &asnZOFByte[24]}/*C24*/,
  /*27*/ {1, &asnZOFByte[25]}/*C23*/,
  /*28*/ {1, &asnZOFByte[26]}/*C22*/,
  /*29*/ {1, &asnZOFByte[27]}/*C21*/,
  /*30*/ {1, &asnZOFByte[28]}/*C20*/,
  /*31*/ {1, &asnZOFByte[29]}/*U16*/,
  /*32*/ {1, &asnZOFByte[30]}/*U17*/
};
asnTOXTagMap asnZOXTagMap[]=
{
  /*0*/ {{1, &asnZOFByte[3]}, 0},
  /*1*/ {{1, &asnZOFByte[2]}, 1}
};
// increase the value of the asnCOG00_LENTAG constant if necessary !
asnbyte asnZOZTagLengthCheck[asnCOG00_LENTAG-1];
asnTNBTagTypeAssMap asnZNBTagTypeAssMap[]=
{
  /*0*/ {
    asnCCast(asnPOCTypeAssignment,&asnZOCTypeAssignment[56]),// typeAssignment
    {1, &asnZOFByte[29]}
    }
};

#ifdef asnCodCPER
asnTPJPerEffectiveKnownMultiplierCharacterStringConstraint asnZPJPerEffectiveKnownMultiplierCharacterStringConstraint[]=
{
  /*0*/ {
    &asnZPKPerAlphabetInterval[0],// interval
    7, // intervalCount
#ifdef asnCodPER
    8, // numberOfBitsPER
#endif
#ifdef asnCodUPER
    7, // numberOfBitsUPER
#endif
#ifdef asnCodPER
    false, // isPackedPER
#endif
#ifdef asnCodUPER
    false // isPackedUPER
#endif
    }
};
#endif

#ifdef asnCodCPER
asnTPKPerAlphabetInterval asnZPKPerAlphabetInterval[]=
{
  /*0*/ {
    32U, // vlb
    32U, // vub
    0U // offset
    },
  /*1*/ {
    39U, // vlb
    41U, // vub
    1U // offset
    },
  /*2*/ {
    43U, // vlb
    58U, // vub
    4U // offset
    },
  /*3*/ {
    61U, // vlb
    61U, // vub
    20U // offset
    },
  /*4*/ {
    63U, // vlb
    63U, // vub
    21U // offset
    },
  /*5*/ {
    65U, // vlb
    90U, // vub
    22U // offset
    },
  /*6*/ {
    97U, // vlb
    122U, // vub
    48U // offset
    }
};
#endif

#ifdef asnCodCPER
asnTPTPerEffectiveNumberConstraint asnZPTPerEffectiveNumberConstraint[]=
{
  /*0*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 1}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 1}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)1U), // ub
    asnFALSE // isExtensible
    },
  /*1*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {6, 2}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 17}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)86400U), // ub
    asnFALSE // isExtensible
    },
  /*2*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {4, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 8}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)255U), // ub
    asnFALSE // isExtensible
    },
  /*3*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {0, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {0, 0}, // codingUPER
#endif
    (asnMAXSLONG)(asnCLMSINT_LIMIT), /* lb */
    (asnMAXSLONG)(asnCHMSINT_LIMIT), /* ub */
    asnFALSE // isExtensible
    },
  /*4*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {6, 2}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 24}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)16777215U), // ub
    asnFALSE // isExtensible
    },
  /*5*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {5, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 16}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)65535U), // ub
    asnFALSE // isExtensible
    },
  /*6*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 2}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 2}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)2U), // ub
    asnFALSE // isExtensible
    },
  /*7*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 3}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 3}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)4U), // ub
    asnFALSE // isExtensible
    },
  /*8*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 6}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 6}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)59U), // ub
    asnFALSE // isExtensible
    },
  /*9*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 5}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 5}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)23U), // ub
    asnFALSE // isExtensible
    },
  /*10*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 5}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 5}, // codingUPER
#endif
    ((asnMAXSLONG)1U), // lb
    ((asnMAXSLONG)31U), // ub
    asnFALSE // isExtensible
    },
  /*11*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 4}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 4}, // codingUPER
#endif
    ((asnMAXSLONG)1U), // lb
    ((asnMAXSLONG)12U), // ub
    asnFALSE // isExtensible
    },
  /*12*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 7}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 7}, // codingUPER
#endif
    ((asnMAXSLONG)2000U), // lb
    ((asnMAXSLONG)2127U), // ub
    asnFALSE // isExtensible
    },
  /*13*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 7}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 7}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)127U), // ub
    asnFALSE // isExtensible
    },
  /*14*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {5, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 9}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)360U), // ub
    asnFALSE // isExtensible
    },
  /*15*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {6, 2}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 32}, // codingUPER
#endif
    (-2147483647-1), // lb
    ((asnMAXSLONG)2147483647U), // ub
    asnFALSE // isExtensible
    },
  /*16*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {6, 2}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 32}, // codingUPER
#endif
    (asnMAXSLONG)(((asnMAXULONG)0U)), // lb
    (asnMAXSLONG)(((asnMAXULONG)4294967295U)), // ub
    asnFALSE // isExtensible
    },
  /*17*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 2}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 2}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)3U), // ub
    asnFALSE // isExtensible
    },
  /*18*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 7}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 7}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)64U), // ub
    asnFALSE // isExtensible
    },
  /*19*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {5, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 13}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)5000U), // ub
    asnFALSE // isExtensible
    },
  /*20*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 7}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 7}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)100U), // ub
    asnFALSE // isExtensible
    },
  /*21*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 3}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 3}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)7U), // ub
    asnFALSE // isExtensible
    },
  /*22*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {5, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 10}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)1000U), // ub
    asnFALSE // isExtensible
    },
  /*23*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {5, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 10}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)1023U), // ub
    asnFALSE // isExtensible
    },
  /*24*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 4}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 4}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)10U), // ub
    asnFALSE // isExtensible
    },
  /*25*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {5, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 11}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)2047U), // ub
    asnFALSE // isExtensible
    },
  /*26*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {5, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 12}, // codingUPER
#endif
    -((asnMAXSLONG)1U), // lb
    ((asnMAXSLONG)2048U), // ub
    asnFALSE // isExtensible
    },
  /*27*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 4}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 4}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)15U), // ub
    asnFALSE // isExtensible
    },
  /*28*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {5, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 11}, // codingUPER
#endif
    -((asnMAXSLONG)150U), // lb
    ((asnMAXSLONG)1890U), // ub
    asnFALSE // isExtensible
    },
  /*29*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {5, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 13}, // codingUPER
#endif
    -((asnMAXSLONG)100U), // lb
    ((asnMAXSLONG)8091U), // ub
    asnFALSE // isExtensible
    },
  /*30*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {3, 6}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 6}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)40U), // ub
    asnFALSE // isExtensible
    },
  /*31*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {5, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 16}, // codingUPER
#endif
    -((asnMAXSLONG)1U), // lb
    ((asnMAXSLONG)65534U), // ub
    asnFALSE // isExtensible
    },
  /*32*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {6, 2}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 22}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)3153600U), // ub
    asnFALSE // isExtensible
    },
  /*33*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {5, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 10}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)999U), // ub
    asnFALSE // isExtensible
    },
  /*34*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {6, 2}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 31}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)2147483647U), // ub
    asnFALSE // isExtensible
    },
  /*35*/ {
    (asnPPWPerSignedNumberInterval)0, // root
    (asnPPWPerSignedNumberInterval)0, // extension
    0, // rootCount
    0, // extensionCount
#ifdef asnCodPER
    {5, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 15}, // codingUPER
#endif
    ((asnMAXSLONG)0U), // lb
    ((asnMAXSLONG)17575U), // ub
    asnFALSE // isExtensible
    }
};
#endif

#ifdef asnCodFPER
asnTORPerSetSeqCoding asnZORPerSetSeqCoding[]=
{
  /*0*/ {1, 1, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*1*/ {2, 5, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*2*/ {0, 2, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*3*/ {1, 0, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*4*/ {1, 5, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*5*/ {2, 0, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*6*/ {4, 0, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*7*/ {6, 0, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*8*/ {9, 0, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*9*/ {7, 0, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*10*/ {1, 11, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*11*/ {3, 7, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*12*/ {6, 6, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*13*/ {1, 3, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*14*/ {2, 1, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*15*/ {0, 3, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*16*/ {2, 6, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*17*/ {2, 2, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*18*/ {2, 14, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*19*/ {5, 7, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*20*/ {5, 15, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*21*/ {1, 6, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*22*/ {0, 6, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*23*/ {0, 29, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*24*/ {0, 14, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*25*/ {0, 4, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*26*/ {0, 17, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*27*/ {0, 21, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*28*/ {0, 12, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*29*/ {2, 7, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*30*/ {0, 7, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*31*/ {1, 2, 0, 0,
    (asnPOBMINUINT)0/* defaultList */},
  /*32*/ {0, 15, 0, 0,
    (asnPOBMINUINT)0/* defaultList */}
};
#endif

#ifdef asnCodCPER
asnTPLPerEffectiveLengthConstraint asnZPLPerEffectiveLengthConstraint[]=
{
  /*0*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {0, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {0, 0}, // codingUPER
#endif
    ((asnMAXUINT)0U), // lb
    asnCHMUINT_LIMIT, // ub
    asnFALSE // isExtensible
    },
  /*1*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {7, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {5, 10}, // codingUPER
#endif
    ((asnMAXUINT)1U), // lb
    ((asnMAXUINT)1000U), // ub
    asnFALSE // isExtensible
    },
  /*2*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {4, 7}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 7}, // codingUPER
#endif
    ((asnMAXUINT)0U), // lb
    ((asnMAXUINT)100U), // ub
    asnFALSE // isExtensible
    },
  /*3*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {5, 5}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 5}, // codingUPER
#endif
    ((asnMAXUINT)1U), // lb
    ((asnMAXUINT)20U), // ub
    asnFALSE // isExtensible
    },
  /*4*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {5, 5}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 5}, // codingUPER
#endif
    ((asnMAXUINT)0U), // lb
    ((asnMAXUINT)20U), // ub
    asnFALSE // isExtensible
    },
  /*5*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {3, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {3, 0}, // codingUPER
#endif
    ((asnMAXUINT)17U), // lb
    ((asnMAXUINT)17U), // ub
    asnFALSE // isExtensible
    },
  /*6*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {5, 7}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 7}, // codingUPER
#endif
    ((asnMAXUINT)0U), // lb
    ((asnMAXUINT)127U), // ub
    asnFALSE // isExtensible
    },
  /*7*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {5, 5}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 5}, // codingUPER
#endif
    ((asnMAXUINT)1U), // lb
    ((asnMAXUINT)32U), // ub
    asnFALSE // isExtensible
    },
  /*8*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {5, 7}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 7}, // codingUPER
#endif
    ((asnMAXUINT)1U), // lb
    ((asnMAXUINT)100U), // ub
    asnFALSE // isExtensible
    },
  /*9*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {6, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {5, 16}, // codingUPER
#endif
    ((asnMAXUINT)1U), // lb
    ((asnMAXUINT)65535U), // ub
    asnFALSE // isExtensible
    },
  /*10*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {5, 8}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 8}, // codingUPER
#endif
    ((asnMAXUINT)1U), // lb
    ((asnMAXUINT)255U), // ub
    asnFALSE // isExtensible
    },
  /*11*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {2, 4}, // codingPER
#endif
#ifdef asnCodUPER
    {2, 4}, // codingUPER
#endif
    ((asnMAXUINT)0U), // lb
    ((asnMAXUINT)15U), // ub
    asnFALSE // isExtensible
    },
  /*12*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {5, 5}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 5}, // codingUPER
#endif
    ((asnMAXUINT)0U), // lb
    ((asnMAXUINT)27U), // ub
    asnFALSE // isExtensible
    },
  /*13*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {6, 0}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 8}, // codingUPER
#endif
    ((asnMAXUINT)0U), // lb
    ((asnMAXUINT)255U), // ub
    asnFALSE // isExtensible
    },
  /*14*/ {
    (asnPPMPerNumberInterval)0, // root
    (asnPPMPerNumberInterval)0, // extension
    0U, // rootCount
    0U, // extensionCount
#ifdef asnCodPER
    {5, 8}, // codingPER
#endif
#ifdef asnCodUPER
    {4, 8}, // codingUPER
#endif
    ((asnMAXUINT)0U), // lb
    ((asnMAXUINT)250U), // ub
    asnFALSE // isExtensible
    }
};
#endif

#ifdef asnCodXTAG
asnTNEXerTag asnZNEXerTag[]=
{
  /*0*/ {4, &asnZOFByte[31]}/*body*/,
  /*1*/ {6, &asnZOFByte[35]}/*header*/,
  /*2*/ {16, &asnZOFByte[41]}/*VDServiceRequest*/,
  /*3*/ {3, &asnZOFByte[57]}/*ack*/,
  /*4*/ {14, &asnZOFByte[60]}/*serviceRequest*/,
  /*5*/ {3, &asnZOFByte[74]}/*cvc*/,
  /*6*/ {3, &asnZOFByte[77]}/*ecu*/,
  /*7*/ {11, &asnZOFByte[80]}/*ackRequired*/,
  /*8*/ {11, &asnZOFByte[91]}/*requestType*/,
  /*9*/ {10, &asnZOFByte[102]}/*messageTTL*/,
  /*10*/ {9, &asnZOFByte[112]}/*creatorId*/,
  /*11*/ {7, &asnZOFByte[121]}/*eventId*/,
  /*12*/ {9, &asnZOFByte[128]}/*timeStamp*/,
  /*13*/ {9, &asnZOFByte[137]}/*requestid*/,
  /*14*/ {13, &asnZOFByte[146]}/*RequestHeader*/,
  /*15*/ {14, &asnZOFByte[159]}/*notifyInterval*/,
  /*16*/ {12, &asnZOFByte[173]}/*triggerTimes*/,
  /*17*/ {11, &asnZOFByte[185]}/*EventAction*/,
  /*18*/ {9, &asnZOFByte[196]}/*condition*/,
  /*19*/ {13, &asnZOFByte[205]}/*RuleCondition*/,
  /*20*/ {6, &asnZOFByte[218]}/*action*/,
  /*21*/ {8, &asnZOFByte[224]}/*interval*/,
  /*22*/ {10, &asnZOFByte[232]}/*conditions*/,
  /*23*/ {7, &asnZOFByte[242]}/*endTime*/,
  /*24*/ {9, &asnZOFByte[249]}/*startTime*/,
  /*25*/ {6, &asnZOFByte[258]}/*ruleId*/,
  /*26*/ {9, &asnZOFByte[264]}/*EventRule*/,
  /*27*/ {4, &asnZOFByte[273]}/*data*/,
  /*28*/ {2, &asnZOFByte[277]}/*id*/,
  /*29*/ {7, &asnZOFByte[279]}/*DTCData*/,
  /*30*/ {7, &asnZOFByte[286]}/*DIDData*/,
  /*31*/ {7, &asnZOFByte[293]}/*dtcData*/,
  /*32*/ {7, &asnZOFByte[300]}/*didData*/,
  /*33*/ {16, &asnZOFByte[307]}/*diagnosticNumber*/,
  /*34*/ {7, &asnZOFByte[323]}/*ECUData*/,
  /*35*/ {10, &asnZOFByte[330]}/*noDiagData*/,
  /*36*/ {7, &asnZOFByte[340]}/*EcuData*/,
  /*37*/ {12, &asnZOFByte[347]}/*drMapMatched*/,
  /*38*/ {12, &asnZOFByte[359]}/*drNoMapMatch*/,
  /*39*/ {4, &asnZOFByte[371]}/*noDr*/,
  /*40*/ {11, &asnZOFByte[375]}/*startupMode*/,
  /*41*/ {5, &asnZOFByte[386]}/*fix3D*/,
  /*42*/ {5, &asnZOFByte[391]}/*fix2D*/,
  /*43*/ {5, &asnZOFByte[396]}/*noFix*/,
  /*44*/ {12, &asnZOFByte[401]}/*notAvailable*/,
  /*45*/ {6, &asnZOFByte[413]}/*second*/,
  /*46*/ {6, &asnZOFByte[419]}/*minute*/,
  /*47*/ {4, &asnZOFByte[425]}/*hour*/,
  /*48*/ {3, &asnZOFByte[429]}/*day*/,
  /*49*/ {5, &asnZOFByte[432]}/*month*/,
  /*50*/ {4, &asnZOFByte[437]}/*year*/,
  /*51*/ {11, &asnZOFByte[441]}/*NEVDateTime*/,
  /*52*/ {8, &asnZOFByte[452]}/*latitude*/,
  /*53*/ {9, &asnZOFByte[460]}/*longitude*/,
  /*54*/ {21, &asnZOFByte[469]}/*NEVCoordinatesLongLat*/,
  /*55*/ {10, &asnZOFByte[490]}/*drDistance*/,
  /*56*/ {6, &asnZOFByte[500]}/*drType*/,
  /*57*/ {7, &asnZOFByte[506]}/*fixType*/,
  /*58*/ {7, &asnZOFByte[513]}/*fixTime*/,
  /*59*/ {6, &asnZOFByte[520]}/*numSat*/,
  /*60*/ {7, &asnZOFByte[526]}/*hdopX10*/,
  /*61*/ {9, &asnZOFByte[533]}/*speedKmph*/,
  /*62*/ {7, &asnZOFByte[542]}/*heading*/,
  /*63*/ {7, &asnZOFByte[549]}/*longLat*/,
  /*64*/ {17, &asnZOFByte[556]}/*NEVDRPositionData*/,
  /*65*/ {10, &asnZOFByte[573]}/*drPosition*/,
  /*66*/ {11, &asnZOFByte[583]}/*noValidData*/,
  /*67*/ {20, &asnZOFByte[594]}/*NEVDRVehiclePosition*/,
  /*68*/ {13, &asnZOFByte[614]}/*disableRmsTrg*/,
  /*69*/ {13, &asnZOFByte[627]}/*chargeStopTrg*/,
  /*70*/ {14, &asnZOFByte[640]}/*chargeStartTrg*/,
  /*71*/ {11, &asnZOFByte[654]}/*umChangeTrg*/,
  /*72*/ {11, &asnZOFByte[665]}/*periodicTrg*/,
  /*73*/ {7, &asnZOFByte[676]}/*ecuData*/,
  /*74*/ {8, &asnZOFByte[683]}/*position*/,
  /*75*/ {4, &asnZOFByte[691]}/*maID*/,
  /*76*/ {5, &asnZOFByte[695]}/*mdpID*/,
  /*77*/ {20, &asnZOFByte[700]}/*rvdcTriggerCondition*/,
  /*78*/ {11, &asnZOFByte[720]}/*testVehicle*/,
  /*79*/ {10, &asnZOFByte[731]}/*vehicleVin*/,
  /*80*/ {14, &asnZOFByte[741]}/*NEVServiceData*/,
  /*81*/ {10, &asnZOFByte[755]}/*TrackPoint*/,
  /*82*/ {23, &asnZOFByte[765]}/*endElectricRegeneration*/,
  /*83*/ {22, &asnZOFByte[788]}/*endElectricConsumption*/,
  /*84*/ {12, &asnZOFByte[810]}/*endFuelLevel*/,
  /*85*/ {11, &asnZOFByte[822]}/*endOdometer*/,
  /*86*/ {11, &asnZOFByte[833]}/*endPosition*/,
  /*87*/ {25, &asnZOFByte[844]}/*startElectricRegeneration*/,
  /*88*/ {24, &asnZOFByte[869]}/*startElectricConsumption*/,
  /*89*/ {14, &asnZOFByte[893]}/*startFuelLevel*/,
  /*90*/ {13, &asnZOFByte[907]}/*startOdometer*/,
  /*91*/ {13, &asnZOFByte[920]}/*startPosition*/,
  /*92*/ {12, &asnZOFByte[933]}/*TripFragment*/,
  /*93*/ {8, &asnZOFByte[945]}/*Position*/,
  /*94*/ {35, &asnZOFByte[953]}/*electricRegenerationSinceLastSample*/,
  /*95*/ {34, &asnZOFByte[988]}/*electricConsumptionSinceLastSample*/,
  /*96*/ {32, &asnZOFByte[1022]}/*fuelConsumptionSinceLastWaypoint*/,
  /*97*/ {31, &asnZOFByte[1054]}/*travelDistanceSinceLastWaypoint*/,
  /*98*/ {8, &asnZOFByte[1085]}/*odometer*/,
  /*99*/ {5, &asnZOFByte[1093]}/*isSVT*/,
  /*100*/ {9, &asnZOFByte[1098]}/*direction*/,
  /*101*/ {5, &asnZOFByte[1107]}/*speed*/,
  /*102*/ {10, &asnZOFByte[1112]}/*systemTime*/,
  /*103*/ {20, &asnZOFByte[1122]}/*electricRegeneration*/,
  /*104*/ {19, &asnZOFByte[1142]}/*electricConsumption*/,
  /*105*/ {8, &asnZOFByte[1161]}/*avgSpeed*/,
  /*106*/ {9, &asnZOFByte[1169]}/*waypoints*/,
  /*107*/ {11, &asnZOFByte[1178]}/*trackpoints*/,
  /*108*/ {16, &asnZOFByte[1189]}/*traveledDistance*/,
  /*109*/ {15, &asnZOFByte[1205]}/*fuelConsumption*/,
  /*110*/ {6, &asnZOFByte[1220]}/*tripId*/,
  /*111*/ {4, &asnZOFByte[1226]}/*Trip*/,
  /*112*/ {16, &asnZOFByte[1230]}/*verificationCode*/,
  /*113*/ {11, &asnZOFByte[1246]}/*downloadUrl*/,
  /*114*/ {9, &asnZOFByte[1257]}/*swVersion*/,
  /*115*/ {7, &asnZOFByte[1266]}/*swModel*/,
  /*116*/ {3, &asnZOFByte[1273]}/*OTA*/,
  /*117*/ {16, &asnZOFByte[1276]}/*ServiceParameter*/,
  /*118*/ {10, &asnZOFByte[1292]}/*parameters*/,
  /*119*/ {4, &asnZOFByte[1302]}/*time*/,
  /*120*/ {6, &asnZOFByte[1306]}/*reason*/,
  /*121*/ {12, &asnZOFByte[1312]}/*Notification*/,
  /*122*/ {9, &asnZOFByte[1324]}/*activated*/,
  /*123*/ {17, &asnZOFByte[1333]}/*TheftNotification*/,
  /*124*/ {13, &asnZOFByte[1350]}/*ECUDiagnostic*/,
  /*125*/ {14, &asnZOFByte[1363]}/*ECUDiagnostics*/,
  /*126*/ {5, &asnZOFByte[1377]}/*iccId*/,
  /*127*/ {4, &asnZOFByte[1382]}/*imsi*/,
  /*128*/ {6, &asnZOFByte[1386]}/*msisdn*/,
  /*129*/ {7, &asnZOFByte[1392]}/*SIMInfo*/,
  /*130*/ {13, &asnZOFByte[1399]}/*mobileNetwork*/,
  /*131*/ {7, &asnZOFByte[1412]}/*simInfo*/,
  /*132*/ {19, &asnZOFByte[1419]}/*NetworkAccessStatus*/,
  /*133*/ {24, &asnZOFByte[1438]}/*firstFailureVehicleSpeed*/,
  /*134*/ {26, &asnZOFByte[1462]}/*firstFailureBatteryVoltage*/,
  /*135*/ {20, &asnZOFByte[1488]}/*firstFailureOdometer*/,
  /*136*/ {8, &asnZOFByte[1508]}/*firtFail*/,
  /*137*/ {8, &asnZOFByte[1516]}/*lastFail*/,
  /*138*/ {12, &asnZOFByte[1524]}/*failureCount*/,
  /*139*/ {6, &asnZOFByte[1536]}/*status*/,
  /*140*/ {3, &asnZOFByte[1542]}/*dtc*/,
  /*141*/ {21, &asnZOFByte[1545]}/*DiagnosticTroubleCode*/,
  /*142*/ {13, &asnZOFByte[1566]}/*exceptionCode*/,
  /*143*/ {4, &asnZOFByte[1579]}/*dtcs*/,
  /*144*/ {16, &asnZOFByte[1583]}/*diagnosticResult*/,
  /*145*/ {5, &asnZOFByte[1599]}/*ecuID*/,
  /*146*/ {3, &asnZOFByte[1604]}/*off*/,
  /*147*/ {10, &asnZOFByte[1607]}/*sleep-poll*/,
  /*148*/ {7, &asnZOFByte[1617]}/*standby*/,
  /*149*/ {6, &asnZOFByte[1624]}/*normal*/,
  /*150*/ {10, &asnZOFByte[1630]}/*mcuVersion*/,
  /*151*/ {10, &asnZOFByte[1640]}/*mpuVersion*/,
  /*152*/ {9, &asnZOFByte[1650]}/*hwVersion*/,
  /*153*/ {4, &asnZOFByte[1659]}/*imei*/,
  /*154*/ {22, &asnZOFByte[1663]}/*completeECUPartNumbers*/,
  /*155*/ {12, &asnZOFByte[1685]}/*serialNumber*/,
  /*156*/ {19, &asnZOFByte[1697]}/*networkAccessStatus*/,
  /*157*/ {11, &asnZOFByte[1716]}/*diagnostics*/,
  /*158*/ {12, &asnZOFByte[1727]}/*healthStatus*/,
  /*159*/ {17, &asnZOFByte[1739]}/*serviceProvisoned*/,
  /*160*/ {24, &asnZOFByte[1756]}/*sleepCycleNextWakeupTime*/,
  /*161*/ {9, &asnZOFByte[1780]}/*powerMode*/,
  /*162*/ {13, &asnZOFByte[1789]}/*backupBattery*/,
  /*163*/ {11, &asnZOFByte[1802]}/*powerSource*/,
  /*164*/ {3, &asnZOFByte[1813]}/*vin*/,
  /*165*/ {9, &asnZOFByte[1816]}/*TEMStatus*/,
  /*166*/ {20, &asnZOFByte[1825]}/*GenericVehicleSignal*/,
  /*167*/ {7, &asnZOFByte[1845]}/*signals*/,
  /*168*/ {13, &asnZOFByte[1852]}/*speedValidity*/,
  /*169*/ {15, &asnZOFByte[1865]}/*recentPositions*/,
  /*170*/ {18, &asnZOFByte[1880]}/*numberOfPassengers*/,
  /*171*/ {8, &asnZOFByte[1898]}/*fuelType*/,
  /*172*/ {11, &asnZOFByte[1906]}/*vehicleType*/,
  /*173*/ {8, &asnZOFByte[1917]}/*testCall*/,
  /*174*/ {19, &asnZOFByte[1925]}/*automaticActivation*/,
  /*175*/ {6, &asnZOFByte[1944]}/*OEMMSD*/,
  /*176*/ {19, &asnZOFByte[1950]}/*heatedSteeringWheel*/,
  /*177*/ {19, &asnZOFByte[1969]}/*parkingClimateLevel*/,
  /*178*/ {16, &asnZOFByte[1988]}/*heatedFrontSeats*/,
  /*179*/ {9, &asnZOFByte[2004]}/*CarConfig*/,
  /*180*/ {9, &asnZOFByte[2013]}/*chargeSts*/,
  /*181*/ {20, &asnZOFByte[2022]}/*averPowerConsumption*/,
  /*182*/ {7, &asnZOFByte[2042]}/*ptReady*/,
  /*183*/ {11, &asnZOFByte[2049]}/*chargeHvSts*/,
  /*184*/ {18, &asnZOFByte[2060]}/*emsCBRemainingLife*/,
  /*185*/ {21, &asnZOFByte[2078]}/*emsBMSLBuildSwVersion*/,
  /*186*/ {15, &asnZOFByte[2099]}/*ems48vPackTemp2*/,
  /*187*/ {15, &asnZOFByte[2114]}/*ems48vPackTemp1*/,
  /*188*/ {12, &asnZOFByte[2129]}/*emsOVPActive*/,
  /*189*/ {17, &asnZOFByte[2141]}/*emsRBSModeDisplay*/,
  /*190*/ {13, &asnZOFByte[2158]}/*emsHVRBSError*/,
  /*191*/ {9, &asnZOFByte[2171]}/*ems48VSOC*/,
  /*192*/ {28, &asnZOFByte[2180]}/*distanceToEmptyOnBatteryOnly*/,
  /*193*/ {12, &asnZOFByte[2208]}/*chargerState*/,
  /*194*/ {25, &asnZOFByte[2220]}/*statusOfChargerConnection*/,
  /*195*/ {18, &asnZOFByte[2245]}/*timeToFullyCharged*/,
  /*196*/ {11, &asnZOFByte[2263]}/*chargeLevel*/,
  /*197*/ {13, &asnZOFByte[2274]}/*stateOfCharge*/,
  /*198*/ {11, &asnZOFByte[2287]}/*isPluggedIn*/,
  /*199*/ {10, &asnZOFByte[2298]}/*isCharging*/,
  /*200*/ {21, &asnZOFByte[2308]}/*ElectricVehicleStatus*/,
  /*201*/ {7, &asnZOFByte[2329]}/*dataVal*/,
  /*202*/ {12, &asnZOFByte[2336]}/*timestampVal*/,
  /*203*/ {7, &asnZOFByte[2348]}/*boolVal*/,
  /*204*/ {9, &asnZOFByte[2355]}/*stringVal*/,
  /*205*/ {5, &asnZOFByte[2364]}/*value*/,
  /*206*/ {11, &asnZOFByte[2369]}/*collectTime*/,
  /*207*/ {3, &asnZOFByte[2380]}/*key*/,
  /*208*/ {18, &asnZOFByte[2383]}/*EcuWarningMessages*/,
  /*209*/ {12, &asnZOFByte[2401]}/*exteriorPM25*/,
  /*210*/ {12, &asnZOFByte[2413]}/*interiorPM25*/,
  /*211*/ {15, &asnZOFByte[2425]}/*PollutionStatus*/,
  /*212*/ {19, &asnZOFByte[2440]}/*cruiseControlStatus*/,
  /*213*/ {24, &asnZOFByte[2459]}/*transimissionGearPostion*/,
  /*214*/ {19, &asnZOFByte[2483]}/*engineSpeedValidity*/,
  /*215*/ {11, &asnZOFByte[2502]}/*engineSpeed*/,
  /*216*/ {27, &asnZOFByte[2513]}/*brakePedalDepressedValidity*/,
  /*217*/ {19, &asnZOFByte[2540]}/*brakePedalDepressed*/,
  /*218*/ {22, &asnZOFByte[2559]}/*DrivingBehaviourStatus*/,
  /*219*/ {9, &asnZOFByte[2581]}/*rlVentSts*/,
  /*220*/ {9, &asnZOFByte[2590]}/*rrVentSts*/,
  /*221*/ {11, &asnZOFByte[2599]}/*passVentSts*/,
  /*222*/ {10, &asnZOFByte[2610]}/*drvVentSts*/,
  /*223*/ {12, &asnZOFByte[2620]}/*rrHeatingSts*/,
  /*224*/ {12, &asnZOFByte[2632]}/*rlHeatingSts*/,
  /*225*/ {14, &asnZOFByte[2644]}/*passHeatingSts*/,
  /*226*/ {10, &asnZOFByte[2658]}/*drvHeatSts*/,
  /*227*/ {16, &asnZOFByte[2668]}/*winCloseReminder*/,
  /*228*/ {11, &asnZOFByte[2684]}/*airCleanSts*/,
  /*229*/ {16, &asnZOFByte[2695]}/*preClimateActive*/,
  /*230*/ {20, &asnZOFByte[2711]}/*exteriorTempValidity*/,
  /*231*/ {12, &asnZOFByte[2731]}/*exteriorTemp*/,
  /*232*/ {12, &asnZOFByte[2743]}/*interiorTemp*/,
  /*233*/ {19, &asnZOFByte[2755]}/*winPosPassengerRear*/,
  /*234*/ {16, &asnZOFByte[2774]}/*winPosDriverRear*/,
  /*235*/ {15, &asnZOFByte[2790]}/*winPosPassenger*/,
  /*236*/ {12, &asnZOFByte[2805]}/*winPosDriver*/,
  /*237*/ {15, &asnZOFByte[2817]}/*ventilateStatus*/,
  /*238*/ {25, &asnZOFByte[2832]}/*sunroofOpenStatusValidity*/,
  /*239*/ {17, &asnZOFByte[2857]}/*sunroofOpenStatus*/,
  /*240*/ {30, &asnZOFByte[2874]}/*winStatusPassengerRearValidity*/,
  /*241*/ {22, &asnZOFByte[2904]}/*winStatusPassengerRear*/,
  /*242*/ {27, &asnZOFByte[2926]}/*winStatusDriverRearValidity*/,
  /*243*/ {19, &asnZOFByte[2953]}/*winStatusDriverRear*/,
  /*244*/ {26, &asnZOFByte[2972]}/*winStatusPassengerValidity*/,
  /*245*/ {18, &asnZOFByte[2998]}/*winStatusPassenger*/,
  /*246*/ {23, &asnZOFByte[3016]}/*winStatusDriverValidity*/,
  /*247*/ {15, &asnZOFByte[3039]}/*winStatusDriver*/,
  /*248*/ {13, &asnZOFByte[3054]}/*ClimateStatus*/,
  /*249*/ {10, &asnZOFByte[3067]}/*bulbStatus*/,
  /*250*/ {10, &asnZOFByte[3077]}/*tripMeter2*/,
  /*251*/ {10, &asnZOFByte[3087]}/*tripMeter1*/,
  /*252*/ {38, &asnZOFByte[3097]}/*aveFuelConsumptionInLatestDrivingCycle*/,
  /*253*/ {18, &asnZOFByte[3135]}/*aveFuelConsumption*/,
  /*254*/ {15, &asnZOFByte[3153]}/*fuelLevelStatus*/,
  /*255*/ {9, &asnZOFByte[3168]}/*fuelLevel*/,
  /*256*/ {24, &asnZOFByte[3177]}/*engineCoolantLevelStatus*/,
  /*257*/ {32, &asnZOFByte[3201]}/*engineCoolantTemperatureValidity*/,
  /*258*/ {24, &asnZOFByte[3233]}/*engineCoolantTemperature*/,
  /*259*/ {24, &asnZOFByte[3257]}/*engineOilPressureWarning*/,
  /*260*/ {20, &asnZOFByte[3281]}/*engineOilTemperature*/,
  /*261*/ {20, &asnZOFByte[3301]}/*engineOilLevelStatus*/,
  /*262*/ {13, &asnZOFByte[3321]}/*RunningStatus*/,
  /*263*/ {5, &asnZOFByte[3334]}/*other*/,
  /*264*/ {13, &asnZOFByte[3339]}/*engineRequest*/,
  /*265*/ {11, &asnZOFByte[3352]}/*engineHours*/,
  /*266*/ {8, &asnZOFByte[3363]}/*distance*/,
  /*267*/ {8, &asnZOFByte[3371]}/*calendar*/,
  /*268*/ {7, &asnZOFByte[3379]}/*voltage*/,
  /*269*/ {13, &asnZOFByte[3386]}/*stateOfHealth*/,
  /*270*/ {13, &asnZOFByte[3399]}/*BatteryStatus*/,
  /*271*/ {22, &asnZOFByte[3412]}/*washerFluidLevelStatus*/,
  /*272*/ {21, &asnZOFByte[3434]}/*brakeFluidLevelStatus*/,
  /*273*/ {21, &asnZOFByte[3455]}/*serviceWarningTrigger*/,
  /*274*/ {20, &asnZOFByte[3476]}/*serviceWarningStatus*/,
  /*275*/ {13, &asnZOFByte[3496]}/*daysToService*/,
  /*276*/ {17, &asnZOFByte[3509]}/*distanceToService*/,
  /*277*/ {18, &asnZOFByte[3526]}/*engineHrsToService*/,
  /*278*/ {27, &asnZOFByte[3544]}/*tyrePreWarningPassengerRear*/,
  /*279*/ {24, &asnZOFByte[3571]}/*tyrePreWarningDriverRear*/,
  /*280*/ {23, &asnZOFByte[3595]}/*tyrePreWarningPassenger*/,
  /*281*/ {20, &asnZOFByte[3618]}/*tyrePreWarningDriver*/,
  /*282*/ {23, &asnZOFByte[3638]}/*tyreStatusPassengerRear*/,
  /*283*/ {20, &asnZOFByte[3661]}/*tyreStatusDriverRear*/,
  /*284*/ {19, &asnZOFByte[3681]}/*tyreStatusPassenger*/,
  /*285*/ {16, &asnZOFByte[3700]}/*tyreStatusDriver*/,
  /*286*/ {17, &asnZOFByte[3716]}/*mainBatteryStatus*/,
  /*287*/ {17, &asnZOFByte[3733]}/*MaintenanceStatus*/,
  /*288*/ {12, &asnZOFByte[3750]}/*srs-deployed*/,
  /*289*/ {16, &asnZOFByte[3762]}/*srs-not-deployed*/,
  /*290*/ {11, &asnZOFByte[3778]}/*no-srs-info*/,
  /*291*/ {31, &asnZOFByte[3789]}/*electricParkBrakeStatusValidity*/,
  /*292*/ {23, &asnZOFByte[3820]}/*electricParkBrakeStatus*/,
  /*293*/ {15, &asnZOFByte[3843]}/*handBrakeStatus*/,
  /*294*/ {27, &asnZOFByte[3858]}/*seatBeltStatusPassengerRear*/,
  /*295*/ {24, &asnZOFByte[3885]}/*seatBeltStatusDriverRear*/,
  /*296*/ {23, &asnZOFByte[3909]}/*seatBeltStatusPassenger*/,
  /*297*/ {20, &asnZOFByte[3932]}/*seatBeltStatusDriver*/,
  /*298*/ {20, &asnZOFByte[3952]}/*centralLockingStatus*/,
  /*299*/ {20, &asnZOFByte[3972]}/*engineHoodOpenStatus*/,
  /*300*/ {15, &asnZOFByte[3992]}/*trunkLockStatus*/,
  /*301*/ {15, &asnZOFByte[4007]}/*trunkOpenStatus*/,
  /*302*/ {27, &asnZOFByte[4022]}/*doorLockStatusPassengerRear*/,
  /*303*/ {24, &asnZOFByte[4049]}/*doorLockStatusDriverRear*/,
  /*304*/ {23, &asnZOFByte[4073]}/*doorLockStatusPassenger*/,
  /*305*/ {20, &asnZOFByte[4096]}/*doorLockStatusDriver*/,
  /*306*/ {27, &asnZOFByte[4116]}/*doorOpenStatusPassengerRear*/,
  /*307*/ {24, &asnZOFByte[4143]}/*doorOpenStatusDriverRear*/,
  /*308*/ {23, &asnZOFByte[4167]}/*doorOpenStatusPassenger*/,
  /*309*/ {20, &asnZOFByte[4190]}/*doorOpenStatusDriver*/,
  /*310*/ {12, &asnZOFByte[4210]}/*vehicleAlarm*/,
  /*311*/ {9, &asnZOFByte[4222]}/*srsStatus*/,
  /*312*/ {19, &asnZOFByte[4231]}/*DrivingSafetyStatus*/,
  /*313*/ {24, &asnZOFByte[4250]}/*ConfigurationAndIdentity*/,
  /*314*/ {9, &asnZOFByte[4274]}/*carConfig*/,
  /*315*/ {21, &asnZOFByte[4283]}/*electricVehicleStatus*/,
  /*316*/ {18, &asnZOFByte[4304]}/*ecuWarningMessages*/,
  /*317*/ {15, &asnZOFByte[4322]}/*pollutionStatus*/,
  /*318*/ {22, &asnZOFByte[4337]}/*drivingBehaviourStatus*/,
  /*319*/ {13, &asnZOFByte[4359]}/*climateStatus*/,
  /*320*/ {13, &asnZOFByte[4372]}/*runningStatus*/,
  /*321*/ {17, &asnZOFByte[4385]}/*maintenanceStatus*/,
  /*322*/ {19, &asnZOFByte[4402]}/*drivingSafetyStatus*/,
  /*323*/ {9, &asnZOFByte[4421]}/*confAndId*/,
  /*324*/ {23, &asnZOFByte[4430]}/*AdditionalVehicleStatus*/,
  /*325*/ {7, &asnZOFByte[4453]}/*blocked*/,
  /*326*/ {9, &asnZOFByte[4460]}/*unblocked*/,
  /*327*/ {9, &asnZOFByte[4469]}/*usageMode*/,
  /*328*/ {15, &asnZOFByte[4478]}/*distanceToEmpty*/,
  /*329*/ {19, &asnZOFByte[4493]}/*engineBlockedStatus*/,
  /*330*/ {9, &asnZOFByte[4512]}/*keyStatus*/,
  /*331*/ {12, &asnZOFByte[4521]}/*engineStatus*/,
  /*332*/ {18, &asnZOFByte[4533]}/*BasicVehicleStatus*/,
  /*333*/ {12, &asnZOFByte[4551]}/*notification*/,
  /*334*/ {17, &asnZOFByte[4563]}/*theftNotification*/,
  /*335*/ {9, &asnZOFByte[4580]}/*temStatus*/,
  /*336*/ {3, &asnZOFByte[4589]}/*msd*/,
  /*337*/ {23, &asnZOFByte[4592]}/*additionalVehicleStatus*/,
  /*338*/ {18, &asnZOFByte[4615]}/*basicVehicleStatus*/,
  /*339*/ {13, &asnZOFByte[4633]}/*VehicleStatus*/,
  /*340*/ {4, &asnZOFByte[4646]}/*name*/,
  /*341*/ {17, &asnZOFByte[4650]}/*ConfigurationItem*/,
  /*342*/ {5, &asnZOFByte[4667]}/*items*/,
  /*343*/ {7, &asnZOFByte[4672]}/*version*/,
  /*344*/ {13, &asnZOFByte[4679]}/*Configuration*/,
  /*345*/ {7, &asnZOFByte[4692]}/*country*/,
  /*346*/ {8, &asnZOFByte[4699]}/*postcode*/,
  /*347*/ {6, &asnZOFByte[4707]}/*region*/,
  /*348*/ {4, &asnZOFByte[4713]}/*city*/,
  /*349*/ {11, &asnZOFByte[4717]}/*houseNumber*/,
  /*350*/ {6, &asnZOFByte[4728]}/*street*/,
  /*351*/ {11, &asnZOFByte[4734]}/*PostAddress*/,
  /*352*/ {6, &asnZOFByte[4745]}/*phone2*/,
  /*353*/ {6, &asnZOFByte[4751]}/*phone1*/,
  /*354*/ {7, &asnZOFByte[4757]}/*address*/,
  /*355*/ {5, &asnZOFByte[4764]}/*email*/,
  /*356*/ {11, &asnZOFByte[4769]}/*ContactInfo*/,
  /*357*/ {15, &asnZOFByte[4780]}/*marsCoordinates*/,
  /*358*/ {22, &asnZOFByte[4795]}/*carLocatorStatUploadEn*/,
  /*359*/ {15, &asnZOFByte[4817]}/*posCanBeTrusted*/,
  /*360*/ {8, &asnZOFByte[4832]}/*altitude*/,
  /*361*/ {10, &asnZOFByte[4840]}/*attributes*/,
  /*362*/ {3, &asnZOFByte[4850]}/*url*/,
  /*363*/ {11, &asnZOFByte[4853]}/*contactInfo*/,
  /*364*/ {4, &asnZOFByte[4864]}/*type*/,
  /*365*/ {15, &asnZOFByte[4868]}/*PointOfInterest*/,
  /*366*/ {11, &asnZOFByte[4883]}/*ocetMessage*/,
  /*367*/ {7, &asnZOFByte[4894]}/*message*/,
  /*368*/ {14, &asnZOFByte[4901]}/*GeneralMessage*/,
  /*369*/ {22, &asnZOFByte[4915]}/*remoteControlInhibited*/,
  /*370*/ {13, &asnZOFByte[4937]}/*ServiceStatus*/,
  /*371*/ {16, &asnZOFByte[4950]}/*vehicleErrorCode*/,
  /*372*/ {4, &asnZOFByte[4966]}/*code*/,
  /*373*/ {5, &asnZOFByte[4970]}/*Error*/,
  /*374*/ {5, &asnZOFByte[4975]}/*error*/,
  /*375*/ {18, &asnZOFByte[4980]}/*operationSucceeded*/,
  /*376*/ {13, &asnZOFByte[4998]}/*ServiceResult*/,
  /*377*/ {6, &asnZOFByte[5011]}/*intVal*/,
  /*378*/ {12, &asnZOFByte[5017]}/*milliseconds*/,
  /*379*/ {7, &asnZOFByte[5029]}/*seconds*/,
  /*380*/ {9, &asnZOFByte[5036]}/*TimeStamp*/,
  /*381*/ {6, &asnZOFByte[5045]}/*occurs*/,
  /*382*/ {8, &asnZOFByte[5051]}/*duration*/,
  /*383*/ {18, &asnZOFByte[5059]}/*recurrentOperation*/,
  /*384*/ {13, &asnZOFByte[5077]}/*scheduledTime*/,
  /*385*/ {14, &asnZOFByte[5090]}/*ServiceTrigger*/,
  /*386*/ {9, &asnZOFByte[5104]}/*eventRule*/,
  /*387*/ {14, &asnZOFByte[5113]}/*nevServiceData*/,
  /*388*/ {11, &asnZOFByte[5127]}/*trackPoints*/,
  /*389*/ {13, &asnZOFByte[5138]}/*tripFragments*/,
  /*390*/ {4, &asnZOFByte[5151]}/*trip*/,
  /*391*/ {3, &asnZOFByte[5155]}/*ota*/,
  /*392*/ {13, &asnZOFByte[5158]}/*vehicleStatus*/,
  /*393*/ {13, &asnZOFByte[5171]}/*configuration*/,
  /*394*/ {4, &asnZOFByte[5184]}/*pois*/,
  /*395*/ {13, &asnZOFByte[5188]}/*serviceStatus*/,
  /*396*/ {13, &asnZOFByte[5201]}/*serviceResult*/,
  /*397*/ {14, &asnZOFByte[5214]}/*serviceCommand*/,
  /*398*/ {17, &asnZOFByte[5228]}/*serviceParameters*/,
  /*399*/ {14, &asnZOFByte[5245]}/*serviceTrigger*/,
  /*400*/ {11, &asnZOFByte[5259]}/*ServiceData*/,
  /*401*/ {3, &asnZOFByte[5270]}/*seq*/,
  /*402*/ {11, &asnZOFByte[5273]}/*serviceData*/,
  /*403*/ {9, &asnZOFByte[5284]}/*serviceId*/,
  /*404*/ {11, &asnZOFByte[5293]}/*RequestBody*/
};
#endif
asnTNDXerTagMap asnZNDXerTagMap[]=
{
  /*0*/ {{10, &asnZOFByte[330]}, 0} /*noDiagData*/,
  /*1*/ {{4, &asnZOFByte[273]}, 1} /*data*/,
  /*2*/ {{11, &asnZOFByte[583]}, 0} /*noValidData*/,
  /*3*/ {{10, &asnZOFByte[573]}, 1} /*drPosition*/,
  /*4*/ {{7, &asnZOFByte[4894]}, 0} /*message*/,
  /*5*/ {{11, &asnZOFByte[4883]}, 1} /*ocetMessage*/
};
asnTNCXerTagTypeAssMap asnZNCXerTagTypeAssMap[]=
{
  /*0*/ {
    asnCCast(asnPOCTypeAssignment,&asnZOCTypeAssignment[56]),// typeAssignment
    asnCCast(asnPNEXerTag,&asnZNEXerTag[2])// xerTag
    }
};
#ifndef asnNonPodOffsetof
#ifndef asnCodNonCppOffsetInit
/**
 * An instance of AbstractSyntaxInitClass is declared here
 * as a global variable to call automatically the init function
 * In some platfoms this instanciation must be done in the user
 * application
 */
asnAbstractSyntaxInitClass  objasnAbstractSyntaxInitClass;
#endif /* asnCodNonCppOffsetInit */
/*
 * Init function that calculates
 * all C++ api offset. This function is used when
 * asnCodNonPodOffsetof is not defined
 */
asnFGlobal asnFVoid asnMNAAbstractSyntaxInit
       asnNOPARMS
{
  {
    asnctrackpointss objasnctrackpointss;
    {
      TrackPoint objTrackPoint;
      asnZSWSetSeqOfNamedType[12].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasnctrackpointss.optional - (asnbytep)&objasnctrackpointss) - 
                       ((asnbytep)&objTrackPoint.optional - (asnbytep)&objTrackPoint) );
    }
  }
  {
    asncConfigurationItem__parameterss objasncConfigurationItem__parameterss;
    {
      ServiceParameter objServiceParameter;
      asnZSWSetSeqOfNamedType[4].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncConfigurationItem__parameterss.optional - (asnbytep)&objasncConfigurationItem__parameterss) - 
                       ((asnbytep)&objServiceParameter.optional - (asnbytep)&objServiceParameter) );
    }
  }
  {
    asncwaypointss objasncwaypointss;
    {
      Position objPosition;
      asnZSWSetSeqOfNamedType[13].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncwaypointss.optional - (asnbytep)&objasncwaypointss) - 
                       ((asnbytep)&objPosition.optional - (asnbytep)&objPosition) );
    }
  }
  {
    ConfigurationAndIdentity objConfigurationAndIdentity;
    asnZOLSequence[17].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objConfigurationAndIdentity.optionalField - (asnbytep)&objConfigurationAndIdentity);
    asnZONSetSeqNamedType[92].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objConfigurationAndIdentity.vin - (asnbytep)&objConfigurationAndIdentity);
    asnZONSetSeqNamedType[93].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objConfigurationAndIdentity.fuelType - (asnbytep)&objConfigurationAndIdentity);
  }
  {
    asncEcuWarningMessagess objasncEcuWarningMessagess;
    {
      GenericVehicleSignal objGenericVehicleSignal;
      asnZSWSetSeqOfNamedType[5].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncEcuWarningMessagess.optional - (asnbytep)&objasncEcuWarningMessagess) - 
                       ((asnbytep)&objGenericVehicleSignal.optional - (asnbytep)&objGenericVehicleSignal) );
    }
  }
  {
    NEVServiceData objNEVServiceData;
    asnZONSetSeqNamedType[305].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVServiceData.vehicleVin - (asnbytep)&objNEVServiceData);
    asnZONSetSeqNamedType[306].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVServiceData.testVehicle - (asnbytep)&objNEVServiceData);
    asnZONSetSeqNamedType[307].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVServiceData.rvdcTriggerCondition - (asnbytep)&objNEVServiceData);
    asnZONSetSeqNamedType[308].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVServiceData.mdpID - (asnbytep)&objNEVServiceData);
    asnZONSetSeqNamedType[309].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVServiceData.maID - (asnbytep)&objNEVServiceData);
    asnZONSetSeqNamedType[310].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVServiceData.position - (asnbytep)&objNEVServiceData);
    asnZONSetSeqNamedType[311].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVServiceData.ecuData - (asnbytep)&objNEVServiceData);
  }
  {
    Configuration objConfiguration;
    asnZONSetSeqNamedType[60].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objConfiguration.version - (asnbytep)&objConfiguration);
    asnZONSetSeqNamedType[61].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objConfiguration.items - (asnbytep)&objConfiguration);
  }
  {
    PointOfInterest objPointOfInterest;
    asnZOLSequence[8].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objPointOfInterest.optionalField - (asnbytep)&objPointOfInterest);
    asnZONSetSeqNamedType[38].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPointOfInterest.name - (asnbytep)&objPointOfInterest);
    asnZONSetSeqNamedType[39].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPointOfInterest.position - (asnbytep)&objPointOfInterest);
    asnZONSetSeqNamedType[40].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPointOfInterest.type - (asnbytep)&objPointOfInterest);
    asnZONSetSeqNamedType[41].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPointOfInterest.contactInfo - (asnbytep)&objPointOfInterest);
    asnZONSetSeqNamedType[42].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPointOfInterest.url - (asnbytep)&objPointOfInterest);
    asnZONSetSeqNamedType[43].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPointOfInterest.attributes - (asnbytep)&objPointOfInterest);
  }
  {
    NetworkAccessStatus objNetworkAccessStatus;
    asnZOLSequence[32].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objNetworkAccessStatus.optionalField - (asnbytep)&objNetworkAccessStatus);
    asnZONSetSeqNamedType[257].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNetworkAccessStatus.simInfo - (asnbytep)&objNetworkAccessStatus);
    asnZONSetSeqNamedType[258].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNetworkAccessStatus.mobileNetwork - (asnbytep)&objNetworkAccessStatus);
  }
  {
    PollutionStatus objPollutionStatus;
    asnZOLSequence[24].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objPollutionStatus.optionalField - (asnbytep)&objPollutionStatus);
    asnZONSetSeqNamedType[185].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPollutionStatus.interiorPM25 - (asnbytep)&objPollutionStatus);
    asnZONSetSeqNamedType[186].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPollutionStatus.exteriorPM25 - (asnbytep)&objPollutionStatus);
  }
  {
    SIMInfo objSIMInfo;
    asnZOLSequence[33].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objSIMInfo.optionalField - (asnbytep)&objSIMInfo);
    asnZONSetSeqNamedType[259].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objSIMInfo.msisdn - (asnbytep)&objSIMInfo);
    asnZONSetSeqNamedType[260].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objSIMInfo.imsi - (asnbytep)&objSIMInfo);
    asnZONSetSeqNamedType[261].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objSIMInfo.iccId - (asnbytep)&objSIMInfo);
  }
  {
    asncGeneralMessage__message objasncGeneralMessage__message;
    asnZPSChoiceNamedType[0].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objasncGeneralMessage__message.message - (asnbytep)&objasncGeneralMessage__message);
  }
  {
    NEVDRPositionData objNEVDRPositionData;
    asnZONSetSeqNamedType[312].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDRPositionData.longLat - (asnbytep)&objNEVDRPositionData);
    asnZONSetSeqNamedType[313].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDRPositionData.heading - (asnbytep)&objNEVDRPositionData);
    asnZONSetSeqNamedType[314].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDRPositionData.speedKmph - (asnbytep)&objNEVDRPositionData);
    asnZONSetSeqNamedType[315].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDRPositionData.hdopX10 - (asnbytep)&objNEVDRPositionData);
    asnZONSetSeqNamedType[316].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDRPositionData.numSat - (asnbytep)&objNEVDRPositionData);
    asnZONSetSeqNamedType[317].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDRPositionData.fixTime - (asnbytep)&objNEVDRPositionData);
    asnZONSetSeqNamedType[318].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDRPositionData.fixType - (asnbytep)&objNEVDRPositionData);
    asnZONSetSeqNamedType[319].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDRPositionData.drType - (asnbytep)&objNEVDRPositionData);
    asnZONSetSeqNamedType[320].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDRPositionData.drDistance - (asnbytep)&objNEVDRPositionData);
  }
  {
    GeneralMessage objGeneralMessage;
    asnZOCTypeAssignment[8].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objGeneralMessage.value - (asnbytep)&objGeneralMessage);
  }
  {
    TEMStatus objTEMStatus;
    asnZOLSequence[29].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.optionalField - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[229].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.vin - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[230].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.powerSource - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[231].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.backupBattery - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[232].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.powerMode - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[233].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.sleepCycleNextWakeupTime - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[234].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.serviceProvisoned - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[235].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.healthStatus - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[236].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.diagnostics - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[237].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.networkAccessStatus - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[238].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.serialNumber - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[239].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.completeECUPartNumbers - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[240].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.imei - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[241].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.hwVersion - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[242].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.swVersion - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[243].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.mpuVersion - (asnbytep)&objTEMStatus);
    asnZONSetSeqNamedType[244].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTEMStatus.mcuVersion - (asnbytep)&objTEMStatus);
  }
  {
    ServiceStatus objServiceStatus;
    asnZONSetSeqNamedType[37].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceStatus.remoteControlInhibited - (asnbytep)&objServiceStatus);
  }
  {
    NEVDateTime objNEVDateTime;
    asnZONSetSeqNamedType[323].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDateTime.year - (asnbytep)&objNEVDateTime);
    asnZONSetSeqNamedType[324].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDateTime.month - (asnbytep)&objNEVDateTime);
    asnZONSetSeqNamedType[325].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDateTime.day - (asnbytep)&objNEVDateTime);
    asnZONSetSeqNamedType[326].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDateTime.hour - (asnbytep)&objNEVDateTime);
    asnZONSetSeqNamedType[327].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDateTime.minute - (asnbytep)&objNEVDateTime);
    asnZONSetSeqNamedType[328].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDateTime.second - (asnbytep)&objNEVDateTime);
  }
  {
    ContactInfo objContactInfo;
    asnZOLSequence[10].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objContactInfo.optionalField - (asnbytep)&objContactInfo);
    asnZONSetSeqNamedType[50].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objContactInfo.email - (asnbytep)&objContactInfo);
    asnZONSetSeqNamedType[51].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objContactInfo.address - (asnbytep)&objContactInfo);
    asnZONSetSeqNamedType[52].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objContactInfo.phone1 - (asnbytep)&objContactInfo);
    asnZONSetSeqNamedType[53].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objContactInfo.phone2 - (asnbytep)&objContactInfo);
  }
  {
    ClimateStatus objClimateStatus;
    asnZOLSequence[22].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.optionalField - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[150].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winStatusDriver - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[151].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winStatusDriverValidity - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[152].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winStatusPassenger - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[153].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winStatusPassengerValidity - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[154].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winStatusDriverRear - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[155].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winStatusDriverRearValidity - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[156].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winStatusPassengerRear - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[157].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winStatusPassengerRearValidity - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[158].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.sunroofOpenStatus - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[159].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.sunroofOpenStatusValidity - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[160].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.ventilateStatus - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[161].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winPosDriver - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[162].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winPosPassenger - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[163].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winPosDriverRear - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[164].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winPosPassengerRear - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[165].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.interiorTemp - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[166].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.exteriorTemp - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[167].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.exteriorTempValidity - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[168].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.preClimateActive - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[169].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.airCleanSts - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[170].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.winCloseReminder - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[171].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.drvHeatSts - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[172].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.passHeatingSts - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[173].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.rlHeatingSts - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[174].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.rrHeatingSts - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[175].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.drvVentSts - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[176].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.passVentSts - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[177].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.rrVentSts - (asnbytep)&objClimateStatus);
    asnZONSetSeqNamedType[178].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objClimateStatus.rlVentSts - (asnbytep)&objClimateStatus);
  }
  {
    TripFragment objTripFragment;
    asnZOLSequence[39].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.optionalField - (asnbytep)&objTripFragment);
    asnZONSetSeqNamedType[293].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.startTime - (asnbytep)&objTripFragment);
    asnZONSetSeqNamedType[294].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.startPosition - (asnbytep)&objTripFragment);
    asnZONSetSeqNamedType[295].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.startOdometer - (asnbytep)&objTripFragment);
    asnZONSetSeqNamedType[296].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.startFuelLevel - (asnbytep)&objTripFragment);
    asnZONSetSeqNamedType[297].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.startElectricConsumption - (asnbytep)&objTripFragment);
    asnZONSetSeqNamedType[298].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.startElectricRegeneration - (asnbytep)&objTripFragment);
    asnZONSetSeqNamedType[299].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.endTime - (asnbytep)&objTripFragment);
    asnZONSetSeqNamedType[300].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.endPosition - (asnbytep)&objTripFragment);
    asnZONSetSeqNamedType[301].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.endOdometer - (asnbytep)&objTripFragment);
    asnZONSetSeqNamedType[302].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.endFuelLevel - (asnbytep)&objTripFragment);
    asnZONSetSeqNamedType[303].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.endElectricConsumption - (asnbytep)&objTripFragment);
    asnZONSetSeqNamedType[304].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTripFragment.endElectricRegeneration - (asnbytep)&objTripFragment);
  }
  {
    asncNotification__parameterss objasncNotification__parameterss;
    {
      ServiceParameter objServiceParameter;
      asnZSWSetSeqOfNamedType[11].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncNotification__parameterss.optional - (asnbytep)&objasncNotification__parameterss) - 
                       ((asnbytep)&objServiceParameter.optional - (asnbytep)&objServiceParameter) );
    }
  }
  {
    AdditionalVehicleStatus objAdditionalVehicleStatus;
    asnZOLSequence[16].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.optionalField - (asnbytep)&objAdditionalVehicleStatus);
    asnZONSetSeqNamedType[80].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.confAndId - (asnbytep)&objAdditionalVehicleStatus);
    asnZONSetSeqNamedType[81].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.drivingSafetyStatus - (asnbytep)&objAdditionalVehicleStatus);
    asnZONSetSeqNamedType[82].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.maintenanceStatus - (asnbytep)&objAdditionalVehicleStatus);
    asnZONSetSeqNamedType[83].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.runningStatus - (asnbytep)&objAdditionalVehicleStatus);
    asnZONSetSeqNamedType[84].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.climateStatus - (asnbytep)&objAdditionalVehicleStatus);
    asnZONSetSeqNamedType[85].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.drivingBehaviourStatus - (asnbytep)&objAdditionalVehicleStatus);
    asnZONSetSeqNamedType[86].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.pollutionStatus - (asnbytep)&objAdditionalVehicleStatus);
    asnZONSetSeqNamedType[87].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.ecuWarningMessages - (asnbytep)&objAdditionalVehicleStatus);
    asnZONSetSeqNamedType[88].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.electricVehicleStatus - (asnbytep)&objAdditionalVehicleStatus);
    asnZONSetSeqNamedType[89].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.carConfig - (asnbytep)&objAdditionalVehicleStatus);
    asnZONSetSeqNamedType[90].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.signals - (asnbytep)&objAdditionalVehicleStatus);
    asnZONSetSeqNamedType[91].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objAdditionalVehicleStatus.data - (asnbytep)&objAdditionalVehicleStatus);
  }
  {
    asncnoValidData objasncnoValidData;
    asnZPSChoiceNamedType[2].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objasncnoValidData.noValidData - (asnbytep)&objasncnoValidData);
  }
  {
    DrivingSafetyStatus objDrivingSafetyStatus;
    asnZOLSequence[18].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.optionalField - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[94].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.srsStatus - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[95].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.vehicleAlarm - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[96].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.doorOpenStatusDriver - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[97].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.doorOpenStatusPassenger - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[98].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.doorOpenStatusDriverRear - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[99].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.doorOpenStatusPassengerRear - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[100].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.doorLockStatusDriver - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[101].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.doorLockStatusPassenger - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[102].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.doorLockStatusDriverRear - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[103].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.doorLockStatusPassengerRear - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[104].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.trunkOpenStatus - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[105].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.trunkLockStatus - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[106].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.engineHoodOpenStatus - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[107].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.centralLockingStatus - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[108].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.seatBeltStatusDriver - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[109].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.seatBeltStatusPassenger - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[110].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.seatBeltStatusDriverRear - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[111].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.seatBeltStatusPassengerRear - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[112].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.handBrakeStatus - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[113].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.electricParkBrakeStatus - (asnbytep)&objDrivingSafetyStatus);
    asnZONSetSeqNamedType[114].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingSafetyStatus.electricParkBrakeStatusValidity - (asnbytep)&objDrivingSafetyStatus);
  }
  {
    asncdatas objasncdatas;
    {
      ECUData objECUData;
      asnZSWSetSeqOfNamedType[16].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncdatas.ecu - (asnbytep)&objasncdatas) - 
                       ((asnbytep)&objECUData.ecu - (asnbytep)&objECUData) );
    }
  }
  {
    Position objPosition;
    asnZOLSequence[9].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objPosition.optionalField - (asnbytep)&objPosition);
    asnZONSetSeqNamedType[44].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPosition.latitude - (asnbytep)&objPosition);
    asnZONSetSeqNamedType[45].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPosition.longitude - (asnbytep)&objPosition);
    asnZONSetSeqNamedType[46].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPosition.altitude - (asnbytep)&objPosition);
    asnZONSetSeqNamedType[47].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPosition.posCanBeTrusted - (asnbytep)&objPosition);
    asnZONSetSeqNamedType[48].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPosition.carLocatorStatUploadEn - (asnbytep)&objPosition);
    asnZONSetSeqNamedType[49].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPosition.marsCoordinates - (asnbytep)&objPosition);
  }
  {
    ServiceParameter objServiceParameter;
    asnZOLSequence[4].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objServiceParameter.optionalField - (asnbytep)&objServiceParameter);
    asnZONSetSeqNamedType[26].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceParameter.key - (asnbytep)&objServiceParameter);
    asnZONSetSeqNamedType[27].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceParameter.intVal - (asnbytep)&objServiceParameter);
    asnZONSetSeqNamedType[28].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceParameter.stringVal - (asnbytep)&objServiceParameter);
    asnZONSetSeqNamedType[29].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceParameter.boolVal - (asnbytep)&objServiceParameter);
    asnZONSetSeqNamedType[30].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceParameter.timestampVal - (asnbytep)&objServiceParameter);
    asnZONSetSeqNamedType[31].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceParameter.dataVal - (asnbytep)&objServiceParameter);
  }
  {
    ServiceData objServiceData;
    asnZOLSequence[1].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.optionalField - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[3].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.serviceTrigger - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[4].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.serviceParameters - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[5].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.serviceCommand - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[6].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.serviceResult - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[7].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.serviceStatus - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[8].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.message - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[9].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.pois - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[10].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.configuration - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[11].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.vehicleStatus - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[12].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.ota - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[13].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.trip - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[14].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.tripFragments - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[15].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.trackPoints - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[16].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.nevServiceData - (asnbytep)&objServiceData);
    asnZONSetSeqNamedType[17].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceData.eventRule - (asnbytep)&objServiceData);
  }
  {
    TimeStamp objTimeStamp;
    asnZOLSequence[3].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objTimeStamp.optionalField - (asnbytep)&objTimeStamp);
    asnZONSetSeqNamedType[24].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTimeStamp.seconds - (asnbytep)&objTimeStamp);
    asnZONSetSeqNamedType[25].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTimeStamp.milliseconds - (asnbytep)&objTimeStamp);
  }
  {
    asncEcuData__data objasncEcuData__data;
    asnZPSChoiceNamedType[5].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objasncEcuData__data.data - (asnbytep)&objasncEcuData__data);
  }
  {
    DIDData objDIDData;
    asnZONSetSeqNamedType[333].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDIDData.id - (asnbytep)&objDIDData);
    asnZONSetSeqNamedType[334].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDIDData.data - (asnbytep)&objDIDData);
  }
  {
    DTCData objDTCData;
    asnZONSetSeqNamedType[335].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDTCData.id - (asnbytep)&objDTCData);
    asnZONSetSeqNamedType[336].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDTCData.data - (asnbytep)&objDTCData);
  }
  {
    asncconditionss objasncconditionss;
    {
      RuleCondition objRuleCondition;
      asnZSWSetSeqOfNamedType[19].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncconditionss.condition - (asnbytep)&objasncconditionss) - 
                       ((asnbytep)&objRuleCondition.condition - (asnbytep)&objRuleCondition) );
    }
  }
  {
    ECUDiagnostic objECUDiagnostic;
    asnZOLSequence[30].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objECUDiagnostic.optionalField - (asnbytep)&objECUDiagnostic);
    asnZONSetSeqNamedType[245].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objECUDiagnostic.ecuID - (asnbytep)&objECUDiagnostic);
    asnZONSetSeqNamedType[246].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objECUDiagnostic.diagnosticResult - (asnbytep)&objECUDiagnostic);
    asnZONSetSeqNamedType[247].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objECUDiagnostic.dtcs - (asnbytep)&objECUDiagnostic);
    asnZONSetSeqNamedType[248].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objECUDiagnostic.exceptionCode - (asnbytep)&objECUDiagnostic);
  }
  {
    BasicVehicleStatus objBasicVehicleStatus;
    asnZOLSequence[15].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objBasicVehicleStatus.optionalField - (asnbytep)&objBasicVehicleStatus);
    asnZONSetSeqNamedType[71].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBasicVehicleStatus.position - (asnbytep)&objBasicVehicleStatus);
    asnZONSetSeqNamedType[72].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBasicVehicleStatus.speed - (asnbytep)&objBasicVehicleStatus);
    asnZONSetSeqNamedType[73].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBasicVehicleStatus.speedValidity - (asnbytep)&objBasicVehicleStatus);
    asnZONSetSeqNamedType[74].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBasicVehicleStatus.direction - (asnbytep)&objBasicVehicleStatus);
    asnZONSetSeqNamedType[75].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBasicVehicleStatus.engineStatus - (asnbytep)&objBasicVehicleStatus);
    asnZONSetSeqNamedType[76].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBasicVehicleStatus.keyStatus - (asnbytep)&objBasicVehicleStatus);
    asnZONSetSeqNamedType[77].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBasicVehicleStatus.engineBlockedStatus - (asnbytep)&objBasicVehicleStatus);
    asnZONSetSeqNamedType[78].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBasicVehicleStatus.distanceToEmpty - (asnbytep)&objBasicVehicleStatus);
    asnZONSetSeqNamedType[79].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBasicVehicleStatus.usageMode - (asnbytep)&objBasicVehicleStatus);
  }
  {
    VDServiceRequest objVDServiceRequest;
    asnZOLSequence[51].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objVDServiceRequest.optionalField - (asnbytep)&objVDServiceRequest);
    asnZONSetSeqNamedType[353].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objVDServiceRequest.header - (asnbytep)&objVDServiceRequest);
    asnZONSetSeqNamedType[354].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objVDServiceRequest.body - (asnbytep)&objVDServiceRequest);
  }
  {
    asncdidDatas objasncdidDatas;
    {
      DIDData objDIDData;
      asnZSWSetSeqOfNamedType[17].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncdidDatas.id - (asnbytep)&objasncdidDatas) - 
                       ((asnbytep)&objDIDData.id - (asnbytep)&objDIDData) );
    }
  }
  {
    EcuWarningMessages objEcuWarningMessages;
    asnZOCTypeAssignment[26].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objEcuWarningMessages.value - (asnbytep)&objEcuWarningMessages);
  }
  {
    asncAdditionalVehicleStatus__signalss objasncAdditionalVehicleStatus__signalss;
    {
      GenericVehicleSignal objGenericVehicleSignal;
      asnZSWSetSeqOfNamedType[6].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncAdditionalVehicleStatus__signalss.optional - (asnbytep)&objasncAdditionalVehicleStatus__signalss) - 
                       ((asnbytep)&objGenericVehicleSignal.optional - (asnbytep)&objGenericVehicleSignal) );
    }
  }
  {
    asncrecentPositionss objasncrecentPositionss;
    {
      Position objPosition;
      asnZSWSetSeqOfNamedType[7].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncrecentPositionss.optional - (asnbytep)&objasncrecentPositionss) - 
                       ((asnbytep)&objPosition.optional - (asnbytep)&objPosition) );
    }
  }
  {
    TrackPoint objTrackPoint;
    asnZOLSequence[38].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objTrackPoint.optionalField - (asnbytep)&objTrackPoint);
    asnZONSetSeqNamedType[283].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrackPoint.systemTime - (asnbytep)&objTrackPoint);
    asnZONSetSeqNamedType[284].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrackPoint.position - (asnbytep)&objTrackPoint);
    asnZONSetSeqNamedType[285].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrackPoint.speed - (asnbytep)&objTrackPoint);
    asnZONSetSeqNamedType[286].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrackPoint.direction - (asnbytep)&objTrackPoint);
    asnZONSetSeqNamedType[287].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrackPoint.isSVT - (asnbytep)&objTrackPoint);
    asnZONSetSeqNamedType[288].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrackPoint.odometer - (asnbytep)&objTrackPoint);
    asnZONSetSeqNamedType[289].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrackPoint.travelDistanceSinceLastWaypoint - (asnbytep)&objTrackPoint);
    asnZONSetSeqNamedType[290].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrackPoint.fuelConsumptionSinceLastWaypoint - (asnbytep)&objTrackPoint);
    asnZONSetSeqNamedType[291].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrackPoint.electricConsumptionSinceLastSample - (asnbytep)&objTrackPoint);
    asnZONSetSeqNamedType[292].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrackPoint.electricRegenerationSinceLastSample - (asnbytep)&objTrackPoint);
  }
  {
    asncdrPosition objasncdrPosition;
    {
      NEVDRPositionData objNEVDRPositionData;
      asnZPSChoiceNamedType[3].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncdrPosition.longLat - (asnbytep)&objasncdrPosition) - 
                       ((asnbytep)&objNEVDRPositionData.longLat - (asnbytep)&objNEVDRPositionData) );
    }
  }
  {
    asncocetMessage objasncocetMessage;
    asnZPSChoiceNamedType[1].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objasncocetMessage.ocetMessage - (asnbytep)&objasncocetMessage);
  }
  {
    VehicleStatus objVehicleStatus;
    asnZOLSequence[14].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objVehicleStatus.optionalField - (asnbytep)&objVehicleStatus);
    asnZONSetSeqNamedType[64].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objVehicleStatus.basicVehicleStatus - (asnbytep)&objVehicleStatus);
    asnZONSetSeqNamedType[65].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objVehicleStatus.additionalVehicleStatus - (asnbytep)&objVehicleStatus);
    asnZONSetSeqNamedType[66].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objVehicleStatus.msd - (asnbytep)&objVehicleStatus);
    asnZONSetSeqNamedType[67].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objVehicleStatus.temStatus - (asnbytep)&objVehicleStatus);
    asnZONSetSeqNamedType[68].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objVehicleStatus.diagnostics - (asnbytep)&objVehicleStatus);
    asnZONSetSeqNamedType[69].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objVehicleStatus.theftNotification - (asnbytep)&objVehicleStatus);
    asnZONSetSeqNamedType[70].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objVehicleStatus.notification - (asnbytep)&objVehicleStatus);
  }
  {
    asncitemss objasncitemss;
    {
      ConfigurationItem objConfigurationItem;
      asnZSWSetSeqOfNamedType[3].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncitemss.name - (asnbytep)&objasncitemss) - 
                       ((asnbytep)&objConfigurationItem.name - (asnbytep)&objConfigurationItem) );
    }
  }
  {
    asncOEMMSD__signalss objasncOEMMSD__signalss;
    {
      GenericVehicleSignal objGenericVehicleSignal;
      asnZSWSetSeqOfNamedType[8].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncOEMMSD__signalss.optional - (asnbytep)&objasncOEMMSD__signalss) - 
                       ((asnbytep)&objGenericVehicleSignal.optional - (asnbytep)&objGenericVehicleSignal) );
    }
  }
  {
    ConfigurationItem objConfigurationItem;
    asnZONSetSeqNamedType[62].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objConfigurationItem.name - (asnbytep)&objConfigurationItem);
    asnZONSetSeqNamedType[63].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objConfigurationItem.parameters - (asnbytep)&objConfigurationItem);
  }
  {
    asncserviceParameterss objasncserviceParameterss;
    {
      ServiceParameter objServiceParameter;
      asnZSWSetSeqOfNamedType[0].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncserviceParameterss.optional - (asnbytep)&objasncserviceParameterss) - 
                       ((asnbytep)&objServiceParameter.optional - (asnbytep)&objServiceParameter) );
    }
  }
  {
    asncdtcss objasncdtcss;
    {
      DiagnosticTroubleCode objDiagnosticTroubleCode;
      asnZSWSetSeqOfNamedType[9].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncdtcss.optional - (asnbytep)&objasncdtcss) - 
                       ((asnbytep)&objDiagnosticTroubleCode.optional - (asnbytep)&objDiagnosticTroubleCode) );
    }
  }
  {
    EventRule objEventRule;
    asnZOLSequence[47].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objEventRule.optionalField - (asnbytep)&objEventRule);
    asnZONSetSeqNamedType[337].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objEventRule.ruleId - (asnbytep)&objEventRule);
    asnZONSetSeqNamedType[338].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objEventRule.startTime - (asnbytep)&objEventRule);
    asnZONSetSeqNamedType[339].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objEventRule.endTime - (asnbytep)&objEventRule);
    asnZONSetSeqNamedType[340].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objEventRule.conditions - (asnbytep)&objEventRule);
    asnZONSetSeqNamedType[341].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objEventRule.interval - (asnbytep)&objEventRule);
    asnZONSetSeqNamedType[342].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objEventRule.action - (asnbytep)&objEventRule);
  }
  {
    asncnoDiagData objasncnoDiagData;
    asnZPSChoiceNamedType[4].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objasncnoDiagData.noDiagData - (asnbytep)&objasncnoDiagData);
  }
  {
    Notification objNotification;
    asnZOLSequence[35].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objNotification.optionalField - (asnbytep)&objNotification);
    asnZONSetSeqNamedType[264].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNotification.reason - (asnbytep)&objNotification);
    asnZONSetSeqNamedType[265].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNotification.time - (asnbytep)&objNotification);
    asnZONSetSeqNamedType[266].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNotification.parameters - (asnbytep)&objNotification);
  }
  {
    EcuData objEcuData;
    asnZOCTypeAssignment[48].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objEcuData.value - (asnbytep)&objEcuData);
  }
  {
    DiagnosticTroubleCode objDiagnosticTroubleCode;
    asnZOLSequence[31].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objDiagnosticTroubleCode.optionalField - (asnbytep)&objDiagnosticTroubleCode);
    asnZONSetSeqNamedType[249].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDiagnosticTroubleCode.dtc - (asnbytep)&objDiagnosticTroubleCode);
    asnZONSetSeqNamedType[250].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDiagnosticTroubleCode.status - (asnbytep)&objDiagnosticTroubleCode);
    asnZONSetSeqNamedType[251].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDiagnosticTroubleCode.failureCount - (asnbytep)&objDiagnosticTroubleCode);
    asnZONSetSeqNamedType[252].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDiagnosticTroubleCode.lastFail - (asnbytep)&objDiagnosticTroubleCode);
    asnZONSetSeqNamedType[253].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDiagnosticTroubleCode.firtFail - (asnbytep)&objDiagnosticTroubleCode);
    asnZONSetSeqNamedType[254].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDiagnosticTroubleCode.firstFailureOdometer - (asnbytep)&objDiagnosticTroubleCode);
    asnZONSetSeqNamedType[255].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDiagnosticTroubleCode.firstFailureBatteryVoltage - (asnbytep)&objDiagnosticTroubleCode);
    asnZONSetSeqNamedType[256].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDiagnosticTroubleCode.firstFailureVehicleSpeed - (asnbytep)&objDiagnosticTroubleCode);
  }
  {
    RunningStatus objRunningStatus;
    asnZOLSequence[21].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.optionalField - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[136].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.engineOilLevelStatus - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[137].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.engineOilTemperature - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[138].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.engineOilPressureWarning - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[139].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.engineCoolantTemperature - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[140].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.engineCoolantTemperatureValidity - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[141].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.engineCoolantLevelStatus - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[142].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.fuelLevel - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[143].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.fuelLevelStatus - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[144].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.aveFuelConsumption - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[145].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.aveFuelConsumptionInLatestDrivingCycle - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[146].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.avgSpeed - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[147].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.tripMeter1 - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[148].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.tripMeter2 - (asnbytep)&objRunningStatus);
    asnZONSetSeqNamedType[149].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRunningStatus.bulbStatus - (asnbytep)&objRunningStatus);
  }
  {
    NEVDRVehiclePosition objNEVDRVehiclePosition;
    asnZOCTypeAssignment[44].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVDRVehiclePosition.value - (asnbytep)&objNEVDRVehiclePosition);
  }
  {
    RequestBody objRequestBody;
    asnZOLSequence[0].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objRequestBody.optionalField - (asnbytep)&objRequestBody);
    asnZONSetSeqNamedType[0].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRequestBody.serviceId - (asnbytep)&objRequestBody);
    asnZONSetSeqNamedType[1].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRequestBody.serviceData - (asnbytep)&objRequestBody);
    asnZONSetSeqNamedType[2].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRequestBody.seq - (asnbytep)&objRequestBody);
  }
  {
    Trip objTrip;
    asnZOLSequence[37].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.optionalField - (asnbytep)&objTrip);
    asnZONSetSeqNamedType[271].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.tripId - (asnbytep)&objTrip);
    asnZONSetSeqNamedType[272].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.startTime - (asnbytep)&objTrip);
    asnZONSetSeqNamedType[273].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.startOdometer - (asnbytep)&objTrip);
    asnZONSetSeqNamedType[274].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.fuelConsumption - (asnbytep)&objTrip);
    asnZONSetSeqNamedType[275].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.traveledDistance - (asnbytep)&objTrip);
    asnZONSetSeqNamedType[276].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.trackpoints - (asnbytep)&objTrip);
    asnZONSetSeqNamedType[277].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.waypoints - (asnbytep)&objTrip);
    asnZONSetSeqNamedType[278].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.avgSpeed - (asnbytep)&objTrip);
    asnZONSetSeqNamedType[279].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.endTime - (asnbytep)&objTrip);
    asnZONSetSeqNamedType[280].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.endOdometer - (asnbytep)&objTrip);
    asnZONSetSeqNamedType[281].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.electricConsumption - (asnbytep)&objTrip);
    asnZONSetSeqNamedType[282].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTrip.electricRegeneration - (asnbytep)&objTrip);
  }
  {
    ECUDiagnostics objECUDiagnostics;
    asnZOCTypeAssignment[36].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objECUDiagnostics.value - (asnbytep)&objECUDiagnostics);
  }
  {
    ServiceResult objServiceResult;
    asnZOLSequence[5].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objServiceResult.optionalField - (asnbytep)&objServiceResult);
    asnZONSetSeqNamedType[32].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceResult.operationSucceeded - (asnbytep)&objServiceResult);
    asnZONSetSeqNamedType[33].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceResult.error - (asnbytep)&objServiceResult);
  }
  {
    RuleCondition objRuleCondition;
    asnZONSetSeqNamedType[343].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRuleCondition.condition - (asnbytep)&objRuleCondition);
  }
  {
    asnctrackPointss objasnctrackPointss;
    {
      TrackPoint objTrackPoint;
      asnZSWSetSeqOfNamedType[15].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasnctrackPointss.optional - (asnbytep)&objasnctrackPointss) - 
                       ((asnbytep)&objTrackPoint.optional - (asnbytep)&objTrackPoint) );
    }
  }
  {
    asncdtcDatas objasncdtcDatas;
    {
      DTCData objDTCData;
      asnZSWSetSeqOfNamedType[18].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncdtcDatas.id - (asnbytep)&objasncdtcDatas) - 
                       ((asnbytep)&objDTCData.id - (asnbytep)&objDTCData) );
    }
  }
  {
    Error objError;
    asnZOLSequence[6].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objError.optionalField - (asnbytep)&objError);
    asnZONSetSeqNamedType[34].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objError.code - (asnbytep)&objError);
    asnZONSetSeqNamedType[35].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objError.vehicleErrorCode - (asnbytep)&objError);
    asnZONSetSeqNamedType[36].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objError.message - (asnbytep)&objError);
  }
  {
    NEVCoordinatesLongLat objNEVCoordinatesLongLat;
    asnZONSetSeqNamedType[321].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVCoordinatesLongLat.longitude - (asnbytep)&objNEVCoordinatesLongLat);
    asnZONSetSeqNamedType[322].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objNEVCoordinatesLongLat.latitude - (asnbytep)&objNEVCoordinatesLongLat);
  }
  {
    DrivingBehaviourStatus objDrivingBehaviourStatus;
    asnZOLSequence[23].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingBehaviourStatus.optionalField - (asnbytep)&objDrivingBehaviourStatus);
    asnZONSetSeqNamedType[179].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingBehaviourStatus.brakePedalDepressed - (asnbytep)&objDrivingBehaviourStatus);
    asnZONSetSeqNamedType[180].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingBehaviourStatus.brakePedalDepressedValidity - (asnbytep)&objDrivingBehaviourStatus);
    asnZONSetSeqNamedType[181].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingBehaviourStatus.engineSpeed - (asnbytep)&objDrivingBehaviourStatus);
    asnZONSetSeqNamedType[182].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingBehaviourStatus.engineSpeedValidity - (asnbytep)&objDrivingBehaviourStatus);
    asnZONSetSeqNamedType[183].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingBehaviourStatus.transimissionGearPostion - (asnbytep)&objDrivingBehaviourStatus);
    asnZONSetSeqNamedType[184].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objDrivingBehaviourStatus.cruiseControlStatus - (asnbytep)&objDrivingBehaviourStatus);
  }
  {
    ECUData objECUData;
    asnZONSetSeqNamedType[329].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objECUData.ecu - (asnbytep)&objECUData);
    asnZONSetSeqNamedType[330].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objECUData.diagnosticNumber - (asnbytep)&objECUData);
    asnZONSetSeqNamedType[331].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objECUData.didData - (asnbytep)&objECUData);
    asnZONSetSeqNamedType[332].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objECUData.dtcData - (asnbytep)&objECUData);
  }
  {
    PostAddress objPostAddress;
    asnZOLSequence[11].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objPostAddress.optionalField - (asnbytep)&objPostAddress);
    asnZONSetSeqNamedType[54].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPostAddress.street - (asnbytep)&objPostAddress);
    asnZONSetSeqNamedType[55].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPostAddress.houseNumber - (asnbytep)&objPostAddress);
    asnZONSetSeqNamedType[56].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPostAddress.city - (asnbytep)&objPostAddress);
    asnZONSetSeqNamedType[57].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPostAddress.region - (asnbytep)&objPostAddress);
    asnZONSetSeqNamedType[58].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPostAddress.postcode - (asnbytep)&objPostAddress);
    asnZONSetSeqNamedType[59].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objPostAddress.country - (asnbytep)&objPostAddress);
  }
  {
    GenericVehicleSignal objGenericVehicleSignal;
    asnZOLSequence[25].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objGenericVehicleSignal.optionalField - (asnbytep)&objGenericVehicleSignal);
    asnZONSetSeqNamedType[187].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objGenericVehicleSignal.key - (asnbytep)&objGenericVehicleSignal);
    asnZONSetSeqNamedType[188].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objGenericVehicleSignal.collectTime - (asnbytep)&objGenericVehicleSignal);
    asnZONSetSeqNamedType[189].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objGenericVehicleSignal.value - (asnbytep)&objGenericVehicleSignal);
    asnZONSetSeqNamedType[190].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objGenericVehicleSignal.stringVal - (asnbytep)&objGenericVehicleSignal);
    asnZONSetSeqNamedType[191].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objGenericVehicleSignal.boolVal - (asnbytep)&objGenericVehicleSignal);
    asnZONSetSeqNamedType[192].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objGenericVehicleSignal.timestampVal - (asnbytep)&objGenericVehicleSignal);
    asnZONSetSeqNamedType[193].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objGenericVehicleSignal.dataVal - (asnbytep)&objGenericVehicleSignal);
  }
  {
    asncpoiss objasncpoiss;
    {
      PointOfInterest objPointOfInterest;
      asnZSWSetSeqOfNamedType[1].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncpoiss.optional - (asnbytep)&objasncpoiss) - 
                       ((asnbytep)&objPointOfInterest.optional - (asnbytep)&objPointOfInterest) );
    }
  }
  {
    CarConfig objCarConfig;
    asnZOLSequence[27].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objCarConfig.optionalField - (asnbytep)&objCarConfig);
    asnZONSetSeqNamedType[214].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objCarConfig.heatedFrontSeats - (asnbytep)&objCarConfig);
    asnZONSetSeqNamedType[215].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objCarConfig.parkingClimateLevel - (asnbytep)&objCarConfig);
    asnZONSetSeqNamedType[216].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objCarConfig.heatedSteeringWheel - (asnbytep)&objCarConfig);
  }
  {
    BatteryStatus objBatteryStatus;
    asnZOLSequence[20].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objBatteryStatus.optionalField - (asnbytep)&objBatteryStatus);
    asnZONSetSeqNamedType[132].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBatteryStatus.stateOfCharge - (asnbytep)&objBatteryStatus);
    asnZONSetSeqNamedType[133].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBatteryStatus.chargeLevel - (asnbytep)&objBatteryStatus);
    asnZONSetSeqNamedType[134].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBatteryStatus.stateOfHealth - (asnbytep)&objBatteryStatus);
    asnZONSetSeqNamedType[135].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objBatteryStatus.voltage - (asnbytep)&objBatteryStatus);
  }
  {
    ElectricVehicleStatus objElectricVehicleStatus;
    asnZOLSequence[26].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.optionalField - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[194].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.isCharging - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[195].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.isPluggedIn - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[196].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.stateOfCharge - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[197].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.chargeLevel - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[198].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.timeToFullyCharged - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[199].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.statusOfChargerConnection - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[200].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.chargerState - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[201].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.distanceToEmptyOnBatteryOnly - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[202].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.ems48VSOC - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[203].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.emsHVRBSError - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[204].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.emsRBSModeDisplay - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[205].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.emsOVPActive - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[206].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.ems48vPackTemp1 - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[207].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.ems48vPackTemp2 - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[208].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.emsBMSLBuildSwVersion - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[209].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.emsCBRemainingLife - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[210].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.chargeHvSts - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[211].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.ptReady - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[212].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.averPowerConsumption - (asnbytep)&objElectricVehicleStatus);
    asnZONSetSeqNamedType[213].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objElectricVehicleStatus.chargeSts - (asnbytep)&objElectricVehicleStatus);
  }
  {
    EventAction objEventAction;
    asnZOLSequence[49].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objEventAction.optionalField - (asnbytep)&objEventAction);
    asnZONSetSeqNamedType[344].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objEventAction.triggerTimes - (asnbytep)&objEventAction);
    asnZONSetSeqNamedType[345].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objEventAction.notifyInterval - (asnbytep)&objEventAction);
  }
  {
    OEMMSD objOEMMSD;
    asnZOLSequence[28].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.optionalField - (asnbytep)&objOEMMSD);
    asnZONSetSeqNamedType[217].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.automaticActivation - (asnbytep)&objOEMMSD);
    asnZONSetSeqNamedType[218].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.testCall - (asnbytep)&objOEMMSD);
    asnZONSetSeqNamedType[219].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.position - (asnbytep)&objOEMMSD);
    asnZONSetSeqNamedType[220].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.vehicleType - (asnbytep)&objOEMMSD);
    asnZONSetSeqNamedType[221].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.vin - (asnbytep)&objOEMMSD);
    asnZONSetSeqNamedType[222].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.fuelType - (asnbytep)&objOEMMSD);
    asnZONSetSeqNamedType[223].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.direction - (asnbytep)&objOEMMSD);
    asnZONSetSeqNamedType[224].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.numberOfPassengers - (asnbytep)&objOEMMSD);
    asnZONSetSeqNamedType[225].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.recentPositions - (asnbytep)&objOEMMSD);
    asnZONSetSeqNamedType[226].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.speed - (asnbytep)&objOEMMSD);
    asnZONSetSeqNamedType[227].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.speedValidity - (asnbytep)&objOEMMSD);
    asnZONSetSeqNamedType[228].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOEMMSD.signals - (asnbytep)&objOEMMSD);
  }
  {
    asncattributess objasncattributess;
    {
      ServiceParameter objServiceParameter;
      asnZSWSetSeqOfNamedType[2].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncattributess.optional - (asnbytep)&objasncattributess) - 
                       ((asnbytep)&objServiceParameter.optional - (asnbytep)&objServiceParameter) );
    }
  }
  {
    asncECUDiagnosticss objasncECUDiagnosticss;
    {
      ECUDiagnostic objECUDiagnostic;
      asnZSWSetSeqOfNamedType[10].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasncECUDiagnosticss.optional - (asnbytep)&objasncECUDiagnosticss) - 
                       ((asnbytep)&objECUDiagnostic.optional - (asnbytep)&objECUDiagnostic) );
    }
  }
  {
    asnctripFragmentss objasnctripFragmentss;
    {
      TripFragment objTripFragment;
      asnZSWSetSeqOfNamedType[14].apiValueOffset = 
                     (asnMAXUINT)(
                       ((asnbytep)&objasnctripFragmentss.optional - (asnbytep)&objasnctripFragmentss) - 
                       ((asnbytep)&objTripFragment.optional - (asnbytep)&objTripFragment) );
    }
  }
  {
    RequestHeader objRequestHeader;
    asnZOLSequence[50].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objRequestHeader.optionalField - (asnbytep)&objRequestHeader);
    asnZONSetSeqNamedType[346].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRequestHeader.requestid - (asnbytep)&objRequestHeader);
    asnZONSetSeqNamedType[347].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRequestHeader.timeStamp - (asnbytep)&objRequestHeader);
    asnZONSetSeqNamedType[348].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRequestHeader.eventId - (asnbytep)&objRequestHeader);
    asnZONSetSeqNamedType[349].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRequestHeader.creatorId - (asnbytep)&objRequestHeader);
    asnZONSetSeqNamedType[350].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRequestHeader.messageTTL - (asnbytep)&objRequestHeader);
    asnZONSetSeqNamedType[351].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRequestHeader.requestType - (asnbytep)&objRequestHeader);
    asnZONSetSeqNamedType[352].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objRequestHeader.ackRequired - (asnbytep)&objRequestHeader);
  }
  {
    TheftNotification objTheftNotification;
    asnZONSetSeqNamedType[262].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTheftNotification.time - (asnbytep)&objTheftNotification);
    asnZONSetSeqNamedType[263].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objTheftNotification.activated - (asnbytep)&objTheftNotification);
  }
  {
    ServiceTrigger objServiceTrigger;
    asnZOLSequence[2].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objServiceTrigger.optionalField - (asnbytep)&objServiceTrigger);
    asnZONSetSeqNamedType[18].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceTrigger.scheduledTime - (asnbytep)&objServiceTrigger);
    asnZONSetSeqNamedType[19].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceTrigger.recurrentOperation - (asnbytep)&objServiceTrigger);
    asnZONSetSeqNamedType[20].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceTrigger.duration - (asnbytep)&objServiceTrigger);
    asnZONSetSeqNamedType[21].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceTrigger.interval - (asnbytep)&objServiceTrigger);
    asnZONSetSeqNamedType[22].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceTrigger.occurs - (asnbytep)&objServiceTrigger);
    asnZONSetSeqNamedType[23].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objServiceTrigger.endTime - (asnbytep)&objServiceTrigger);
  }
  {
    OTA objOTA;
    asnZOLSequence[36].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objOTA.optionalField - (asnbytep)&objOTA);
    asnZONSetSeqNamedType[267].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOTA.swModel - (asnbytep)&objOTA);
    asnZONSetSeqNamedType[268].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOTA.swVersion - (asnbytep)&objOTA);
    asnZONSetSeqNamedType[269].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOTA.downloadUrl - (asnbytep)&objOTA);
    asnZONSetSeqNamedType[270].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objOTA.verificationCode - (asnbytep)&objOTA);
  }
  {
    MaintenanceStatus objMaintenanceStatus;
    asnZOLSequence[19].apiOptionalOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.optionalField - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[115].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.mainBatteryStatus - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[116].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.tyreStatusDriver - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[117].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.tyreStatusPassenger - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[118].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.tyreStatusDriverRear - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[119].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.tyreStatusPassengerRear - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[120].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.tyrePreWarningDriver - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[121].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.tyrePreWarningPassenger - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[122].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.tyrePreWarningDriverRear - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[123].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.tyrePreWarningPassengerRear - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[124].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.engineHrsToService - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[125].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.distanceToService - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[126].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.daysToService - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[127].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.serviceWarningStatus - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[128].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.serviceWarningTrigger - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[129].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.odometer - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[130].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.brakeFluidLevelStatus - (asnbytep)&objMaintenanceStatus);
    asnZONSetSeqNamedType[131].apiValueOffset = 
            (asnMAXUINT)((asnbytep)&objMaintenanceStatus.washerFluidLevelStatus - (asnbytep)&objMaintenanceStatus);
  }
}
#endif /* asnNonPodOffsetof */
