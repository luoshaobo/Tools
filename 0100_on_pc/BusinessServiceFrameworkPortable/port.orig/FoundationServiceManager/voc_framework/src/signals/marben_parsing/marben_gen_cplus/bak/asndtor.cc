/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

asndtor.cc: C++ API destructor methods

Generated by ASNSDK TCE-C++ ASN.1 Compiler v6.0 - REF_8.55 - REF_8.41

===========================================================================
*/

/**@file
 * C++ API destructor methods
 */

#include <asn.h>

namespace asn_wrapper
{


/**
 *    TypeAssignment : RequestBody
 *    Class destructor
 */
#ifndef asnCodBalloc
RequestBody::~RequestBody()
{
   delete(serviceData);
}
#endif

/**
 *    TypeAssignment : RequestHeader
 *    Class destructor
 */
#ifndef asnCodBalloc
RequestHeader::~RequestHeader()
{
   delete(timeStamp);
   delete(eventId);
}
#endif

/**
 *    TypeAssignment : TimeStamp
 *    Class destructor
 */
#ifndef asnCodBalloc
TimeStamp::~TimeStamp()
{
}
#endif

/**
 *    TypeAssignment : VDServiceRequest
 *    Class destructor
 */
#ifndef asnCodBalloc
VDServiceRequest::~VDServiceRequest()
{
   delete(header);
   delete(body);
}
#endif

/**
 *    TypeAssignment : AssignmentData
 *    Class destructor
 */
#ifndef asnCodBalloc
asncurlss::~asncurlss()
{
}
#endif

#ifndef asnCodBalloc
AssignmentData::~AssignmentData()
{
}
#endif

/**
 *    TypeAssignment : AssignmentFileInfo
 *    Class destructor
 */
#ifndef asnCodBalloc
AssignmentFileInfo::~AssignmentFileInfo()
{
}
#endif

/**
 *    TypeAssignment : AssignmentValidation
 *    Class destructor
 */
#ifndef asnCodBalloc
asncpartidentifierss::~asncpartidentifierss()
{
}
#endif

#ifndef asnCodBalloc
AssignmentValidation::~AssignmentValidation()
{
}
#endif

/**
 *    TypeAssignment : AuthorizationStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
AuthorizationStatus::~AuthorizationStatus()
{
}
#endif

/**
 *    TypeAssignment : AvailableAssignment
 *    Class destructor
 */
#ifndef asnCodBalloc
AvailableAssignment::~AvailableAssignment()
{
}
#endif

/**
 *    TypeAssignment : AvailableAssignmentRequest
 *    Class destructor
 */
#ifndef asnCodBalloc
AvailableAssignmentRequest::~AvailableAssignmentRequest()
{
   delete(languageSetting);
}
#endif

/**
 *    TypeAssignment : ClientConfSyncRequest
 *    Class destructor
 */
#ifndef asnCodBalloc
asncecuInventorys::~asncecuInventorys()
{
}
#endif

#ifndef asnCodBalloc
ClientConfSyncRequest::~ClientConfSyncRequest()
{
}
#endif

/**
 *    TypeAssignment : ClientHmiVehicleSettings
 *    Class destructor
 */
#ifndef asnCodBalloc
ClientHmiVehicleSettings::~ClientHmiVehicleSettings()
{
}
#endif

/**
 *    TypeAssignment : DiagnosticCommand
 *    Class destructor
 */
#ifndef asnCodBalloc
DiagnosticCommand::~DiagnosticCommand()
{
}
#endif

/**
 *    TypeAssignment : EcuExceptionReport
 *    Class destructor
 */
#ifndef asnCodBalloc
asncexceptionReportss::~asncexceptionReportss()
{
   delete(exceptionMessage);
}
#endif

#ifndef asnCodBalloc
EcuExceptionReport::~EcuExceptionReport()
{
}
#endif

/**
 *    TypeAssignment : EcuInstruction
 *    Class destructor
 */
#ifndef asnCodBalloc
asncsoftwarePartInstallationInstructionss::~asncsoftwarePartInstallationInstructionss()
{
}
#endif

#ifndef asnCodBalloc
EcuInstruction::~EcuInstruction()
{
}
#endif

/**
 *    TypeAssignment : EcuInventory
 *    Class destructor
 */
#ifndef asnCodBalloc
asncvalidationKeyss::~asncvalidationKeyss()
{
}
#endif

#ifndef asnCodBalloc
EcuInventory::~EcuInventory()
{
}
#endif

/**
 *    TypeAssignment : EcuSummary
 *    Class destructor
 */
#ifndef asnCodBalloc
asncsoftwarePartSummaryss::~asncsoftwarePartSummaryss()
{
}
#endif

#ifndef asnCodBalloc
EcuSummary::~EcuSummary()
{
}
#endif

/**
 *    TypeAssignment : EcusAndPartNumber
 *    Class destructor
 */
#ifndef asnCodBalloc
EcusAndPartNumber::~EcusAndPartNumber()
{
}
#endif

/**
 *    TypeAssignment : ExceptionMessage
 *    Class destructor
 */
#ifndef asnCodBalloc
ExceptionMessage::~ExceptionMessage()
{
}
#endif

/**
 *    TypeAssignment : ExceptionReport
 *    Class destructor
 */
#ifndef asnCodBalloc
ExceptionReport::~ExceptionReport()
{
   delete(exceptionMessage);
}
#endif

/**
 *    TypeAssignment : ExecutionTrigger
 *    Class destructor
 */
#ifndef asnCodBalloc
ExecutionTrigger::~ExecutionTrigger()
{
   delete(uds);
   delete(time);
   delete(drivingCycle);
}
#endif

/**
 *    TypeAssignment : FOTA
 *    Class destructor
 */
#ifndef asnCodBalloc
FOTA::~FOTA()
{
   delete(clientConfSyncRequest);
   delete(inventoryInstruction);
   delete(availableAssignmentRequest);
   delete(availableAssignment);
   delete(installationInstruction);
   delete(installationSummary);
   delete(ecuExceptionReport);
   delete(clientHmiVehicleSettings);
   delete(assignmentData);
   delete(assignmentNotification);
   delete(otaAssignmentFileInfo);
}
#endif

/**
 *    TypeAssignment : FotaAssignmentNotification
 *    Class destructor
 */
#ifndef asnCodBalloc
asncserviceParamss::~asncserviceParamss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
FotaAssignmentNotification::~FotaAssignmentNotification()
{
}
#endif

/**
 *    TypeAssignment : InstallationInstruction
 *    Class destructor
 */
#ifndef asnCodBalloc
asncinstructionss::~asncinstructionss()
{
}
#endif

#ifndef asnCodBalloc
InstallationInstruction::~InstallationInstruction()
{
}
#endif

/**
 *    TypeAssignment : InstallationSummary
 *    Class destructor
 */
#ifndef asnCodBalloc
asncecuSummaryss::~asncecuSummaryss()
{
}
#endif

#ifndef asnCodBalloc
InstallationSummary::~InstallationSummary()
{
}
#endif

/**
 *    TypeAssignment : Instruction
 *    Class destructor
 */
#ifndef asnCodBalloc
asncInstruction__ecuInstructionss::~asncInstruction__ecuInstructionss()
{
}
#endif

#ifndef asnCodBalloc
asncassignmentValidationss::~asncassignmentValidationss()
{
}
#endif

#ifndef asnCodBalloc
Instruction::~Instruction()
{
}
#endif

/**
 *    TypeAssignment : InventoryInstruction
 *    Class destructor
 */
#ifndef asnCodBalloc
asncInventoryInstruction__ecuInstructionss::~asncInventoryInstruction__ecuInstructionss()
{
}
#endif

#ifndef asnCodBalloc
InventoryInstruction::~InventoryInstruction()
{
}
#endif

/**
 *    TypeAssignment : LanguageSetting
 *    Class destructor
 */
#ifndef asnCodBalloc
LanguageSetting::~LanguageSetting()
{
}
#endif

/**
 *    TypeAssignment : Ma
 *    Class destructor
 */
#ifndef asnCodBalloc
Ma::~Ma()
{
}
#endif

/**
 *    TypeAssignment : MaSetting
 *    Class destructor
 */
#ifndef asnCodBalloc
MaSetting::~MaSetting()
{
   delete(authorizationStatus);
}
#endif

/**
 *    TypeAssignment : MaSynchronization
 *    Class destructor
 */
#ifndef asnCodBalloc
asncremoveMass::~asncremoveMass()
{
}
#endif

#ifndef asnCodBalloc
asncnewMass::~asncnewMass()
{
   delete(telematicsParameters);
   delete(stopCondition);
   delete(authorizationStatus);
   delete(executionTrigger);
}
#endif

#ifndef asnCodBalloc
asncMaSynchronization__serviceParameterss::~asncMaSynchronization__serviceParameterss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
MaSynchronization::~MaSynchronization()
{
}
#endif

/**
 *    TypeAssignment : MaSynchronizationReq
 *    Class destructor
 */
#ifndef asnCodBalloc
asncinstalledMas::~asncinstalledMas()
{
}
#endif

#ifndef asnCodBalloc
asncMaSynchronizationReq__serviceParameterss::~asncMaSynchronizationReq__serviceParameterss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
MaSynchronizationReq::~MaSynchronizationReq()
{
}
#endif

/**
 *    TypeAssignment : Mdp
 *    Class destructor
 */
#ifndef asnCodBalloc
Mdp::~Mdp()
{
   delete(ma);
}
#endif

/**
 *    TypeAssignment : MeasurementAssignment
 *    Class destructor
 */
#ifndef asnCodBalloc
asncecusAndPartNumberss::~asncecusAndPartNumberss()
{
}
#endif

#ifndef asnCodBalloc
asncdiagnosticCommands::~asncdiagnosticCommands()
{
}
#endif

#ifndef asnCodBalloc
asncMeasurementAssignment__serviceParameterss::~asncMeasurementAssignment__serviceParameterss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
MeasurementAssignment::~MeasurementAssignment()
{
   delete(telematicsParameters);
   delete(stopCondition);
   delete(authorizationStatus);
   delete(executionTrigger);
}
#endif

/**
 *    TypeAssignment : MeasurementDataPackage
 *    Class destructor
 */
#ifndef asnCodBalloc
asncMeasurementDataPackage__serviceParameterss::~asncMeasurementDataPackage__serviceParameterss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
MeasurementDataPackage::~MeasurementDataPackage()
{
   delete(telematicsParameters);
   delete(mdp);
}
#endif

/**
 *    TypeAssignment : OtaAssignmentFileInfo
 *    Class destructor
 */
#ifndef asnCodBalloc
asncassignFileInfoss::~asncassignFileInfoss()
{
}
#endif

#ifndef asnCodBalloc
OtaAssignmentFileInfo::~OtaAssignmentFileInfo()
{
}
#endif

/**
 *    TypeAssignment : RVDC
 *    Class destructor
 */
#ifndef asnCodBalloc
RVDC::~RVDC()
{
   delete(rvdcSetting);
   delete(assignmentNotification);
   delete(maSynchronizationReq);
   delete(maSynchronization);
   delete(exceptionHandling);
   delete(measurementDataPackage);
}
#endif

/**
 *    TypeAssignment : RvdcAssignmentNotification
 *    Class destructor
 */
#ifndef asnCodBalloc
RvdcAssignmentNotification::~RvdcAssignmentNotification()
{
}
#endif

/**
 *    TypeAssignment : RvdcExceptionHandling
 *    Class destructor
 */
#ifndef asnCodBalloc
RvdcExceptionHandling::~RvdcExceptionHandling()
{
}
#endif

/**
 *    TypeAssignment : RvdcForcedSetting
 *    Class destructor
 */
#ifndef asnCodBalloc
RvdcForcedSetting::~RvdcForcedSetting()
{
}
#endif

/**
 *    TypeAssignment : RvdcSetting
 *    Class destructor
 */
#ifndef asnCodBalloc
asncRvdcSetting__serviceParameterss::~asncRvdcSetting__serviceParameterss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
RvdcSetting::~RvdcSetting()
{
   delete(maSetting);
   delete(vehicleSetting);
   delete(languageSetting);
   delete(forcedSetting);
}
#endif

/**
 *    TypeAssignment : RvdcVehicleSetting
 *    Class destructor
 */
#ifndef asnCodBalloc
RvdcVehicleSetting::~RvdcVehicleSetting()
{
}
#endif

/**
 *    TypeAssignment : SoftwarePartInstallationInstruction
 *    Class destructor
 */
#ifndef asnCodBalloc
SoftwarePartInstallationInstruction::~SoftwarePartInstallationInstruction()
{
}
#endif

/**
 *    TypeAssignment : SoftwarePartSummary
 *    Class destructor
 */
#ifndef asnCodBalloc
SoftwarePartSummary::~SoftwarePartSummary()
{
}
#endif

/**
 *    TypeAssignment : StopCondition
 *    Class destructor
 */
#ifndef asnCodBalloc
StopCondition::~StopCondition()
{
}
#endif

/**
 *    TypeAssignment : TelematicsParameters
 *    Class destructor
 */
#ifndef asnCodBalloc
TelematicsParameters::~TelematicsParameters()
{
}
#endif

/**
 *    TypeAssignment : Trigger
 *    Class destructor
 */
#ifndef asnCodBalloc
Trigger::~Trigger()
{
}
#endif

/**
 *    TypeAssignment : UDS
 *    Class destructor
 */
#ifndef asnCodBalloc
asncdiagnosticCommandss::~asncdiagnosticCommandss()
{
}
#endif

#ifndef asnCodBalloc
UDS::~UDS()
{
}
#endif

/**
 *    TypeAssignment : ValidationKey
 *    Class destructor
 */
#ifndef asnCodBalloc
asncpartIdentifierss::~asncpartIdentifierss()
{
}
#endif

#ifndef asnCodBalloc
ValidationKey::~ValidationKey()
{
}
#endif

/**
 *    TypeAssignment : DIDData
 *    Class destructor
 */
#ifndef asnCodBalloc
DIDData::~DIDData()
{
}
#endif

/**
 *    TypeAssignment : DTCData
 *    Class destructor
 */
#ifndef asnCodBalloc
DTCData::~DTCData()
{
}
#endif

/**
 *    TypeAssignment : ECUData
 *    Class destructor
 */
#ifndef asnCodBalloc
asncdidDatas::~asncdidDatas()
{
}
#endif

#ifndef asnCodBalloc
asncdtcDatas::~asncdtcDatas()
{
}
#endif

#ifndef asnCodBalloc
ECUData::~ECUData()
{
}
#endif

/**
 *    TypeAssignment : EcuData
 *    Class destructor
 */
#ifndef asnCodBalloc
EcuData__C::~EcuData__C()
{
}
#endif

#ifndef asnCodBalloc
asncnoDiagData::~asncnoDiagData()
{
}
#endif

#ifndef asnCodBalloc
asncdatas::~asncdatas()
{
}
#endif

#ifndef asnCodBalloc
asncEcuData__data::~asncEcuData__data()
{
}
#endif

#ifndef asnCodBalloc
EcuData::~EcuData()
{
      delete(value);
}
#endif

/**
 *    TypeAssignment : NEVCoordinatesLongLat
 *    Class destructor
 */
#ifndef asnCodBalloc
NEVCoordinatesLongLat::~NEVCoordinatesLongLat()
{
}
#endif

/**
 *    TypeAssignment : NEVDRPositionData
 *    Class destructor
 */
#ifndef asnCodBalloc
NEVDRPositionData::~NEVDRPositionData()
{
   delete(longLat);
   delete(fixTime);
}
#endif

/**
 *    TypeAssignment : NEVDRVehiclePosition
 *    Class destructor
 */
#ifndef asnCodBalloc
NEVDRVehiclePosition__C::~NEVDRVehiclePosition__C()
{
}
#endif

#ifndef asnCodBalloc
asncnoValidData::~asncnoValidData()
{
}
#endif

#ifndef asnCodBalloc
asncdrPosition::~asncdrPosition()
{
   delete(longLat);
   delete(fixTime);
}
#endif

#ifndef asnCodBalloc
NEVDRVehiclePosition::~NEVDRVehiclePosition()
{
      delete(value);
}
#endif

/**
 *    TypeAssignment : NEVDateTime
 *    Class destructor
 */
#ifndef asnCodBalloc
NEVDateTime::~NEVDateTime()
{
}
#endif

/**
 *    TypeAssignment : NEVServiceData
 *    Class destructor
 */
#ifndef asnCodBalloc
NEVServiceData::~NEVServiceData()
{
   delete(position);
   delete(ecuData);
}
#endif

/**
 *    TypeAssignment : Configuration
 *    Class destructor
 */
#ifndef asnCodBalloc
asncConfiguration__itemss::~asncConfiguration__itemss()
{
}
#endif

#ifndef asnCodBalloc
Configuration::~Configuration()
{
}
#endif

/**
 *    TypeAssignment : ConfigurationItem
 *    Class destructor
 */
#ifndef asnCodBalloc
asncConfigurationItem__parameterss::~asncConfigurationItem__parameterss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
ConfigurationItem::~ConfigurationItem()
{
}
#endif

/**
 *    TypeAssignment : ContactInfo
 *    Class destructor
 */
#ifndef asnCodBalloc
ContactInfo::~ContactInfo()
{
   delete(address);
}
#endif

/**
 *    TypeAssignment : Error
 *    Class destructor
 */
#ifndef asnCodBalloc
Error::~Error()
{
}
#endif

/**
 *    TypeAssignment : EventAction
 *    Class destructor
 */
#ifndef asnCodBalloc
EventAction::~EventAction()
{
}
#endif

/**
 *    TypeAssignment : EventRule
 *    Class destructor
 */
#ifndef asnCodBalloc
asncconditionss::~asncconditionss()
{
}
#endif

#ifndef asnCodBalloc
EventRule::~EventRule()
{
   delete(startTime);
   delete(endTime);
   delete(action);
}
#endif

/**
 *    TypeAssignment : GeneralMessage
 *    Class destructor
 */
#ifndef asnCodBalloc
GeneralMessage__C::~GeneralMessage__C()
{
}
#endif

#ifndef asnCodBalloc
asncGeneralMessage__message::~asncGeneralMessage__message()
{
}
#endif

#ifndef asnCodBalloc
asncocetMessage::~asncocetMessage()
{
}
#endif

#ifndef asnCodBalloc
GeneralMessage::~GeneralMessage()
{
      delete(value);
}
#endif

/**
 *    TypeAssignment : Notification
 *    Class destructor
 */
#ifndef asnCodBalloc
asncNotification__parameterss::~asncNotification__parameterss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
Notification::~Notification()
{
   delete(time);
}
#endif

/**
 *    TypeAssignment : OTA
 *    Class destructor
 */
#ifndef asnCodBalloc
OTA::~OTA()
{
}
#endif

/**
 *    TypeAssignment : PointOfInterest
 *    Class destructor
 */
#ifndef asnCodBalloc
asncattributess::~asncattributess()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
PointOfInterest::~PointOfInterest()
{
   delete(position);
   delete(contactInfo);
}
#endif

/**
 *    TypeAssignment : Position
 *    Class destructor
 */
#ifndef asnCodBalloc
Position::~Position()
{
}
#endif

/**
 *    TypeAssignment : PostAddress
 *    Class destructor
 */
#ifndef asnCodBalloc
PostAddress::~PostAddress()
{
}
#endif

/**
 *    TypeAssignment : RuleCondition
 *    Class destructor
 */
#ifndef asnCodBalloc
RuleCondition::~RuleCondition()
{
}
#endif

/**
 *    TypeAssignment : ServiceData
 *    Class destructor
 */
#ifndef asnCodBalloc
asncServiceData__serviceParameterss::~asncServiceData__serviceParameterss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
asncpoiss::~asncpoiss()
{
   delete(position);
   delete(contactInfo);
}
#endif

#ifndef asnCodBalloc
asnctripFragmentss::~asnctripFragmentss()
{
   delete(startTime);
   delete(startPosition);
   delete(endTime);
   delete(endPosition);
}
#endif

#ifndef asnCodBalloc
asnctrackPointss::~asnctrackPointss()
{
   delete(systemTime);
   delete(position);
}
#endif

#ifndef asnCodBalloc
ServiceData::~ServiceData()
{
   delete(serviceTrigger);
   delete(serviceResult);
   delete(serviceStatus);
   delete(message);
   delete(configuration);
   delete(vehicleStatus);
   delete(ota);
   delete(fota);
   delete(rvdc);
   delete(trip);
   delete(nevServiceData);
   delete(eventRule);
   delete(timerData);
}
#endif

/**
 *    TypeAssignment : ServiceParameter
 *    Class destructor
 */
#ifndef asnCodBalloc
ServiceParameter::~ServiceParameter()
{
   delete(timestampVal);
}
#endif

/**
 *    TypeAssignment : ServiceResult
 *    Class destructor
 */
#ifndef asnCodBalloc
ServiceResult::~ServiceResult()
{
   delete(error);
}
#endif

/**
 *    TypeAssignment : ServiceStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
ServiceStatus::~ServiceStatus()
{
}
#endif

/**
 *    TypeAssignment : ServiceTrigger
 *    Class destructor
 */
#ifndef asnCodBalloc
ServiceTrigger::~ServiceTrigger()
{
   delete(scheduledTime);
   delete(endTime);
}
#endif

/**
 *    TypeAssignment : TimerData
 *    Class destructor
 */
#ifndef asnCodBalloc
asnctimerss::~asnctimerss()
{
}
#endif

#ifndef asnCodBalloc
TimerData::~TimerData()
{
}
#endif

/**
 *    TypeAssignment : TimerInfo
 *    Class destructor
 */
#ifndef asnCodBalloc
TimerInfo::~TimerInfo()
{
}
#endif

/**
 *    TypeAssignment : TrackPoint
 *    Class destructor
 */
#ifndef asnCodBalloc
TrackPoint::~TrackPoint()
{
   delete(systemTime);
   delete(position);
}
#endif

/**
 *    TypeAssignment : Trip
 *    Class destructor
 */
#ifndef asnCodBalloc
asnctrackpointss::~asnctrackpointss()
{
   delete(systemTime);
   delete(position);
}
#endif

#ifndef asnCodBalloc
asncwaypointss::~asncwaypointss()
{
}
#endif

#ifndef asnCodBalloc
Trip::~Trip()
{
   delete(startTime);
   delete(endTime);
}
#endif

/**
 *    TypeAssignment : TripFragment
 *    Class destructor
 */
#ifndef asnCodBalloc
TripFragment::~TripFragment()
{
   delete(startTime);
   delete(startPosition);
   delete(endTime);
   delete(endPosition);
}
#endif

/**
 *    TypeAssignment : AdditionalStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
asncAdditionalStatus__signalss::~asncAdditionalStatus__signalss()
{
   delete(collectTime);
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
AdditionalStatus::~AdditionalStatus()
{
   delete(confAndId);
   delete(towStatus);
}
#endif

/**
 *    TypeAssignment : BasicVehicleStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
BasicVehicleStatus::~BasicVehicleStatus()
{
   delete(position);
}
#endif

/**
 *    TypeAssignment : BatteryStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
BatteryStatus::~BatteryStatus()
{
}
#endif

/**
 *    TypeAssignment : CarConfig
 *    Class destructor
 */
#ifndef asnCodBalloc
asncCarConfig__itemss::~asncCarConfig__itemss()
{
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
CarConfig::~CarConfig()
{
}
#endif

/**
 *    TypeAssignment : ClimateStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
ClimateStatus::~ClimateStatus()
{
   delete(fragStrs);
}
#endif

/**
 *    TypeAssignment : ConfigurationAndIdentity
 *    Class destructor
 */
#ifndef asnCodBalloc
ConfigurationAndIdentity::~ConfigurationAndIdentity()
{
}
#endif

/**
 *    TypeAssignment : ConnectivityInfo
 *    Class destructor
 */
#ifndef asnCodBalloc
ConnectivityInfo::~ConnectivityInfo()
{
   delete(connectTime);
   delete(connectPosition);
}
#endif

/**
 *    TypeAssignment : ConnectivityStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
asncconnectEstablishedLists::~asncconnectEstablishedLists()
{
   delete(connectTime);
   delete(connectPosition);
}
#endif

#ifndef asnCodBalloc
asnclostConnectionsLists::~asnclostConnectionsLists()
{
   delete(connectTime);
   delete(connectPosition);
}
#endif

#ifndef asnCodBalloc
ConnectivityStatus::~ConnectivityStatus()
{
   delete(wakeupTime);
   delete(wPosition);
   delete(sleeptime);
   delete(sPosition);
}
#endif

/**
 *    TypeAssignment : DiagnosticTroubleCode
 *    Class destructor
 */
#ifndef asnCodBalloc
DiagnosticTroubleCode::~DiagnosticTroubleCode()
{
   delete(lastFail);
   delete(firtFail);
}
#endif

/**
 *    TypeAssignment : ECUDiagnostic
 *    Class destructor
 */
#ifndef asnCodBalloc
asncdtcss::~asncdtcss()
{
   delete(lastFail);
   delete(firtFail);
}
#endif

#ifndef asnCodBalloc
ECUDiagnostic::~ECUDiagnostic()
{
}
#endif

/**
 *    TypeAssignment : ECUDiagnostics
 *    Class destructor
 */
#ifndef asnCodBalloc
asncECUDiagnosticss::~asncECUDiagnosticss()
{
}
#endif

#ifndef asnCodBalloc
ECUDiagnostics::~ECUDiagnostics()
{
}
#endif

/**
 *    TypeAssignment : EcuWarningMessages
 *    Class destructor
 */
#ifndef asnCodBalloc
asncEcuWarningMessagess::~asncEcuWarningMessagess()
{
   delete(collectTime);
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
EcuWarningMessages::~EcuWarningMessages()
{
}
#endif

/**
 *    TypeAssignment : ElectricStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
ElectricStatus::~ElectricStatus()
{
}
#endif

/**
 *    TypeAssignment : FragItem
 *    Class destructor
 */
#ifndef asnCodBalloc
FragItem::~FragItem()
{
}
#endif

/**
 *    TypeAssignment : FragStrs
 *    Class destructor
 */
#ifndef asnCodBalloc
asncFragStrs__itemss::~asncFragStrs__itemss()
{
}
#endif

#ifndef asnCodBalloc
FragStrs::~FragStrs()
{
}
#endif

/**
 *    TypeAssignment : GenericVehicleSignal
 *    Class destructor
 */
#ifndef asnCodBalloc
GenericVehicleSignal::~GenericVehicleSignal()
{
   delete(collectTime);
   delete(timestampVal);
}
#endif

/**
 *    TypeAssignment : LockStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
LockStatus::~LockStatus()
{
}
#endif

/**
 *    TypeAssignment : MaintenanceStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
MaintenanceStatus::~MaintenanceStatus()
{
   delete(mainBatteryStatus);
}
#endif

/**
 *    TypeAssignment : NetworkAccessStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
NetworkAccessStatus::~NetworkAccessStatus()
{
   delete(simInfo);
}
#endif

/**
 *    TypeAssignment : OEMMSD
 *    Class destructor
 */
#ifndef asnCodBalloc
asncrecentPositionss::~asncrecentPositionss()
{
}
#endif

#ifndef asnCodBalloc
asncOEMMSD__signalss::~asncOEMMSD__signalss()
{
   delete(collectTime);
   delete(timestampVal);
}
#endif

#ifndef asnCodBalloc
OEMMSD::~OEMMSD()
{
   delete(position);
}
#endif

/**
 *    TypeAssignment : PollutionStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
PollutionStatus::~PollutionStatus()
{
}
#endif

/**
 *    TypeAssignment : RunningStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
RunningStatus::~RunningStatus()
{
}
#endif

/**
 *    TypeAssignment : SIMInfo
 *    Class destructor
 */
#ifndef asnCodBalloc
SIMInfo::~SIMInfo()
{
}
#endif

/**
 *    TypeAssignment : TEMStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
TEMStatus::~TEMStatus()
{
   delete(diagnostics);
   delete(backupBattery);
   delete(sleepCycleNextWakeupTime);
   delete(networkAccessStatus);
   delete(connectivityStatus);
}
#endif

/**
 *    TypeAssignment : TheftNotification
 *    Class destructor
 */
#ifndef asnCodBalloc
TheftNotification::~TheftNotification()
{
   delete(time);
}
#endif

/**
 *    TypeAssignment : TowStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
TowStatus::~TowStatus()
{
}
#endif

/**
 *    TypeAssignment : VehicleStatus
 *    Class destructor
 */
#ifndef asnCodBalloc
VehicleStatus::~VehicleStatus()
{
   delete(basicVehicleStatus);
   delete(lockStatus);
   delete(maintenanceStatus);
   delete(runningStatus);
   delete(climateStatus);
   delete(electricStatus);
   delete(pollutionStatus);
   delete(temStatus);
   delete(carConfig);
   delete(additionalStatus);
   delete(msd);
   delete(theftNotification);
   delete(notification);
}
#endif


}
